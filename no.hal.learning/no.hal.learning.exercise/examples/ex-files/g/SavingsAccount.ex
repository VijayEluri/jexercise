<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:exercise="platform:/plugin/no.hal.learning.exercise.model/model/exercise.ecore" xmlns:jdt="platform:/plugin/no.hal.learning.exercise.jdt/model/jdt-exercise.ecore" xmlns:junit="platform:/plugin/no.hal.learning.exercise.junit/model/junit-exercise.ecore" xmlns:workbench="platform:/plugin/no.hal.learning.exercise.workbench/model/workbench-exercise.ecore">
  <exercise:Exercise>
    <parts xsi:type="exercise:ExercisePart" title="SavingsAccount">
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Get the source code for the Account interface from the wiki."/>
        <a xsi:type="jdt:JdtSourceEditAnswer" className="inheritance.Account"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Write the source code for the SavingsAccount superclass."/>
        <a xsi:type="jdt:JdtSourceEditAnswer" className="inheritance.SavingsAccount"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Write the source code for the BSU class."/>
        <a xsi:type="jdt:JdtSourceEditAnswer" className="inheritance.BSU"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Write the source code for the ForeldreSpar class."/>
        <a xsi:type="jdt:JdtSourceEditAnswer" className="inheritance.ForeldreSpar"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Run the SavingsAccount JUnit test."/>
        <a xsi:type="junit:JunitTestAnswer" testRunName="inheritance.SavingsAccountTest"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Run the BSU JUnit test."/>
        <a xsi:type="junit:JunitTestAnswer" testRunName="inheritance.BSUTest"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Run the ForeldreSpar JUnit test."/>
        <a xsi:type="junit:JunitTestAnswer" testRunName="inheritance.ForeldreSparTest"/>
      </tasks>
    </parts>
    <parts xsi:type="exercise:ExercisePart" title="Tool usage">
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use breakpoints to debug code."/>
        <a xsi:type="workbench:DebugEventAnswer" action="suspend.breakpoint"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use the debug command Step Over"/>
        <a xsi:type="workbench:CommandExecutionAnswer" elementId="org.eclipse.debug.ui.commands.StepOver" action="executeSuccess"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use the debug command Step Into"/>
        <a xsi:type="workbench:CommandExecutionAnswer" elementId="org.eclipse.debug.ui.commands.StepInto" action="executeSuccess"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use the Variables view"/>
        <a xsi:type="workbench:PartTaskAnswer" elementId="org.eclipse.debug.ui.VariableView" action="activated"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Run the SavingsAccount class."/>
        <a xsi:type="jdt:JdtLaunchAnswer" className="inheritance.SavingsAccount"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Run the BSU class."/>
        <a xsi:type="jdt:JdtLaunchAnswer" className="inheritance.BSU"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Run the ForeldreSpar class."/>
        <a xsi:type="jdt:JdtLaunchAnswer" className="inheritance.ForeldreSpar"/>
      </tasks>
    </parts>
  </exercise:Exercise>
  <exercise:ExerciseProposals exercise="/0">
    <proposals exercisePart="/0/@parts.0">
      <proposals xsi:type="jdt:JdtSourceEditProposal" question="/0/@parts.0/@tasks.0/@q" answer="/0/@parts.0/@tasks.0/@a">
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459861912601" sourceCode="package inheritance;&#xA;&#xA;public interface Account {&#xA;&#x9;public void deposit(double amount);&#xA;    public void withdraw(double amount);&#xA;    public double getBalance();&#xA;}&#xA;" sizeMeasure="7"/>
      </proposals>
      <proposals xsi:type="jdt:JdtSourceEditProposal" question="/0/@parts.0/@tasks.1/@q" answer="/0/@parts.0/@tasks.1/@a">
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459850416376" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;private int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="44"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459850500189" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;private int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="45"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459862759939" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;private int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="43"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459862812263" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="43"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459862983031" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else if((balance - amount) &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;//&#x9;&#x9;else{&#xA;//&#x9;&#x9;&#x9;balance -= amount;&#xA;//&#x9;&#x9;}&#xA;//&#x9;&#x9;if(balance &lt; 0){&#xA;//&#x9;&#x9;&#x9;balance += amount;&#xA;//&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;//&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="47"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863006459" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else if((balance - amount) &lt; 0){&#xA;//&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;//&#x9;&#x9;else{&#xA;//&#x9;&#x9;&#x9;balance -= amount;&#xA;//&#x9;&#x9;}&#xA;//&#x9;&#x9;if(balance &lt; 0){&#xA;//&#x9;&#x9;&#x9;balance += amount;&#xA;//&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;//&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="47"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863050576" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else if((balance - amount) &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;}&#xA;//&#x9;&#x9;else{&#xA;//&#x9;&#x9;&#x9;balance -= amount;&#xA;//&#x9;&#x9;}&#xA;//&#x9;&#x9;if(balance &lt; 0){&#xA;//&#x9;&#x9;&#x9;balance += amount;&#xA;//&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;//&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="49"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863064687" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="44"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863086638" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="44"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863094699" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="43"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864416149" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="44"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864777328" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="43"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864840424" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="46"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459865272104" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="42"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459891459757" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="44"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892254488" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="46"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892313555" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="48"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892444217" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="48"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893093694" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="53"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893227927" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="52"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893625791" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;//&#x9;@Override&#xA;//&#x9;public void withdraw(double amount) {&#xA;//&#x9;&#x9;if(amount &lt; 0){&#xA;//&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;//&#x9;&#x9;} &#xA;//&#x9;&#x9;balance -= amount;&#xA;//&#x9;&#x9;if(balance &lt; 0 || getRemainingWithdrawals() &lt;= 0){&#xA;//&#x9;&#x9;&#x9;balance += amount;&#xA;//&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;//&#x9;&#x9;}&#xA;//&#x9;&#x9;currentWithdrawals ++;&#xA;//&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="66"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893646983" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="54"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893866110" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;private boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance += amount;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit2(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="80"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893969364" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;private boolean newYear = false;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit2(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance += amount;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="80"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893988073" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;protected boolean newYear ;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit2(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance += amount;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="80"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894019867" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;protected double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="55"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894091994" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="55"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894317151" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="57"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894394016" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;protected boolean newYear;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed ){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;newYear = true;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="62"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894452285" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed ){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="60"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459939694459" sourceCode="package inheritance;&#xA;&#xA;public class SavingsAccount implements Account{&#xA;&#xA;&#x9;protected int balance;&#xA;&#x9;private double interestRate;&#xA;&#x9;protected double depositAmount;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;protected int currentWithdrawals;&#xA;&#x9;protected int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public SavingsAccount(double interestRate){&#xA;&#x9;&#x9;balance = 0;&#xA;&#x9;&#x9;this.interestRate = interestRate;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed ){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || (this instanceof BSU &amp;&amp; amount > depositAmount) ||(this instanceof ForeldreSpar &amp;&amp; (maxWithdrawals - currentWithdrawals) &lt;= 0)){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;@Override&#xA;&#x9;public double getBalance() {&#xA;&#x9;&#x9;return balance;&#xA;&#x9;}&#xA;&#xA;&#x9;public void endYearUpdate(){&#xA;&#x9;&#x9;balance += balance * interestRate;&#xA;&#x9;&#x9;if(this instanceof BSU){&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} else if(this instanceof ForeldreSpar){&#xA;&#x9;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" sizeMeasure="58"/>
      </proposals>
      <proposals xsi:type="jdt:JdtSourceEditProposal" question="/0/@parts.0/@tasks.2/@q" answer="/0/@parts.0/@tasks.2/@a">
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459851467232" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;}&#xA;" sizeMeasure="5" errorCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459852039355" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction;&#xA;&#x9;&#x9;super.getBalance();&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;}&#xA;" sizeMeasure="15" errorCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459852046805" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = 0;&#xA;&#x9;&#x9;super.getBalance();&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;}&#xA;" sizeMeasure="15"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459862814216" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" sizeMeasure="26"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459862925599" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else if(amount > amountAllowed){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Exceed the max amount allowed for this BSU account.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" sizeMeasure="31"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863105086" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else if(amount > amountAllowed){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Exceed the max amount allowed for this BSU account.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" sizeMeasure="30"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863319527" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0 || amount > amountAllowed){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive, and cannot exceed the max amount allowed.&quot;);&#xA;&#x9;&#x9;} else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="25"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863384512" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else if(amount > amountAllowed){&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="28"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863443590" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} else if(super.getBalance() > amountAllowed){&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="28"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863569026" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;if(super.getBalance() > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="29" errorCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863580922" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;if(super.getBalance() > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="28"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863687170" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="28"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863760171" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;//&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="28"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459863768967" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="28"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864412039" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;protected double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="28"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864777313" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="29"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864884622" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(!newYear){&#xA;&#x9;&#x9;&#x9;balance += amount;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="32"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459865128397" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private boolean depositAllowed = true;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;depositAllowed = true;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;depositAllowed = false;&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="34" warningCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459865215358" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private boolean depositAllowed = true;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;depositAllowed = true;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;&#x9;depositAllowed = false;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="36" warningCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459865263165" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="29"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459865402403" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="29"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459891459745" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="38"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459891743303" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;&#x9;balance -= getTaxDeduction();&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="39"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459891752288" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;//&#x9;&#x9;&#x9;balance -= getTaxDeduction();&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="39"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459891794066" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="38"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892048280" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;private double depositAmount;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="53" warningCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892111847" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;private double depositAmount;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || balance > depositAmount){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="54"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892142132" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;private double depositAmount;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || amount > depositAmount){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="54"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892269420" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || amount > depositAmount){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="52"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892444202" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;//&#x9;@Override&#xA;//&#x9;public void withdraw(double amount) {&#xA;//&#x9;&#x9;if(amount &lt; 0){&#xA;//&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;//&#x9;&#x9;} &#xA;//&#x9;&#x9;balance -= amount;&#xA;//&#x9;&#x9;if(balance &lt; 0 || amount > depositAmount){&#xA;//&#x9;&#x9;&#x9;balance += amount;&#xA;//&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;//&#x9;&#x9;}&#xA;//&#x9;&#x9;&#xA;//&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="52"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892452932" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = super.getBalance()*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="40"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459892743033" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="40"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893866091" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="20" errorCount="1" warningCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893886637" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="19" warningCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893988061" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="20" warningCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894028123" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double amountAllowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.amountAllowed = amountAllowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="40"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894351154" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;//&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double allowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;amountAllowed = allowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed &amp;&amp; !newYear){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;&#x9;&#x9;if(newYear){&#xA;&#x9;&#x9;&#x9;newYear = false;&#xA;//&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="40"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894371058" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;//&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double allowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;amountAllowed = allowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public void deposit(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;if(balance > amountAllowed ){&#xA;&#x9;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;depositAmount += amount;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;//&#x9;&#x9;if(newYear){&#xA;//&#x9;&#x9;&#x9;newYear = false;&#xA;////&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;//&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="40"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894410362" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;//&#x9;private double amountAllowed;&#xA;&#x9;&#xA;&#x9;public BSU(double interestRate, double allowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;amountAllowed = allowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;&#xA;//&#x9;@Override&#xA;//&#x9;public void deposit(double amount) {&#xA;//&#x9;&#x9;if(amount &lt; 0){&#xA;//&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;//&#x9;&#x9;}&#xA;//&#x9;&#x9;balance += amount;&#xA;//&#x9;&#x9;if(balance > amountAllowed ){&#xA;//&#x9;&#x9;&#x9;balance -= amount;&#xA;//&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Exceed the max amount.&quot;);&#xA;//&#x9;&#x9;}&#xA;//&#x9;&#x9;depositAmount += amount;&#xA;//&#x9;&#x9;&#xA;&#x9;&#x9;//Check if the year has passed&#xA;//&#x9;&#x9;if(newYear){&#xA;//&#x9;&#x9;&#x9;newYear = false;&#xA;////&#x9;&#x9;&#x9;amountAllowed += balance;&#xA;//&#x9;&#x9;} &#xA;//&#x9;&#x9;&#xA;//&#x9;}&#xA;&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="40"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894427863" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;public BSU(double interestRate, double allowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;amountAllowed = allowed;&#xA;&#x9;&#x9;newYear = false;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;}&#xA;" sizeMeasure="16"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459894452274" sourceCode="package inheritance;&#xA;&#xA;public class BSU extends SavingsAccount {&#xA;&#xA;&#x9;public BSU(double interestRate, double allowed) {&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;amountAllowed = allowed;&#xA;&#x9;&#x9;depositAmount = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public double getTaxDeduction(){&#xA;&#x9;&#x9;double taxDeduction = depositAmount*0.2;&#xA;&#x9;&#x9;return taxDeduction;&#xA;&#x9;}&#xA;}&#xA;" sizeMeasure="15"/>
      </proposals>
      <proposals xsi:type="jdt:JdtSourceEditProposal" question="/0/@parts.0/@tasks.3/@q" answer="/0/@parts.0/@tasks.3/@a">
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459861951668" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#xA;}&#xA;" sizeMeasure="5" errorCount="1"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459862991189" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#xA;&#x9;private int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public ForeldreSpar(double interestRate, int maxWithdrawals){&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.maxWithdrawals = maxWithdrawals;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getRemainingWithdrawls(){&#xA;&#x9;&#x9;int remainingWithdrawls;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return 0;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="18" warningCount="2"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864244064" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#xA;&#x9;private int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public ForeldreSpar(double interestRate, int maxWithdrawals){&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.maxWithdrawals = maxWithdrawals;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getRemainingWithdrawals(){&#xA;&#x9;&#x9;int remainingWithdrawls;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return 0;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="18" warningCount="2"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459864276963" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#xA;&#x9;private int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public ForeldreSpar(double interestRate, int maxWithdrawals){&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.maxWithdrawals = maxWithdrawals;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getRemainingWithdrawals(){&#xA;&#x9;&#x9;int remainingWithdrawls = maxWithdrawals;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return remainingWithdrawls;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="18"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893117438" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#xA;&#x9;private int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public ForeldreSpar(double interestRate, int maxWithdrawals){&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.maxWithdrawals = maxWithdrawals;&#xA;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getRemainingWithdrawals(){&#xA;&#x9;&#x9;return maxWithdrawals - currentWithdrawals;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="17"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893294348" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#xA;&#x9;private int maxWithdrawals;&#xA;&#x9;&#xA;&#x9;public ForeldreSpar(double interestRate, int maxWithdrawals){&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;this.maxWithdrawals = maxWithdrawals;&#xA;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getRemainingWithdrawals(){&#xA;&#x9;&#x9;return maxWithdrawals - currentWithdrawals;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public void withdraw(double amount) {&#xA;&#x9;&#x9;if(amount &lt; 0){&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Amount must be positive.&quot;);&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;balance -= amount;&#xA;&#x9;&#x9;if(balance &lt; 0 || getRemainingWithdrawals() &lt;= 0){&#xA;&#x9;&#x9;&#x9;balance += amount;&#xA;&#x9;&#x9;&#x9;throw new IllegalStateException(&quot;Balance must be positive.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;currentWithdrawals ++;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="30"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893625781" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#xA;&#x9;&#xA;&#x9;public ForeldreSpar(double interestRate, int max){&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;maxWithdrawals = max;&#xA;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getRemainingWithdrawals(){&#xA;&#x9;&#x9;return maxWithdrawals - currentWithdrawals;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="16"/>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1459893659065" sourceCode="package inheritance;&#xA;&#xA;public class ForeldreSpar extends SavingsAccount {&#xA;&#x9;&#xA;&#x9;public ForeldreSpar(double interestRate, int max){&#xA;&#x9;&#x9;super(interestRate);&#xA;&#x9;&#x9;maxWithdrawals = max;&#xA;&#x9;&#x9;currentWithdrawals = 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getRemainingWithdrawals(){&#xA;&#x9;&#x9;return maxWithdrawals - currentWithdrawals;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;" sizeMeasure="15"/>
      </proposals>
      <proposals xsi:type="junit:JunitTestProposal" question="/0/@parts.0/@tasks.4/@q" answer="/0/@parts.0/@tasks.4/@a" completion="1.0">
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459850446960" completion="0.75" successCount="3" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459850500465" completion="0.875" successCount="7" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459862991738" completion="0.5" successCount="2" failureCount="2"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863006910" completion="0.625" successCount="5" failureCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863050870" completion="0.6666666666666666" successCount="8" failureCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863064939" completion="0.75" successCount="12" failureCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863086899" completion="0.8" successCount="16" failureCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894041991" completion="1.0" successCount="4"/>
      </proposals>
      <proposals xsi:type="junit:JunitTestProposal" question="/0/@parts.0/@tasks.5/@q" answer="/0/@parts.0/@tasks.5/@a" completion="0.5238095238095238">
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863130636" completion="0.0" failureCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863319835" completion="0.0" failureCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863384797" completion="0.0" failureCount="5"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863443832" completion="0.0" failureCount="6"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863569357" completion="0.0" failureCount="6" errorCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863581184" completion="0.0" failureCount="6" errorCount="2"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863687421" completion="0.0" failureCount="6" errorCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863760434" completion="0.0" failureCount="7" errorCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459863770697" completion="0.0" failureCount="7" errorCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459864777690" completion="0.0" failureCount="8" errorCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459864884929" completion="0.0" failureCount="9" errorCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459865128830" completion="0.0" failureCount="10" errorCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459865215623" completion="0.0" failureCount="11" errorCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459891460312" completion="1.0" successCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459891462682" completion="0.5" successCount="1" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459891743567" completion="0.3333333333333333" successCount="1" failureCount="2"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459891752606" completion="0.5" successCount="2" failureCount="2"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459891794301" completion="0.4" successCount="2" failureCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892048559" completion="0.3333333333333333" successCount="2" failureCount="4"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892112175" completion="0.2857142857142857" successCount="2" failureCount="5"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892142380" completion="0.25" successCount="2" failureCount="6"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892313820" completion="0.3333333333333333" successCount="3" failureCount="6"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892315675" completion="0.3" successCount="3" failureCount="7"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892444495" completion="0.2727272727272727" successCount="3" failureCount="8"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892445463" completion="0.3333333333333333" successCount="4" failureCount="8"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459892743299" completion="0.38461538461538464" successCount="5" failureCount="8"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893866505" completion="0.3125" successCount="5" failureCount="8" errorCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893897528" completion="0.2631578947368421" successCount="5" failureCount="8" errorCount="6"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893969601" completion="0.22727272727272727" successCount="5" failureCount="8" errorCount="9"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893988347" completion="0.2" successCount="5" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894031300" completion="0.2857142857142857" successCount="8" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894351440" completion="0.3103448275862069" successCount="9" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894352668" completion="0.3333333333333333" successCount="10" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894353908" completion="0.3548387096774194" successCount="11" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894371285" completion="0.375" successCount="12" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894372229" completion="0.3939393939393939" successCount="13" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894373245" completion="0.4117647058823529" successCount="14" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894394264" completion="0.42857142857142855" successCount="15" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894410651" completion="0.4444444444444444" successCount="16" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894411559" completion="0.4594594594594595" successCount="17" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894412524" completion="0.47368421052631576" successCount="18" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894413429" completion="0.48717948717948717" successCount="19" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894452581" completion="0.5" successCount="20" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894453526" completion="0.5121951219512195" successCount="21" failureCount="8" errorCount="12"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894454467" completion="0.5238095238095238" successCount="22" failureCount="8" errorCount="12"/>
      </proposals>
      <proposals xsi:type="junit:JunitTestProposal" question="/0/@parts.0/@tasks.6/@q" answer="/0/@parts.0/@tasks.6/@a" completion="0.8333333333333334">
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893121925" completion="0.0" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893294674" completion="0.5" successCount="1" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893297715" completion="0.6666666666666666" successCount="2" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893626128" completion="0.75" successCount="3" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459893627091" completion="0.8" successCount="4" failureCount="1"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1459894053171" completion="0.8333333333333334" successCount="5" failureCount="1"/>
      </proposals>
    </proposals>
    <proposals exercisePart="/0/@parts.1">
      <proposals xsi:type="workbench:DebugEventProposal" question="/0/@parts.1/@tasks.0/@q" answer="/0/@parts.1/@tasks.0/@a" completion="0.0" performedCount="3">
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
      </proposals>
      <proposals xsi:type="workbench:CommandExecutionProposal" question="/0/@parts.1/@tasks.1/@q" answer="/0/@parts.1/@tasks.1/@a" completion="0.0" performedCount="29">
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
        <attempts timestamp="-1" completion="0.0"/>
      </proposals>
      <proposals xsi:type="workbench:CommandExecutionProposal" question="/0/@parts.1/@tasks.2/@q" answer="/0/@parts.1/@tasks.2/@a"/>
      <proposals xsi:type="workbench:PartTaskProposal" question="/0/@parts.1/@tasks.3/@q" answer="/0/@parts.1/@tasks.3/@a" completion="0.0" performedCount="1">
        <attempts timestamp="-1" completion="0.0"/>
      </proposals>
      <proposals xsi:type="jdt:JdtLaunchProposal" question="/0/@parts.1/@tasks.4/@q" answer="/0/@parts.1/@tasks.4/@a"/>
      <proposals xsi:type="jdt:JdtLaunchProposal" question="/0/@parts.1/@tasks.5/@q" answer="/0/@parts.1/@tasks.5/@a"/>
      <proposals xsi:type="jdt:JdtLaunchProposal" question="/0/@parts.1/@tasks.6/@q" answer="/0/@parts.1/@tasks.6/@a"/>
    </proposals>
  </exercise:ExerciseProposals>
</xmi:XMI>
