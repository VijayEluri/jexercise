module no.hal.learning.exercise.xtext.GenerateXercise

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "no.hal.learning.exercise.xtext"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "no.hal.learning.exercise.xtext.Xercise"
			fileExtensions = "xex"
			referencedResource = "platform:/resource/no.hal.learning.exercise.model/model/exercise.genmodel"
			referencedResource = "platform:/resource/no.hal.learning.exercise.model/model/quiz.genmodel"
			referencedResource = "platform:/resource/no.hal.learning.exercise.workbench/model/workbench-exercise.genmodel"
			referencedResource = "platform:/resource/no.hal.learning.exercise.junit/model/junit-exercise.genmodel"
			referencedResource = "platform:/resource/no.hal.learning.exercise.jdt/model/jdt-exercise.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			fragment = org.eclipse.xtext.generator.adapter.FragmentAdapter {
				fragment = org.eclipse.xtext.generator.ecore2xtext.FormatterFragment {}
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
