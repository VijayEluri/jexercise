package no.hal.jex.jextest.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import no.hal.jex.jextest.services.JexTestGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalJexTestParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'suite'", "'instance'", "'val'", "','", "'test'", "'with'", "'@'", "'='", "'state'", "'method'", "'('", "')'", "'sequence'", "'tests'", "'{'", "'}'", "'.'", "'#'", "';'", "'--'", "'-->'", "'throws'", "'callback'", "'to'", "'...'", "'interface'", "'abstract'", "'class'", "'extends'", "'implements'", "'=>'", "'<='", "'new'", "'++'", "'=='", "'!='", "'==='", "'!=='", "'?='", "'+='", "'-='", "'*='", "'/='", "'%='", "'<'", "'>'", "'>='", "'||'", "'&&'", "'instanceof'", "'->'", "'..<'", "'..'", "'<>'", "'?:'", "'+'", "'-'", "'*'", "'**'", "'/'", "'%'", "'!'", "'as'", "'::'", "'?.'", "'['", "']'", "'|'", "'if'", "'else'", "'switch'", "':'", "'default'", "'case'", "'for'", "'while'", "'do'", "'var'", "'static'", "'import'", "'extension'", "'super'", "'false'", "'true'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'?'", "'&'"
    };
    public static final int RULE_HEX=6;
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=5;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalJexTestParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalJexTestParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalJexTestParser.tokenNames; }
    public String getGrammarFileName() { return "InternalJexTest.g"; }



     	private JexTestGrammarAccess grammarAccess;
     	
        public InternalJexTestParser(TokenStream input, JexTestGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "JexTestSuite";	
       	}
       	
       	@Override
       	protected JexTestGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleJexTestSuite"
    // InternalJexTest.g:67:1: entryRuleJexTestSuite returns [EObject current=null] : iv_ruleJexTestSuite= ruleJexTestSuite EOF ;
    public final EObject entryRuleJexTestSuite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJexTestSuite = null;


        try {
            // InternalJexTest.g:68:2: (iv_ruleJexTestSuite= ruleJexTestSuite EOF )
            // InternalJexTest.g:69:2: iv_ruleJexTestSuite= ruleJexTestSuite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJexTestSuiteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJexTestSuite=ruleJexTestSuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJexTestSuite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJexTestSuite"


    // $ANTLR start "ruleJexTestSuite"
    // InternalJexTest.g:76:1: ruleJexTestSuite returns [EObject current=null] : ( () (otherlv_1= 'suite' ( (lv_suiteClassName_2_0= ruleQName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* ) | ( (lv_stateFunctions_9_0= ruleStateFunction ) ) | ( (lv_methods_10_0= ruleMethod ) ) )* ( (lv_testCases_11_0= ruleJexTestCase ) )* ) ;
    public final EObject ruleJexTestSuite() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_suiteClassName_2_0 = null;

        EObject lv_importSection_3_0 = null;

        EObject lv_instances_6_0 = null;

        EObject lv_instances_8_0 = null;

        EObject lv_stateFunctions_9_0 = null;

        EObject lv_methods_10_0 = null;

        EObject lv_testCases_11_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:79:28: ( ( () (otherlv_1= 'suite' ( (lv_suiteClassName_2_0= ruleQName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* ) | ( (lv_stateFunctions_9_0= ruleStateFunction ) ) | ( (lv_methods_10_0= ruleMethod ) ) )* ( (lv_testCases_11_0= ruleJexTestCase ) )* ) )
            // InternalJexTest.g:80:1: ( () (otherlv_1= 'suite' ( (lv_suiteClassName_2_0= ruleQName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* ) | ( (lv_stateFunctions_9_0= ruleStateFunction ) ) | ( (lv_methods_10_0= ruleMethod ) ) )* ( (lv_testCases_11_0= ruleJexTestCase ) )* )
            {
            // InternalJexTest.g:80:1: ( () (otherlv_1= 'suite' ( (lv_suiteClassName_2_0= ruleQName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* ) | ( (lv_stateFunctions_9_0= ruleStateFunction ) ) | ( (lv_methods_10_0= ruleMethod ) ) )* ( (lv_testCases_11_0= ruleJexTestCase ) )* )
            // InternalJexTest.g:80:2: () (otherlv_1= 'suite' ( (lv_suiteClassName_2_0= ruleQName ) ) )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* ) | ( (lv_stateFunctions_9_0= ruleStateFunction ) ) | ( (lv_methods_10_0= ruleMethod ) ) )* ( (lv_testCases_11_0= ruleJexTestCase ) )*
            {
            // InternalJexTest.g:80:2: ()
            // InternalJexTest.g:81:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJexTestSuiteAccess().getJexTestSuiteAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:86:2: (otherlv_1= 'suite' ( (lv_suiteClassName_2_0= ruleQName ) ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==13) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalJexTest.g:86:4: otherlv_1= 'suite' ( (lv_suiteClassName_2_0= ruleQName ) )
                    {
                    otherlv_1=(Token)match(input,13,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJexTestSuiteAccess().getSuiteKeyword_1_0());
                          
                    }
                    // InternalJexTest.g:90:1: ( (lv_suiteClassName_2_0= ruleQName ) )
                    // InternalJexTest.g:91:1: (lv_suiteClassName_2_0= ruleQName )
                    {
                    // InternalJexTest.g:91:1: (lv_suiteClassName_2_0= ruleQName )
                    // InternalJexTest.g:92:3: lv_suiteClassName_2_0= ruleQName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJexTestSuiteAccess().getSuiteClassNameQNameParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_4);
                    lv_suiteClassName_2_0=ruleQName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJexTestSuiteRule());
                      	        }
                             		set(
                             			current, 
                             			"suiteClassName",
                              		lv_suiteClassName_2_0, 
                              		"no.hal.jex.jextest.JexTest.QName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:108:4: ( (lv_importSection_3_0= ruleXImportSection ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==92) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalJexTest.g:109:1: (lv_importSection_3_0= ruleXImportSection )
                    {
                    // InternalJexTest.g:109:1: (lv_importSection_3_0= ruleXImportSection )
                    // InternalJexTest.g:110:3: lv_importSection_3_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJexTestSuiteAccess().getImportSectionXImportSectionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_5);
                    lv_importSection_3_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJexTestSuiteRule());
                      	        }
                             		set(
                             			current, 
                             			"importSection",
                              		lv_importSection_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:126:3: ( ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* ) | ( (lv_stateFunctions_9_0= ruleStateFunction ) ) | ( (lv_methods_10_0= ruleMethod ) ) )*
            loop5:
            do {
                int alt5=4;
                switch ( input.LA(1) ) {
                case 14:
                case 15:
                    {
                    alt5=1;
                    }
                    break;
                case 21:
                    {
                    alt5=2;
                    }
                    break;
                case 22:
                    {
                    alt5=3;
                    }
                    break;

                }

                switch (alt5) {
            	case 1 :
            	    // InternalJexTest.g:126:4: ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* )
            	    {
            	    // InternalJexTest.g:126:4: ( (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )* )
            	    // InternalJexTest.g:126:5: (otherlv_4= 'instance' | otherlv_5= 'val' ) ( (lv_instances_6_0= ruleInstance ) ) (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )*
            	    {
            	    // InternalJexTest.g:126:5: (otherlv_4= 'instance' | otherlv_5= 'val' )
            	    int alt3=2;
            	    int LA3_0 = input.LA(1);

            	    if ( (LA3_0==14) ) {
            	        alt3=1;
            	    }
            	    else if ( (LA3_0==15) ) {
            	        alt3=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 3, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt3) {
            	        case 1 :
            	            // InternalJexTest.g:126:7: otherlv_4= 'instance'
            	            {
            	            otherlv_4=(Token)match(input,14,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_4, grammarAccess.getJexTestSuiteAccess().getInstanceKeyword_3_0_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalJexTest.g:131:7: otherlv_5= 'val'
            	            {
            	            otherlv_5=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_5, grammarAccess.getJexTestSuiteAccess().getValKeyword_3_0_0_1());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalJexTest.g:135:2: ( (lv_instances_6_0= ruleInstance ) )
            	    // InternalJexTest.g:136:1: (lv_instances_6_0= ruleInstance )
            	    {
            	    // InternalJexTest.g:136:1: (lv_instances_6_0= ruleInstance )
            	    // InternalJexTest.g:137:3: lv_instances_6_0= ruleInstance
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestSuiteAccess().getInstancesInstanceParserRuleCall_3_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_instances_6_0=ruleInstance();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestSuiteRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"instances",
            	              		lv_instances_6_0, 
            	              		"no.hal.jex.jextest.JexTest.Instance");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:153:2: (otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) ) )*
            	    loop4:
            	    do {
            	        int alt4=2;
            	        int LA4_0 = input.LA(1);

            	        if ( (LA4_0==16) ) {
            	            alt4=1;
            	        }


            	        switch (alt4) {
            	    	case 1 :
            	    	    // InternalJexTest.g:153:4: otherlv_7= ',' ( (lv_instances_8_0= ruleInstance ) )
            	    	    {
            	    	    otherlv_7=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	          	newLeafNode(otherlv_7, grammarAccess.getJexTestSuiteAccess().getCommaKeyword_3_0_2_0());
            	    	          
            	    	    }
            	    	    // InternalJexTest.g:157:1: ( (lv_instances_8_0= ruleInstance ) )
            	    	    // InternalJexTest.g:158:1: (lv_instances_8_0= ruleInstance )
            	    	    {
            	    	    // InternalJexTest.g:158:1: (lv_instances_8_0= ruleInstance )
            	    	    // InternalJexTest.g:159:3: lv_instances_8_0= ruleInstance
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getJexTestSuiteAccess().getInstancesInstanceParserRuleCall_3_0_2_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_7);
            	    	    lv_instances_8_0=ruleInstance();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getJexTestSuiteRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"instances",
            	    	              		lv_instances_8_0, 
            	    	              		"no.hal.jex.jextest.JexTest.Instance");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop4;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalJexTest.g:176:6: ( (lv_stateFunctions_9_0= ruleStateFunction ) )
            	    {
            	    // InternalJexTest.g:176:6: ( (lv_stateFunctions_9_0= ruleStateFunction ) )
            	    // InternalJexTest.g:177:1: (lv_stateFunctions_9_0= ruleStateFunction )
            	    {
            	    // InternalJexTest.g:177:1: (lv_stateFunctions_9_0= ruleStateFunction )
            	    // InternalJexTest.g:178:3: lv_stateFunctions_9_0= ruleStateFunction
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestSuiteAccess().getStateFunctionsStateFunctionParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_stateFunctions_9_0=ruleStateFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestSuiteRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"stateFunctions",
            	              		lv_stateFunctions_9_0, 
            	              		"no.hal.jex.jextest.JexTest.StateFunction");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalJexTest.g:195:6: ( (lv_methods_10_0= ruleMethod ) )
            	    {
            	    // InternalJexTest.g:195:6: ( (lv_methods_10_0= ruleMethod ) )
            	    // InternalJexTest.g:196:1: (lv_methods_10_0= ruleMethod )
            	    {
            	    // InternalJexTest.g:196:1: (lv_methods_10_0= ruleMethod )
            	    // InternalJexTest.g:197:3: lv_methods_10_0= ruleMethod
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestSuiteAccess().getMethodsMethodParserRuleCall_3_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_methods_10_0=ruleMethod();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestSuiteRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"methods",
            	              		lv_methods_10_0, 
            	              		"no.hal.jex.jextest.JexTest.Method");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalJexTest.g:213:4: ( (lv_testCases_11_0= ruleJexTestCase ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==17) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalJexTest.g:214:1: (lv_testCases_11_0= ruleJexTestCase )
            	    {
            	    // InternalJexTest.g:214:1: (lv_testCases_11_0= ruleJexTestCase )
            	    // InternalJexTest.g:215:3: lv_testCases_11_0= ruleJexTestCase
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestSuiteAccess().getTestCasesJexTestCaseParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_8);
            	    lv_testCases_11_0=ruleJexTestCase();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestSuiteRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"testCases",
            	              		lv_testCases_11_0, 
            	              		"no.hal.jex.jextest.JexTest.JexTestCase");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJexTestSuite"


    // $ANTLR start "entryRuleJexTestCase"
    // InternalJexTest.g:239:1: entryRuleJexTestCase returns [EObject current=null] : iv_ruleJexTestCase= ruleJexTestCase EOF ;
    public final EObject entryRuleJexTestCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJexTestCase = null;


        try {
            // InternalJexTest.g:240:2: (iv_ruleJexTestCase= ruleJexTestCase EOF )
            // InternalJexTest.g:241:2: iv_ruleJexTestCase= ruleJexTestCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJexTestCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJexTestCase=ruleJexTestCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJexTestCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJexTestCase"


    // $ANTLR start "ruleJexTestCase"
    // InternalJexTest.g:248:1: ruleJexTestCase returns [EObject current=null] : ( () otherlv_1= 'test' ( ( (lv_testedClasses_2_0= ruleTestedClass ) )* | ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) ) ) (otherlv_4= 'with' ( (lv_testClassName_5_0= ruleQName ) ) )? ( (lv_description_6_0= RULE_STRING ) )? (otherlv_7= '@' ( (lv_url_8_0= RULE_STRING ) ) )? ( (lv_importSection_9_0= ruleXImportSection ) )? ( ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* ) | ( (lv_stateFunctions_15_0= ruleStateFunction ) ) | ( (lv_testSequences_16_0= ruleJexTestSequence ) ) | ( (lv_methods_17_0= ruleMethod ) ) )* ) ;
    public final EObject ruleJexTestCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_description_6_0=null;
        Token otherlv_7=null;
        Token lv_url_8_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_testedClasses_2_0 = null;

        EObject lv_testedClassRef_3_0 = null;

        AntlrDatatypeRuleToken lv_testClassName_5_0 = null;

        EObject lv_importSection_9_0 = null;

        EObject lv_instances_12_0 = null;

        EObject lv_instances_14_0 = null;

        EObject lv_stateFunctions_15_0 = null;

        EObject lv_testSequences_16_0 = null;

        EObject lv_methods_17_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:251:28: ( ( () otherlv_1= 'test' ( ( (lv_testedClasses_2_0= ruleTestedClass ) )* | ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) ) ) (otherlv_4= 'with' ( (lv_testClassName_5_0= ruleQName ) ) )? ( (lv_description_6_0= RULE_STRING ) )? (otherlv_7= '@' ( (lv_url_8_0= RULE_STRING ) ) )? ( (lv_importSection_9_0= ruleXImportSection ) )? ( ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* ) | ( (lv_stateFunctions_15_0= ruleStateFunction ) ) | ( (lv_testSequences_16_0= ruleJexTestSequence ) ) | ( (lv_methods_17_0= ruleMethod ) ) )* ) )
            // InternalJexTest.g:252:1: ( () otherlv_1= 'test' ( ( (lv_testedClasses_2_0= ruleTestedClass ) )* | ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) ) ) (otherlv_4= 'with' ( (lv_testClassName_5_0= ruleQName ) ) )? ( (lv_description_6_0= RULE_STRING ) )? (otherlv_7= '@' ( (lv_url_8_0= RULE_STRING ) ) )? ( (lv_importSection_9_0= ruleXImportSection ) )? ( ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* ) | ( (lv_stateFunctions_15_0= ruleStateFunction ) ) | ( (lv_testSequences_16_0= ruleJexTestSequence ) ) | ( (lv_methods_17_0= ruleMethod ) ) )* )
            {
            // InternalJexTest.g:252:1: ( () otherlv_1= 'test' ( ( (lv_testedClasses_2_0= ruleTestedClass ) )* | ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) ) ) (otherlv_4= 'with' ( (lv_testClassName_5_0= ruleQName ) ) )? ( (lv_description_6_0= RULE_STRING ) )? (otherlv_7= '@' ( (lv_url_8_0= RULE_STRING ) ) )? ( (lv_importSection_9_0= ruleXImportSection ) )? ( ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* ) | ( (lv_stateFunctions_15_0= ruleStateFunction ) ) | ( (lv_testSequences_16_0= ruleJexTestSequence ) ) | ( (lv_methods_17_0= ruleMethod ) ) )* )
            // InternalJexTest.g:252:2: () otherlv_1= 'test' ( ( (lv_testedClasses_2_0= ruleTestedClass ) )* | ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) ) ) (otherlv_4= 'with' ( (lv_testClassName_5_0= ruleQName ) ) )? ( (lv_description_6_0= RULE_STRING ) )? (otherlv_7= '@' ( (lv_url_8_0= RULE_STRING ) ) )? ( (lv_importSection_9_0= ruleXImportSection ) )? ( ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* ) | ( (lv_stateFunctions_15_0= ruleStateFunction ) ) | ( (lv_testSequences_16_0= ruleJexTestSequence ) ) | ( (lv_methods_17_0= ruleMethod ) ) )*
            {
            // InternalJexTest.g:252:2: ()
            // InternalJexTest.g:253:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJexTestCaseAccess().getJexTestCaseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,17,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJexTestCaseAccess().getTestKeyword_1());
                  
            }
            // InternalJexTest.g:262:1: ( ( (lv_testedClasses_2_0= ruleTestedClass ) )* | ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==EOF||LA8_0==RULE_STRING||(LA8_0>=14 && LA8_0<=15)||(LA8_0>=17 && LA8_0<=19)||(LA8_0>=21 && LA8_0<=22)||LA8_0==25||(LA8_0>=38 && LA8_0<=40)||LA8_0==92) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_ID) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalJexTest.g:262:2: ( (lv_testedClasses_2_0= ruleTestedClass ) )*
                    {
                    // InternalJexTest.g:262:2: ( (lv_testedClasses_2_0= ruleTestedClass ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( ((LA7_0>=38 && LA7_0<=40)) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalJexTest.g:263:1: (lv_testedClasses_2_0= ruleTestedClass )
                    	    {
                    	    // InternalJexTest.g:263:1: (lv_testedClasses_2_0= ruleTestedClass )
                    	    // InternalJexTest.g:264:3: lv_testedClasses_2_0= ruleTestedClass
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getTestedClassesTestedClassParserRuleCall_2_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_testedClasses_2_0=ruleTestedClass();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"testedClasses",
                    	              		lv_testedClasses_2_0, 
                    	              		"no.hal.jex.jextest.JexTest.TestedClass");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:281:6: ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) )
                    {
                    // InternalJexTest.g:281:6: ( (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference ) )
                    // InternalJexTest.g:282:1: (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference )
                    {
                    // InternalJexTest.g:282:1: (lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference )
                    // InternalJexTest.g:283:3: lv_testedClassRef_3_0= ruleJvmParameterizedTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getTestedClassRefJvmParameterizedTypeReferenceParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_11);
                    lv_testedClassRef_3_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
                      	        }
                             		set(
                             			current, 
                             			"testedClassRef",
                              		lv_testedClassRef_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:299:3: (otherlv_4= 'with' ( (lv_testClassName_5_0= ruleQName ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==18) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalJexTest.g:299:5: otherlv_4= 'with' ( (lv_testClassName_5_0= ruleQName ) )
                    {
                    otherlv_4=(Token)match(input,18,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getJexTestCaseAccess().getWithKeyword_3_0());
                          
                    }
                    // InternalJexTest.g:303:1: ( (lv_testClassName_5_0= ruleQName ) )
                    // InternalJexTest.g:304:1: (lv_testClassName_5_0= ruleQName )
                    {
                    // InternalJexTest.g:304:1: (lv_testClassName_5_0= ruleQName )
                    // InternalJexTest.g:305:3: lv_testClassName_5_0= ruleQName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getTestClassNameQNameParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_12);
                    lv_testClassName_5_0=ruleQName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
                      	        }
                             		set(
                             			current, 
                             			"testClassName",
                              		lv_testClassName_5_0, 
                              		"no.hal.jex.jextest.JexTest.QName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:321:4: ( (lv_description_6_0= RULE_STRING ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalJexTest.g:322:1: (lv_description_6_0= RULE_STRING )
                    {
                    // InternalJexTest.g:322:1: (lv_description_6_0= RULE_STRING )
                    // InternalJexTest.g:323:3: lv_description_6_0= RULE_STRING
                    {
                    lv_description_6_0=(Token)match(input,RULE_STRING,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_description_6_0, grammarAccess.getJexTestCaseAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getJexTestCaseRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"description",
                              		lv_description_6_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:339:3: (otherlv_7= '@' ( (lv_url_8_0= RULE_STRING ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==19) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalJexTest.g:339:5: otherlv_7= '@' ( (lv_url_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,19,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getJexTestCaseAccess().getCommercialAtKeyword_5_0());
                          
                    }
                    // InternalJexTest.g:343:1: ( (lv_url_8_0= RULE_STRING ) )
                    // InternalJexTest.g:344:1: (lv_url_8_0= RULE_STRING )
                    {
                    // InternalJexTest.g:344:1: (lv_url_8_0= RULE_STRING )
                    // InternalJexTest.g:345:3: lv_url_8_0= RULE_STRING
                    {
                    lv_url_8_0=(Token)match(input,RULE_STRING,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_url_8_0, grammarAccess.getJexTestCaseAccess().getUrlSTRINGTerminalRuleCall_5_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getJexTestCaseRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"url",
                              		lv_url_8_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:361:4: ( (lv_importSection_9_0= ruleXImportSection ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==92) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalJexTest.g:362:1: (lv_importSection_9_0= ruleXImportSection )
                    {
                    // InternalJexTest.g:362:1: (lv_importSection_9_0= ruleXImportSection )
                    // InternalJexTest.g:363:3: lv_importSection_9_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getImportSectionXImportSectionParserRuleCall_6_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_importSection_9_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
                      	        }
                             		set(
                             			current, 
                             			"importSection",
                              		lv_importSection_9_0, 
                              		"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:379:3: ( ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* ) | ( (lv_stateFunctions_15_0= ruleStateFunction ) ) | ( (lv_testSequences_16_0= ruleJexTestSequence ) ) | ( (lv_methods_17_0= ruleMethod ) ) )*
            loop15:
            do {
                int alt15=5;
                switch ( input.LA(1) ) {
                case 14:
                case 15:
                    {
                    alt15=1;
                    }
                    break;
                case 21:
                    {
                    alt15=2;
                    }
                    break;
                case 25:
                    {
                    alt15=3;
                    }
                    break;
                case 22:
                    {
                    alt15=4;
                    }
                    break;

                }

                switch (alt15) {
            	case 1 :
            	    // InternalJexTest.g:379:4: ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* )
            	    {
            	    // InternalJexTest.g:379:4: ( (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )* )
            	    // InternalJexTest.g:379:5: (otherlv_10= 'instance' | otherlv_11= 'val' ) ( (lv_instances_12_0= ruleSuiteInstance ) ) (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )*
            	    {
            	    // InternalJexTest.g:379:5: (otherlv_10= 'instance' | otherlv_11= 'val' )
            	    int alt13=2;
            	    int LA13_0 = input.LA(1);

            	    if ( (LA13_0==14) ) {
            	        alt13=1;
            	    }
            	    else if ( (LA13_0==15) ) {
            	        alt13=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 13, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt13) {
            	        case 1 :
            	            // InternalJexTest.g:379:7: otherlv_10= 'instance'
            	            {
            	            otherlv_10=(Token)match(input,14,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_10, grammarAccess.getJexTestCaseAccess().getInstanceKeyword_7_0_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalJexTest.g:384:7: otherlv_11= 'val'
            	            {
            	            otherlv_11=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_11, grammarAccess.getJexTestCaseAccess().getValKeyword_7_0_0_1());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalJexTest.g:388:2: ( (lv_instances_12_0= ruleSuiteInstance ) )
            	    // InternalJexTest.g:389:1: (lv_instances_12_0= ruleSuiteInstance )
            	    {
            	    // InternalJexTest.g:389:1: (lv_instances_12_0= ruleSuiteInstance )
            	    // InternalJexTest.g:390:3: lv_instances_12_0= ruleSuiteInstance
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getInstancesSuiteInstanceParserRuleCall_7_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_instances_12_0=ruleSuiteInstance();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"instances",
            	              		lv_instances_12_0, 
            	              		"no.hal.jex.jextest.JexTest.SuiteInstance");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:406:2: (otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) ) )*
            	    loop14:
            	    do {
            	        int alt14=2;
            	        int LA14_0 = input.LA(1);

            	        if ( (LA14_0==16) ) {
            	            alt14=1;
            	        }


            	        switch (alt14) {
            	    	case 1 :
            	    	    // InternalJexTest.g:406:4: otherlv_13= ',' ( (lv_instances_14_0= ruleSuiteInstance ) )
            	    	    {
            	    	    otherlv_13=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	          	newLeafNode(otherlv_13, grammarAccess.getJexTestCaseAccess().getCommaKeyword_7_0_2_0());
            	    	          
            	    	    }
            	    	    // InternalJexTest.g:410:1: ( (lv_instances_14_0= ruleSuiteInstance ) )
            	    	    // InternalJexTest.g:411:1: (lv_instances_14_0= ruleSuiteInstance )
            	    	    {
            	    	    // InternalJexTest.g:411:1: (lv_instances_14_0= ruleSuiteInstance )
            	    	    // InternalJexTest.g:412:3: lv_instances_14_0= ruleSuiteInstance
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getInstancesSuiteInstanceParserRuleCall_7_0_2_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_17);
            	    	    lv_instances_14_0=ruleSuiteInstance();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"instances",
            	    	              		lv_instances_14_0, 
            	    	              		"no.hal.jex.jextest.JexTest.SuiteInstance");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop14;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalJexTest.g:429:6: ( (lv_stateFunctions_15_0= ruleStateFunction ) )
            	    {
            	    // InternalJexTest.g:429:6: ( (lv_stateFunctions_15_0= ruleStateFunction ) )
            	    // InternalJexTest.g:430:1: (lv_stateFunctions_15_0= ruleStateFunction )
            	    {
            	    // InternalJexTest.g:430:1: (lv_stateFunctions_15_0= ruleStateFunction )
            	    // InternalJexTest.g:431:3: lv_stateFunctions_15_0= ruleStateFunction
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getStateFunctionsStateFunctionParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_stateFunctions_15_0=ruleStateFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"stateFunctions",
            	              		lv_stateFunctions_15_0, 
            	              		"no.hal.jex.jextest.JexTest.StateFunction");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalJexTest.g:448:6: ( (lv_testSequences_16_0= ruleJexTestSequence ) )
            	    {
            	    // InternalJexTest.g:448:6: ( (lv_testSequences_16_0= ruleJexTestSequence ) )
            	    // InternalJexTest.g:449:1: (lv_testSequences_16_0= ruleJexTestSequence )
            	    {
            	    // InternalJexTest.g:449:1: (lv_testSequences_16_0= ruleJexTestSequence )
            	    // InternalJexTest.g:450:3: lv_testSequences_16_0= ruleJexTestSequence
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getTestSequencesJexTestSequenceParserRuleCall_7_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_testSequences_16_0=ruleJexTestSequence();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"testSequences",
            	              		lv_testSequences_16_0, 
            	              		"no.hal.jex.jextest.JexTest.JexTestSequence");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalJexTest.g:467:6: ( (lv_methods_17_0= ruleMethod ) )
            	    {
            	    // InternalJexTest.g:467:6: ( (lv_methods_17_0= ruleMethod ) )
            	    // InternalJexTest.g:468:1: (lv_methods_17_0= ruleMethod )
            	    {
            	    // InternalJexTest.g:468:1: (lv_methods_17_0= ruleMethod )
            	    // InternalJexTest.g:469:3: lv_methods_17_0= ruleMethod
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestCaseAccess().getMethodsMethodParserRuleCall_7_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_methods_17_0=ruleMethod();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"methods",
            	              		lv_methods_17_0, 
            	              		"no.hal.jex.jextest.JexTest.Method");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJexTestCase"


    // $ANTLR start "entryRuleSuiteInstance"
    // InternalJexTest.g:493:1: entryRuleSuiteInstance returns [EObject current=null] : iv_ruleSuiteInstance= ruleSuiteInstance EOF ;
    public final EObject entryRuleSuiteInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuiteInstance = null;


        try {
            // InternalJexTest.g:494:2: (iv_ruleSuiteInstance= ruleSuiteInstance EOF )
            // InternalJexTest.g:495:2: iv_ruleSuiteInstance= ruleSuiteInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuiteInstanceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuiteInstance=ruleSuiteInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuiteInstance; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuiteInstance"


    // $ANTLR start "ruleSuiteInstance"
    // InternalJexTest.g:502:1: ruleSuiteInstance returns [EObject current=null] : ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleSuiteInstance() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_type_0_0 = null;

        EObject lv_expr_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:505:28: ( ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? ) )
            // InternalJexTest.g:506:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? )
            {
            // InternalJexTest.g:506:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? )
            // InternalJexTest.g:506:2: ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )?
            {
            // InternalJexTest.g:506:2: ( (lv_type_0_0= ruleJvmTypeReference ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_ID) ) {
                int LA16_1 = input.LA(2);

                if ( (LA16_1==RULE_ID||LA16_1==29||LA16_1==57||LA16_1==78) ) {
                    alt16=1;
                }
            }
            else if ( (LA16_0==23||LA16_0==43) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalJexTest.g:507:1: (lv_type_0_0= ruleJvmTypeReference )
                    {
                    // InternalJexTest.g:507:1: (lv_type_0_0= ruleJvmTypeReference )
                    // InternalJexTest.g:508:3: lv_type_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuiteInstanceAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuiteInstanceRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_0_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:524:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalJexTest.g:525:1: (lv_name_1_0= RULE_ID )
            {
            // InternalJexTest.g:525:1: (lv_name_1_0= RULE_ID )
            // InternalJexTest.g:526:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getSuiteInstanceAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSuiteInstanceRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }

            // InternalJexTest.g:542:2: (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==20) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalJexTest.g:542:4: otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getSuiteInstanceAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    // InternalJexTest.g:546:1: ( (lv_expr_3_0= ruleXExpression ) )
                    // InternalJexTest.g:547:1: (lv_expr_3_0= ruleXExpression )
                    {
                    // InternalJexTest.g:547:1: (lv_expr_3_0= ruleXExpression )
                    // InternalJexTest.g:548:3: lv_expr_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuiteInstanceAccess().getExprXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuiteInstanceRule());
                      	        }
                             		set(
                             			current, 
                             			"expr",
                              		lv_expr_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuiteInstance"


    // $ANTLR start "entryRuleInstance"
    // InternalJexTest.g:572:1: entryRuleInstance returns [EObject current=null] : iv_ruleInstance= ruleInstance EOF ;
    public final EObject entryRuleInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstance = null;


        try {
            // InternalJexTest.g:573:2: (iv_ruleInstance= ruleInstance EOF )
            // InternalJexTest.g:574:2: iv_ruleInstance= ruleInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstanceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInstance=ruleInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstance; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstance"


    // $ANTLR start "ruleInstance"
    // InternalJexTest.g:581:1: ruleInstance returns [EObject current=null] : ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleInstance() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_type_0_0 = null;

        EObject lv_expr_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:584:28: ( ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? ) )
            // InternalJexTest.g:585:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? )
            {
            // InternalJexTest.g:585:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )? )
            // InternalJexTest.g:585:2: ( (lv_type_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )?
            {
            // InternalJexTest.g:585:2: ( (lv_type_0_0= ruleJvmTypeReference ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_ID) ) {
                int LA18_1 = input.LA(2);

                if ( (LA18_1==RULE_ID||LA18_1==29||LA18_1==57||LA18_1==78) ) {
                    alt18=1;
                }
            }
            else if ( (LA18_0==23||LA18_0==43) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalJexTest.g:586:1: (lv_type_0_0= ruleJvmTypeReference )
                    {
                    // InternalJexTest.g:586:1: (lv_type_0_0= ruleJvmTypeReference )
                    // InternalJexTest.g:587:3: lv_type_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getInstanceAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getInstanceRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_0_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:603:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalJexTest.g:604:1: (lv_name_1_0= RULE_ID )
            {
            // InternalJexTest.g:604:1: (lv_name_1_0= RULE_ID )
            // InternalJexTest.g:605:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInstanceRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }

            // InternalJexTest.g:621:2: (otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==20) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalJexTest.g:621:4: otherlv_2= '=' ( (lv_expr_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getInstanceAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    // InternalJexTest.g:625:1: ( (lv_expr_3_0= ruleXExpression ) )
                    // InternalJexTest.g:626:1: (lv_expr_3_0= ruleXExpression )
                    {
                    // InternalJexTest.g:626:1: (lv_expr_3_0= ruleXExpression )
                    // InternalJexTest.g:627:3: lv_expr_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getInstanceAccess().getExprXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getInstanceRule());
                      	        }
                             		set(
                             			current, 
                             			"expr",
                              		lv_expr_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstance"


    // $ANTLR start "entryRuleStateFunction"
    // InternalJexTest.g:657:1: entryRuleStateFunction returns [EObject current=null] : iv_ruleStateFunction= ruleStateFunction EOF ;
    public final EObject entryRuleStateFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStateFunction = null;


        try {
            // InternalJexTest.g:658:2: (iv_ruleStateFunction= ruleStateFunction EOF )
            // InternalJexTest.g:659:2: iv_ruleStateFunction= ruleStateFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStateFunction=ruleStateFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStateFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStateFunction"


    // $ANTLR start "ruleStateFunction"
    // InternalJexTest.g:666:1: ruleStateFunction returns [EObject current=null] : (otherlv_0= 'state' otherlv_1= 'method' ( (lv_type_2_0= ruleJvmParameterizedTypeReference ) )? ( (lv_name_3_0= RULE_ID ) ) ( (lv_description_4_0= RULE_STRING ) )? otherlv_5= '(' ( ( (lv_parameters_6_0= ruleParameter ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )* )? otherlv_9= ')' ( (lv_test_10_0= rulePropertiesTest ) ) ) ;
    public final EObject ruleStateFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_3_0=null;
        Token lv_description_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_type_2_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_test_10_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:669:28: ( (otherlv_0= 'state' otherlv_1= 'method' ( (lv_type_2_0= ruleJvmParameterizedTypeReference ) )? ( (lv_name_3_0= RULE_ID ) ) ( (lv_description_4_0= RULE_STRING ) )? otherlv_5= '(' ( ( (lv_parameters_6_0= ruleParameter ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )* )? otherlv_9= ')' ( (lv_test_10_0= rulePropertiesTest ) ) ) )
            // InternalJexTest.g:670:1: (otherlv_0= 'state' otherlv_1= 'method' ( (lv_type_2_0= ruleJvmParameterizedTypeReference ) )? ( (lv_name_3_0= RULE_ID ) ) ( (lv_description_4_0= RULE_STRING ) )? otherlv_5= '(' ( ( (lv_parameters_6_0= ruleParameter ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )* )? otherlv_9= ')' ( (lv_test_10_0= rulePropertiesTest ) ) )
            {
            // InternalJexTest.g:670:1: (otherlv_0= 'state' otherlv_1= 'method' ( (lv_type_2_0= ruleJvmParameterizedTypeReference ) )? ( (lv_name_3_0= RULE_ID ) ) ( (lv_description_4_0= RULE_STRING ) )? otherlv_5= '(' ( ( (lv_parameters_6_0= ruleParameter ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )* )? otherlv_9= ')' ( (lv_test_10_0= rulePropertiesTest ) ) )
            // InternalJexTest.g:670:3: otherlv_0= 'state' otherlv_1= 'method' ( (lv_type_2_0= ruleJvmParameterizedTypeReference ) )? ( (lv_name_3_0= RULE_ID ) ) ( (lv_description_4_0= RULE_STRING ) )? otherlv_5= '(' ( ( (lv_parameters_6_0= ruleParameter ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )* )? otherlv_9= ')' ( (lv_test_10_0= rulePropertiesTest ) )
            {
            otherlv_0=(Token)match(input,21,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStateFunctionAccess().getStateKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStateFunctionAccess().getMethodKeyword_1());
                  
            }
            // InternalJexTest.g:678:1: ( (lv_type_2_0= ruleJvmParameterizedTypeReference ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_ID) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==RULE_ID||LA20_1==29||LA20_1==57) ) {
                    alt20=1;
                }
            }
            switch (alt20) {
                case 1 :
                    // InternalJexTest.g:679:1: (lv_type_2_0= ruleJvmParameterizedTypeReference )
                    {
                    // InternalJexTest.g:679:1: (lv_type_2_0= ruleJvmParameterizedTypeReference )
                    // InternalJexTest.g:680:3: lv_type_2_0= ruleJvmParameterizedTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStateFunctionAccess().getTypeJvmParameterizedTypeReferenceParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_2_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStateFunctionRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:696:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalJexTest.g:697:1: (lv_name_3_0= RULE_ID )
            {
            // InternalJexTest.g:697:1: (lv_name_3_0= RULE_ID )
            // InternalJexTest.g:698:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getStateFunctionAccess().getNameIDTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStateFunctionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }

            // InternalJexTest.g:714:2: ( (lv_description_4_0= RULE_STRING ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_STRING) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalJexTest.g:715:1: (lv_description_4_0= RULE_STRING )
                    {
                    // InternalJexTest.g:715:1: (lv_description_4_0= RULE_STRING )
                    // InternalJexTest.g:716:3: lv_description_4_0= RULE_STRING
                    {
                    lv_description_4_0=(Token)match(input,RULE_STRING,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_description_4_0, grammarAccess.getStateFunctionAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateFunctionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"description",
                              		lv_description_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,23,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getStateFunctionAccess().getLeftParenthesisKeyword_5());
                  
            }
            // InternalJexTest.g:736:1: ( ( (lv_parameters_6_0= ruleParameter ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID||LA23_0==23||LA23_0==43) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalJexTest.g:736:2: ( (lv_parameters_6_0= ruleParameter ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )*
                    {
                    // InternalJexTest.g:736:2: ( (lv_parameters_6_0= ruleParameter ) )
                    // InternalJexTest.g:737:1: (lv_parameters_6_0= ruleParameter )
                    {
                    // InternalJexTest.g:737:1: (lv_parameters_6_0= ruleParameter )
                    // InternalJexTest.g:738:3: lv_parameters_6_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStateFunctionAccess().getParametersParameterParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_24);
                    lv_parameters_6_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStateFunctionRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_6_0, 
                              		"no.hal.jex.jextest.JexTest.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:754:2: (otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==16) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalJexTest.g:754:4: otherlv_7= ',' ( (lv_parameters_8_0= ruleParameter ) )
                    	    {
                    	    otherlv_7=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getStateFunctionAccess().getCommaKeyword_6_1_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:758:1: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalJexTest.g:759:1: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalJexTest.g:759:1: (lv_parameters_8_0= ruleParameter )
                    	    // InternalJexTest.g:760:3: lv_parameters_8_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStateFunctionAccess().getParametersParameterParserRuleCall_6_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStateFunctionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_8_0, 
                    	              		"no.hal.jex.jextest.JexTest.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,24,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getStateFunctionAccess().getRightParenthesisKeyword_7());
                  
            }
            // InternalJexTest.g:780:1: ( (lv_test_10_0= rulePropertiesTest ) )
            // InternalJexTest.g:781:1: (lv_test_10_0= rulePropertiesTest )
            {
            // InternalJexTest.g:781:1: (lv_test_10_0= rulePropertiesTest )
            // InternalJexTest.g:782:3: lv_test_10_0= rulePropertiesTest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStateFunctionAccess().getTestPropertiesTestParserRuleCall_8_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_test_10_0=rulePropertiesTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStateFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_10_0, 
                      		"no.hal.jex.jextest.JexTest.PropertiesTest");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStateFunction"


    // $ANTLR start "entryRuleJexTestSequence"
    // InternalJexTest.g:806:1: entryRuleJexTestSequence returns [EObject current=null] : iv_ruleJexTestSequence= ruleJexTestSequence EOF ;
    public final EObject entryRuleJexTestSequence() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJexTestSequence = null;


        try {
            // InternalJexTest.g:807:2: (iv_ruleJexTestSequence= ruleJexTestSequence EOF )
            // InternalJexTest.g:808:2: iv_ruleJexTestSequence= ruleJexTestSequence EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJexTestSequenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJexTestSequence=ruleJexTestSequence();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJexTestSequence; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJexTestSequence"


    // $ANTLR start "ruleJexTestSequence"
    // InternalJexTest.g:815:1: ruleJexTestSequence returns [EObject current=null] : (otherlv_0= 'sequence' ( (lv_name_1_0= RULE_ID ) ) ( (lv_description_2_0= RULE_STRING ) )? (otherlv_3= 'tests' ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )? )? otherlv_7= '{' ( (otherlv_8= 'instance' | otherlv_9= 'val' ) ( (lv_instances_10_0= ruleInstance ) ) (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )* )* ( (lv_transitions_13_0= ruleTransition ) )* otherlv_14= '}' ) ;
    public final EObject ruleJexTestSequence() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_description_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        EObject lv_tested_4_0 = null;

        EObject lv_tested_6_0 = null;

        EObject lv_instances_10_0 = null;

        EObject lv_instances_12_0 = null;

        EObject lv_transitions_13_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:818:28: ( (otherlv_0= 'sequence' ( (lv_name_1_0= RULE_ID ) ) ( (lv_description_2_0= RULE_STRING ) )? (otherlv_3= 'tests' ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )? )? otherlv_7= '{' ( (otherlv_8= 'instance' | otherlv_9= 'val' ) ( (lv_instances_10_0= ruleInstance ) ) (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )* )* ( (lv_transitions_13_0= ruleTransition ) )* otherlv_14= '}' ) )
            // InternalJexTest.g:819:1: (otherlv_0= 'sequence' ( (lv_name_1_0= RULE_ID ) ) ( (lv_description_2_0= RULE_STRING ) )? (otherlv_3= 'tests' ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )? )? otherlv_7= '{' ( (otherlv_8= 'instance' | otherlv_9= 'val' ) ( (lv_instances_10_0= ruleInstance ) ) (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )* )* ( (lv_transitions_13_0= ruleTransition ) )* otherlv_14= '}' )
            {
            // InternalJexTest.g:819:1: (otherlv_0= 'sequence' ( (lv_name_1_0= RULE_ID ) ) ( (lv_description_2_0= RULE_STRING ) )? (otherlv_3= 'tests' ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )? )? otherlv_7= '{' ( (otherlv_8= 'instance' | otherlv_9= 'val' ) ( (lv_instances_10_0= ruleInstance ) ) (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )* )* ( (lv_transitions_13_0= ruleTransition ) )* otherlv_14= '}' )
            // InternalJexTest.g:819:3: otherlv_0= 'sequence' ( (lv_name_1_0= RULE_ID ) ) ( (lv_description_2_0= RULE_STRING ) )? (otherlv_3= 'tests' ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )? )? otherlv_7= '{' ( (otherlv_8= 'instance' | otherlv_9= 'val' ) ( (lv_instances_10_0= ruleInstance ) ) (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )* )* ( (lv_transitions_13_0= ruleTransition ) )* otherlv_14= '}'
            {
            otherlv_0=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJexTestSequenceAccess().getSequenceKeyword_0());
                  
            }
            // InternalJexTest.g:823:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalJexTest.g:824:1: (lv_name_1_0= RULE_ID )
            {
            // InternalJexTest.g:824:1: (lv_name_1_0= RULE_ID )
            // InternalJexTest.g:825:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getJexTestSequenceAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getJexTestSequenceRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }

            // InternalJexTest.g:841:2: ( (lv_description_2_0= RULE_STRING ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_STRING) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalJexTest.g:842:1: (lv_description_2_0= RULE_STRING )
                    {
                    // InternalJexTest.g:842:1: (lv_description_2_0= RULE_STRING )
                    // InternalJexTest.g:843:3: lv_description_2_0= RULE_STRING
                    {
                    lv_description_2_0=(Token)match(input,RULE_STRING,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_description_2_0, grammarAccess.getJexTestSequenceAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getJexTestSequenceRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"description",
                              		lv_description_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:859:3: (otherlv_3= 'tests' ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )? )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==26) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalJexTest.g:859:5: otherlv_3= 'tests' ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )?
                    {
                    otherlv_3=(Token)match(input,26,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getJexTestSequenceAccess().getTestsKeyword_3_0());
                          
                    }
                    // InternalJexTest.g:863:1: ( ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )* )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==RULE_ID) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalJexTest.g:863:2: ( (lv_tested_4_0= ruleJvmOperationRef ) ) (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )*
                            {
                            // InternalJexTest.g:863:2: ( (lv_tested_4_0= ruleJvmOperationRef ) )
                            // InternalJexTest.g:864:1: (lv_tested_4_0= ruleJvmOperationRef )
                            {
                            // InternalJexTest.g:864:1: (lv_tested_4_0= ruleJvmOperationRef )
                            // InternalJexTest.g:865:3: lv_tested_4_0= ruleJvmOperationRef
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getJexTestSequenceAccess().getTestedJvmOperationRefParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_29);
                            lv_tested_4_0=ruleJvmOperationRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getJexTestSequenceRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"tested",
                                      		lv_tested_4_0, 
                                      		"no.hal.jex.jextest.JexTest.JvmOperationRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalJexTest.g:881:2: (otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) ) )*
                            loop25:
                            do {
                                int alt25=2;
                                int LA25_0 = input.LA(1);

                                if ( (LA25_0==16) ) {
                                    alt25=1;
                                }


                                switch (alt25) {
                            	case 1 :
                            	    // InternalJexTest.g:881:4: otherlv_5= ',' ( (lv_tested_6_0= ruleJvmOperationRef ) )
                            	    {
                            	    otherlv_5=(Token)match(input,16,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_5, grammarAccess.getJexTestSequenceAccess().getCommaKeyword_3_1_1_0());
                            	          
                            	    }
                            	    // InternalJexTest.g:885:1: ( (lv_tested_6_0= ruleJvmOperationRef ) )
                            	    // InternalJexTest.g:886:1: (lv_tested_6_0= ruleJvmOperationRef )
                            	    {
                            	    // InternalJexTest.g:886:1: (lv_tested_6_0= ruleJvmOperationRef )
                            	    // InternalJexTest.g:887:3: lv_tested_6_0= ruleJvmOperationRef
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getJexTestSequenceAccess().getTestedJvmOperationRefParserRuleCall_3_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_tested_6_0=ruleJvmOperationRef();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getJexTestSequenceRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"tested",
                            	              		lv_tested_6_0, 
                            	              		"no.hal.jex.jextest.JexTest.JvmOperationRef");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop25;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,27,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getJexTestSequenceAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalJexTest.g:907:1: ( (otherlv_8= 'instance' | otherlv_9= 'val' ) ( (lv_instances_10_0= ruleInstance ) ) (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )* )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( ((LA30_0>=14 && LA30_0<=15)) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalJexTest.g:907:2: (otherlv_8= 'instance' | otherlv_9= 'val' ) ( (lv_instances_10_0= ruleInstance ) ) (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )*
            	    {
            	    // InternalJexTest.g:907:2: (otherlv_8= 'instance' | otherlv_9= 'val' )
            	    int alt28=2;
            	    int LA28_0 = input.LA(1);

            	    if ( (LA28_0==14) ) {
            	        alt28=1;
            	    }
            	    else if ( (LA28_0==15) ) {
            	        alt28=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 28, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt28) {
            	        case 1 :
            	            // InternalJexTest.g:907:4: otherlv_8= 'instance'
            	            {
            	            otherlv_8=(Token)match(input,14,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_8, grammarAccess.getJexTestSequenceAccess().getInstanceKeyword_5_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalJexTest.g:912:7: otherlv_9= 'val'
            	            {
            	            otherlv_9=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_9, grammarAccess.getJexTestSequenceAccess().getValKeyword_5_0_1());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalJexTest.g:916:2: ( (lv_instances_10_0= ruleInstance ) )
            	    // InternalJexTest.g:917:1: (lv_instances_10_0= ruleInstance )
            	    {
            	    // InternalJexTest.g:917:1: (lv_instances_10_0= ruleInstance )
            	    // InternalJexTest.g:918:3: lv_instances_10_0= ruleInstance
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestSequenceAccess().getInstancesInstanceParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_instances_10_0=ruleInstance();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestSequenceRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"instances",
            	              		lv_instances_10_0, 
            	              		"no.hal.jex.jextest.JexTest.Instance");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:934:2: (otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) ) )*
            	    loop29:
            	    do {
            	        int alt29=2;
            	        int LA29_0 = input.LA(1);

            	        if ( (LA29_0==16) ) {
            	            alt29=1;
            	        }


            	        switch (alt29) {
            	    	case 1 :
            	    	    // InternalJexTest.g:934:4: otherlv_11= ',' ( (lv_instances_12_0= ruleInstance ) )
            	    	    {
            	    	    otherlv_11=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	          	newLeafNode(otherlv_11, grammarAccess.getJexTestSequenceAccess().getCommaKeyword_5_2_0());
            	    	          
            	    	    }
            	    	    // InternalJexTest.g:938:1: ( (lv_instances_12_0= ruleInstance ) )
            	    	    // InternalJexTest.g:939:1: (lv_instances_12_0= ruleInstance )
            	    	    {
            	    	    // InternalJexTest.g:939:1: (lv_instances_12_0= ruleInstance )
            	    	    // InternalJexTest.g:940:3: lv_instances_12_0= ruleInstance
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getJexTestSequenceAccess().getInstancesInstanceParserRuleCall_5_2_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_31);
            	    	    lv_instances_12_0=ruleInstance();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getJexTestSequenceRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"instances",
            	    	              		lv_instances_12_0, 
            	    	              		"no.hal.jex.jextest.JexTest.Instance");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop29;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            // InternalJexTest.g:956:6: ( (lv_transitions_13_0= ruleTransition ) )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_STRING||LA31_0==21||LA31_0==30||(LA31_0>=32 && LA31_0<=33)) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalJexTest.g:957:1: (lv_transitions_13_0= ruleTransition )
            	    {
            	    // InternalJexTest.g:957:1: (lv_transitions_13_0= ruleTransition )
            	    // InternalJexTest.g:958:3: lv_transitions_13_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJexTestSequenceAccess().getTransitionsTransitionParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_transitions_13_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJexTestSequenceRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"transitions",
            	              		lv_transitions_13_0, 
            	              		"no.hal.jex.jextest.JexTest.Transition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            otherlv_14=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_14, grammarAccess.getJexTestSequenceAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJexTestSequence"


    // $ANTLR start "entryRuleJvmOperationRef"
    // InternalJexTest.g:986:1: entryRuleJvmOperationRef returns [EObject current=null] : iv_ruleJvmOperationRef= ruleJvmOperationRef EOF ;
    public final EObject entryRuleJvmOperationRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmOperationRef = null;


        try {
            // InternalJexTest.g:987:2: (iv_ruleJvmOperationRef= ruleJvmOperationRef EOF )
            // InternalJexTest.g:988:2: iv_ruleJvmOperationRef= ruleJvmOperationRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmOperationRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmOperationRef=ruleJvmOperationRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmOperationRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmOperationRef"


    // $ANTLR start "ruleJvmOperationRef"
    // InternalJexTest.g:995:1: ruleJvmOperationRef returns [EObject current=null] : ( ( (lv_methodName_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_5= ')' )? ) ;
    public final EObject ruleJvmOperationRef() throws RecognitionException {
        EObject current = null;

        Token lv_methodName_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_parameterTypes_2_0 = null;

        EObject lv_parameterTypes_4_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:998:28: ( ( ( (lv_methodName_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_5= ')' )? ) )
            // InternalJexTest.g:999:1: ( ( (lv_methodName_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_5= ')' )? )
            {
            // InternalJexTest.g:999:1: ( ( (lv_methodName_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_5= ')' )? )
            // InternalJexTest.g:999:2: ( (lv_methodName_0_0= RULE_ID ) ) (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_5= ')' )?
            {
            // InternalJexTest.g:999:2: ( (lv_methodName_0_0= RULE_ID ) )
            // InternalJexTest.g:1000:1: (lv_methodName_0_0= RULE_ID )
            {
            // InternalJexTest.g:1000:1: (lv_methodName_0_0= RULE_ID )
            // InternalJexTest.g:1001:3: lv_methodName_0_0= RULE_ID
            {
            lv_methodName_0_0=(Token)match(input,RULE_ID,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_methodName_0_0, grammarAccess.getJvmOperationRefAccess().getMethodNameIDTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getJvmOperationRefRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"methodName",
                      		lv_methodName_0_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }

            // InternalJexTest.g:1017:2: (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_5= ')' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==23) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalJexTest.g:1017:4: otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJvmOperationRefAccess().getLeftParenthesisKeyword_1_0());
                          
                    }
                    // InternalJexTest.g:1021:1: ( ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==RULE_ID) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalJexTest.g:1021:2: ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            // InternalJexTest.g:1021:2: ( (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference ) )
                            // InternalJexTest.g:1022:1: (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalJexTest.g:1022:1: (lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference )
                            // InternalJexTest.g:1023:3: lv_parameterTypes_2_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getJvmOperationRefAccess().getParameterTypesJvmParameterizedTypeReferenceParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_24);
                            lv_parameterTypes_2_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getJvmOperationRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameterTypes",
                                      		lv_parameterTypes_2_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalJexTest.g:1039:2: (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop32:
                            do {
                                int alt32=2;
                                int LA32_0 = input.LA(1);

                                if ( (LA32_0==16) ) {
                                    alt32=1;
                                }


                                switch (alt32) {
                            	case 1 :
                            	    // InternalJexTest.g:1039:4: otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    otherlv_3=(Token)match(input,16,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getJvmOperationRefAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    // InternalJexTest.g:1043:1: ( (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference ) )
                            	    // InternalJexTest.g:1044:1: (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // InternalJexTest.g:1044:1: (lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference )
                            	    // InternalJexTest.g:1045:3: lv_parameterTypes_4_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getJvmOperationRefAccess().getParameterTypesJvmParameterizedTypeReferenceParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_parameterTypes_4_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getJvmOperationRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameterTypes",
                            	              		lv_parameterTypes_4_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop32;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJvmOperationRefAccess().getRightParenthesisKeyword_1_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmOperationRef"


    // $ANTLR start "entryRuleQName"
    // InternalJexTest.g:1073:1: entryRuleQName returns [String current=null] : iv_ruleQName= ruleQName EOF ;
    public final String entryRuleQName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQName = null;


        try {
            // InternalJexTest.g:1074:2: (iv_ruleQName= ruleQName EOF )
            // InternalJexTest.g:1075:2: iv_ruleQName= ruleQName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQName=ruleQName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQName"


    // $ANTLR start "ruleQName"
    // InternalJexTest.g:1082:1: ruleQName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_ID_0= RULE_ID )+ (kw= '.' this_ID_2= RULE_ID )* ) ;
    public final AntlrDatatypeRuleToken ruleQName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:1085:28: ( ( (this_ID_0= RULE_ID )+ (kw= '.' this_ID_2= RULE_ID )* ) )
            // InternalJexTest.g:1086:1: ( (this_ID_0= RULE_ID )+ (kw= '.' this_ID_2= RULE_ID )* )
            {
            // InternalJexTest.g:1086:1: ( (this_ID_0= RULE_ID )+ (kw= '.' this_ID_2= RULE_ID )* )
            // InternalJexTest.g:1086:2: (this_ID_0= RULE_ID )+ (kw= '.' this_ID_2= RULE_ID )*
            {
            // InternalJexTest.g:1086:2: (this_ID_0= RULE_ID )+
            int cnt35=0;
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_ID) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalJexTest.g:1086:7: this_ID_0= RULE_ID
            	    {
            	    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_0, grammarAccess.getQNameAccess().getIDTerminalRuleCall_0()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt35 >= 1 ) break loop35;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(35, input);
                        throw eee;
                }
                cnt35++;
            } while (true);

            // InternalJexTest.g:1093:3: (kw= '.' this_ID_2= RULE_ID )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==29) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalJexTest.g:1094:2: kw= '.' this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_2, grammarAccess.getQNameAccess().getIDTerminalRuleCall_1_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQName"


    // $ANTLR start "entryRuleState"
    // InternalJexTest.g:1114:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // InternalJexTest.g:1115:2: (iv_ruleState= ruleState EOF )
            // InternalJexTest.g:1116:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalJexTest.g:1123:1: ruleState returns [EObject current=null] : ( () otherlv_1= 'state' (otherlv_2= '#' ( (lv_name_3_0= RULE_ID ) ) )? ( (lv_description_4_0= RULE_STRING ) )? ( (lv_objectTests_5_0= ruleObjectTest ) )+ ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token lv_description_4_0=null;
        EObject lv_objectTests_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1126:28: ( ( () otherlv_1= 'state' (otherlv_2= '#' ( (lv_name_3_0= RULE_ID ) ) )? ( (lv_description_4_0= RULE_STRING ) )? ( (lv_objectTests_5_0= ruleObjectTest ) )+ ) )
            // InternalJexTest.g:1127:1: ( () otherlv_1= 'state' (otherlv_2= '#' ( (lv_name_3_0= RULE_ID ) ) )? ( (lv_description_4_0= RULE_STRING ) )? ( (lv_objectTests_5_0= ruleObjectTest ) )+ )
            {
            // InternalJexTest.g:1127:1: ( () otherlv_1= 'state' (otherlv_2= '#' ( (lv_name_3_0= RULE_ID ) ) )? ( (lv_description_4_0= RULE_STRING ) )? ( (lv_objectTests_5_0= ruleObjectTest ) )+ )
            // InternalJexTest.g:1127:2: () otherlv_1= 'state' (otherlv_2= '#' ( (lv_name_3_0= RULE_ID ) ) )? ( (lv_description_4_0= RULE_STRING ) )? ( (lv_objectTests_5_0= ruleObjectTest ) )+
            {
            // InternalJexTest.g:1127:2: ()
            // InternalJexTest.g:1128:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getStateAccess().getStateAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
                  
            }
            // InternalJexTest.g:1137:1: (otherlv_2= '#' ( (lv_name_3_0= RULE_ID ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==30) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalJexTest.g:1137:3: otherlv_2= '#' ( (lv_name_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,30,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getStateAccess().getNumberSignKeyword_2_0());
                          
                    }
                    // InternalJexTest.g:1141:1: ( (lv_name_3_0= RULE_ID ) )
                    // InternalJexTest.g:1142:1: (lv_name_3_0= RULE_ID )
                    {
                    // InternalJexTest.g:1142:1: (lv_name_3_0= RULE_ID )
                    // InternalJexTest.g:1143:3: lv_name_3_0= RULE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_3_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.ID");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:1159:4: ( (lv_description_4_0= RULE_STRING ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_STRING) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalJexTest.g:1160:1: (lv_description_4_0= RULE_STRING )
                    {
                    // InternalJexTest.g:1160:1: (lv_description_4_0= RULE_STRING )
                    // InternalJexTest.g:1161:3: lv_description_4_0= RULE_STRING
                    {
                    lv_description_4_0=(Token)match(input,RULE_STRING,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_description_4_0, grammarAccess.getStateAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"description",
                              		lv_description_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:1177:3: ( (lv_objectTests_5_0= ruleObjectTest ) )+
            int cnt39=0;
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==RULE_ID||LA39_0==27) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalJexTest.g:1178:1: (lv_objectTests_5_0= ruleObjectTest )
            	    {
            	    // InternalJexTest.g:1178:1: (lv_objectTests_5_0= ruleObjectTest )
            	    // InternalJexTest.g:1179:3: lv_objectTests_5_0= ruleObjectTest
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStateAccess().getObjectTestsObjectTestParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_objectTests_5_0=ruleObjectTest();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"objectTests",
            	              		lv_objectTests_5_0, 
            	              		"no.hal.jex.jextest.JexTest.ObjectTest");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt39 >= 1 ) break loop39;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(39, input);
                        throw eee;
                }
                cnt39++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleObjectTest"
    // InternalJexTest.g:1203:1: entryRuleObjectTest returns [EObject current=null] : iv_ruleObjectTest= ruleObjectTest EOF ;
    public final EObject entryRuleObjectTest() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectTest = null;


        try {
            // InternalJexTest.g:1204:2: (iv_ruleObjectTest= ruleObjectTest EOF )
            // InternalJexTest.g:1205:2: iv_ruleObjectTest= ruleObjectTest EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectTestRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectTest=ruleObjectTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectTest; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObjectTest"


    // $ANTLR start "ruleObjectTest"
    // InternalJexTest.g:1212:1: ruleObjectTest returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) )? ( (lv_test_1_0= rulePropertiesTest ) ) ) ;
    public final EObject ruleObjectTest() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_test_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1215:28: ( ( ( (otherlv_0= RULE_ID ) )? ( (lv_test_1_0= rulePropertiesTest ) ) ) )
            // InternalJexTest.g:1216:1: ( ( (otherlv_0= RULE_ID ) )? ( (lv_test_1_0= rulePropertiesTest ) ) )
            {
            // InternalJexTest.g:1216:1: ( ( (otherlv_0= RULE_ID ) )? ( (lv_test_1_0= rulePropertiesTest ) ) )
            // InternalJexTest.g:1216:2: ( (otherlv_0= RULE_ID ) )? ( (lv_test_1_0= rulePropertiesTest ) )
            {
            // InternalJexTest.g:1216:2: ( (otherlv_0= RULE_ID ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_ID) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalJexTest.g:1217:1: (otherlv_0= RULE_ID )
                    {
                    // InternalJexTest.g:1217:1: (otherlv_0= RULE_ID )
                    // InternalJexTest.g:1218:3: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getObjectTestRule());
                      	        }
                              
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_0, grammarAccess.getObjectTestAccess().getInstanceInstanceCrossReference_0_0()); 
                      	
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:1229:3: ( (lv_test_1_0= rulePropertiesTest ) )
            // InternalJexTest.g:1230:1: (lv_test_1_0= rulePropertiesTest )
            {
            // InternalJexTest.g:1230:1: (lv_test_1_0= rulePropertiesTest )
            // InternalJexTest.g:1231:3: lv_test_1_0= rulePropertiesTest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getObjectTestAccess().getTestPropertiesTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_test_1_0=rulePropertiesTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getObjectTestRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_1_0, 
                      		"no.hal.jex.jextest.JexTest.PropertiesTest");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObjectTest"


    // $ANTLR start "entryRulePropertiesTest"
    // InternalJexTest.g:1255:1: entryRulePropertiesTest returns [EObject current=null] : iv_rulePropertiesTest= rulePropertiesTest EOF ;
    public final EObject entryRulePropertiesTest() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertiesTest = null;


        try {
            // InternalJexTest.g:1256:2: (iv_rulePropertiesTest= rulePropertiesTest EOF )
            // InternalJexTest.g:1257:2: iv_rulePropertiesTest= rulePropertiesTest EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertiesTestRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertiesTest=rulePropertiesTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertiesTest; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertiesTest"


    // $ANTLR start "rulePropertiesTest"
    // InternalJexTest.g:1264:1: rulePropertiesTest returns [EObject current=null] : ( () (otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ) ;
    public final EObject rulePropertiesTest() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1267:28: ( ( () (otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ) )
            // InternalJexTest.g:1268:1: ( () (otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            {
            // InternalJexTest.g:1268:1: ( () (otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalJexTest.g:1268:2: () (otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalJexTest.g:1268:2: ()
            // InternalJexTest.g:1269:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertiesTestAccess().getPropertiesTestAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:1274:2: (otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalJexTest.g:1274:4: otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            otherlv_1=(Token)match(input,27,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPropertiesTestAccess().getLeftCurlyBracketKeyword_1_0());
                  
            }
            // InternalJexTest.g:1278:1: ( ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )? )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=RULE_STRING && LA42_0<=RULE_DECIMAL)||LA42_0==23||LA42_0==27||LA42_0==30||LA42_0==41||LA42_0==45||LA42_0==57||(LA42_0>=68 && LA42_0<=69)||LA42_0==74||LA42_0==78||LA42_0==81||LA42_0==83||(LA42_0>=87 && LA42_0<=89)||(LA42_0>=91 && LA42_0<=101)||LA42_0==103) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalJexTest.g:1278:2: ( (lv_expressions_2_0= ruleXExpression ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalJexTest.g:1278:2: ( (lv_expressions_2_0= ruleXExpression ) )
            	    // InternalJexTest.g:1279:1: (lv_expressions_2_0= ruleXExpression )
            	    {
            	    // InternalJexTest.g:1279:1: (lv_expressions_2_0= ruleXExpression )
            	    // InternalJexTest.g:1280:3: lv_expressions_2_0= ruleXExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPropertiesTestAccess().getExpressionsXExpressionParserRuleCall_1_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_expressions_2_0=ruleXExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPropertiesTestRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_2_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:1296:2: (otherlv_3= ';' )?
            	    int alt41=2;
            	    int LA41_0 = input.LA(1);

            	    if ( (LA41_0==31) ) {
            	        alt41=1;
            	    }
            	    switch (alt41) {
            	        case 1 :
            	            // InternalJexTest.g:1296:4: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,31,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getPropertiesTestAccess().getSemicolonKeyword_1_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            otherlv_4=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getPropertiesTestAccess().getRightCurlyBracketKeyword_1_2());
                  
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertiesTest"


    // $ANTLR start "entryRuleTransition"
    // InternalJexTest.g:1312:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalJexTest.g:1313:2: (iv_ruleTransition= ruleTransition EOF )
            // InternalJexTest.g:1314:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalJexTest.g:1321:1: ruleTransition returns [EObject current=null] : ( ( ( (lv_source_0_0= ruleTransitionSource ) )? ( (lv_description_1_0= RULE_STRING ) )? otherlv_2= '--' ( (lv_actions_3_0= ruleTransitionAction ) ) (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )* ( (lv_effects_6_0= ruleTransitionEffect ) ) ) | ( (lv_effects_7_0= ruleTransitionTargetEffect ) ) ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token lv_description_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_source_0_0 = null;

        EObject lv_actions_3_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_effects_6_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1324:28: ( ( ( ( (lv_source_0_0= ruleTransitionSource ) )? ( (lv_description_1_0= RULE_STRING ) )? otherlv_2= '--' ( (lv_actions_3_0= ruleTransitionAction ) ) (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )* ( (lv_effects_6_0= ruleTransitionEffect ) ) ) | ( (lv_effects_7_0= ruleTransitionTargetEffect ) ) ) )
            // InternalJexTest.g:1325:1: ( ( ( (lv_source_0_0= ruleTransitionSource ) )? ( (lv_description_1_0= RULE_STRING ) )? otherlv_2= '--' ( (lv_actions_3_0= ruleTransitionAction ) ) (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )* ( (lv_effects_6_0= ruleTransitionEffect ) ) ) | ( (lv_effects_7_0= ruleTransitionTargetEffect ) ) )
            {
            // InternalJexTest.g:1325:1: ( ( ( (lv_source_0_0= ruleTransitionSource ) )? ( (lv_description_1_0= RULE_STRING ) )? otherlv_2= '--' ( (lv_actions_3_0= ruleTransitionAction ) ) (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )* ( (lv_effects_6_0= ruleTransitionEffect ) ) ) | ( (lv_effects_7_0= ruleTransitionTargetEffect ) ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_STRING||LA46_0==21||LA46_0==30||LA46_0==32) ) {
                alt46=1;
            }
            else if ( (LA46_0==33) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalJexTest.g:1325:2: ( ( (lv_source_0_0= ruleTransitionSource ) )? ( (lv_description_1_0= RULE_STRING ) )? otherlv_2= '--' ( (lv_actions_3_0= ruleTransitionAction ) ) (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )* ( (lv_effects_6_0= ruleTransitionEffect ) ) )
                    {
                    // InternalJexTest.g:1325:2: ( ( (lv_source_0_0= ruleTransitionSource ) )? ( (lv_description_1_0= RULE_STRING ) )? otherlv_2= '--' ( (lv_actions_3_0= ruleTransitionAction ) ) (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )* ( (lv_effects_6_0= ruleTransitionEffect ) ) )
                    // InternalJexTest.g:1325:3: ( (lv_source_0_0= ruleTransitionSource ) )? ( (lv_description_1_0= RULE_STRING ) )? otherlv_2= '--' ( (lv_actions_3_0= ruleTransitionAction ) ) (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )* ( (lv_effects_6_0= ruleTransitionEffect ) )
                    {
                    // InternalJexTest.g:1325:3: ( (lv_source_0_0= ruleTransitionSource ) )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==21||LA43_0==30) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalJexTest.g:1326:1: (lv_source_0_0= ruleTransitionSource )
                            {
                            // InternalJexTest.g:1326:1: (lv_source_0_0= ruleTransitionSource )
                            // InternalJexTest.g:1327:3: lv_source_0_0= ruleTransitionSource
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTransitionAccess().getSourceTransitionSourceParserRuleCall_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_source_0_0=ruleTransitionSource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"source",
                                      		lv_source_0_0, 
                                      		"no.hal.jex.jextest.JexTest.TransitionSource");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalJexTest.g:1343:3: ( (lv_description_1_0= RULE_STRING ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==RULE_STRING) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalJexTest.g:1344:1: (lv_description_1_0= RULE_STRING )
                            {
                            // InternalJexTest.g:1344:1: (lv_description_1_0= RULE_STRING )
                            // InternalJexTest.g:1345:3: lv_description_1_0= RULE_STRING
                            {
                            lv_description_1_0=(Token)match(input,RULE_STRING,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_description_1_0, grammarAccess.getTransitionAccess().getDescriptionSTRINGTerminalRuleCall_0_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getTransitionRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"description",
                                      		lv_description_1_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.STRING");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,32,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getHyphenMinusHyphenMinusKeyword_0_2());
                          
                    }
                    // InternalJexTest.g:1365:1: ( (lv_actions_3_0= ruleTransitionAction ) )
                    // InternalJexTest.g:1366:1: (lv_actions_3_0= ruleTransitionAction )
                    {
                    // InternalJexTest.g:1366:1: (lv_actions_3_0= ruleTransitionAction )
                    // InternalJexTest.g:1367:3: lv_actions_3_0= ruleTransitionAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getActionsTransitionActionParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_43);
                    lv_actions_3_0=ruleTransitionAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		add(
                             			current, 
                             			"actions",
                              		lv_actions_3_0, 
                              		"no.hal.jex.jextest.JexTest.TransitionAction");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:1383:2: (otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==16) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalJexTest.g:1383:4: otherlv_4= ',' ( (lv_actions_5_0= ruleTransitionAction ) )
                    	    {
                    	    otherlv_4=(Token)match(input,16,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getCommaKeyword_0_4_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:1387:1: ( (lv_actions_5_0= ruleTransitionAction ) )
                    	    // InternalJexTest.g:1388:1: (lv_actions_5_0= ruleTransitionAction )
                    	    {
                    	    // InternalJexTest.g:1388:1: (lv_actions_5_0= ruleTransitionAction )
                    	    // InternalJexTest.g:1389:3: lv_actions_5_0= ruleTransitionAction
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTransitionAccess().getActionsTransitionActionParserRuleCall_0_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    lv_actions_5_0=ruleTransitionAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"actions",
                    	              		lv_actions_5_0, 
                    	              		"no.hal.jex.jextest.JexTest.TransitionAction");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    // InternalJexTest.g:1405:4: ( (lv_effects_6_0= ruleTransitionEffect ) )
                    // InternalJexTest.g:1406:1: (lv_effects_6_0= ruleTransitionEffect )
                    {
                    // InternalJexTest.g:1406:1: (lv_effects_6_0= ruleTransitionEffect )
                    // InternalJexTest.g:1407:3: lv_effects_6_0= ruleTransitionEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsTransitionEffectParserRuleCall_0_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_effects_6_0=ruleTransitionEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_6_0, 
                              		"no.hal.jex.jextest.JexTest.TransitionEffect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:1424:6: ( (lv_effects_7_0= ruleTransitionTargetEffect ) )
                    {
                    // InternalJexTest.g:1424:6: ( (lv_effects_7_0= ruleTransitionTargetEffect ) )
                    // InternalJexTest.g:1425:1: (lv_effects_7_0= ruleTransitionTargetEffect )
                    {
                    // InternalJexTest.g:1425:1: (lv_effects_7_0= ruleTransitionTargetEffect )
                    // InternalJexTest.g:1426:3: lv_effects_7_0= ruleTransitionTargetEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsTransitionTargetEffectParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_effects_7_0=ruleTransitionTargetEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_7_0, 
                              		"no.hal.jex.jextest.JexTest.TransitionTargetEffect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleTransitionSource"
    // InternalJexTest.g:1450:1: entryRuleTransitionSource returns [EObject current=null] : iv_ruleTransitionSource= ruleTransitionSource EOF ;
    public final EObject entryRuleTransitionSource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionSource = null;


        try {
            // InternalJexTest.g:1451:2: (iv_ruleTransitionSource= ruleTransitionSource EOF )
            // InternalJexTest.g:1452:2: iv_ruleTransitionSource= ruleTransitionSource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionSource=ruleTransitionSource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionSource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionSource"


    // $ANTLR start "ruleTransitionSource"
    // InternalJexTest.g:1459:1: ruleTransitionSource returns [EObject current=null] : ( ( (lv_state_0_0= ruleState ) ) | (otherlv_1= '#' ( (otherlv_2= RULE_ID ) ) ) ) ;
    public final EObject ruleTransitionSource() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_state_0_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1462:28: ( ( ( (lv_state_0_0= ruleState ) ) | (otherlv_1= '#' ( (otherlv_2= RULE_ID ) ) ) ) )
            // InternalJexTest.g:1463:1: ( ( (lv_state_0_0= ruleState ) ) | (otherlv_1= '#' ( (otherlv_2= RULE_ID ) ) ) )
            {
            // InternalJexTest.g:1463:1: ( ( (lv_state_0_0= ruleState ) ) | (otherlv_1= '#' ( (otherlv_2= RULE_ID ) ) ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==21) ) {
                alt47=1;
            }
            else if ( (LA47_0==30) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalJexTest.g:1463:2: ( (lv_state_0_0= ruleState ) )
                    {
                    // InternalJexTest.g:1463:2: ( (lv_state_0_0= ruleState ) )
                    // InternalJexTest.g:1464:1: (lv_state_0_0= ruleState )
                    {
                    // InternalJexTest.g:1464:1: (lv_state_0_0= ruleState )
                    // InternalJexTest.g:1465:3: lv_state_0_0= ruleState
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionSourceAccess().getStateStateParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_state_0_0=ruleState();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionSourceRule());
                      	        }
                             		set(
                             			current, 
                             			"state",
                              		lv_state_0_0, 
                              		"no.hal.jex.jextest.JexTest.State");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:1482:6: (otherlv_1= '#' ( (otherlv_2= RULE_ID ) ) )
                    {
                    // InternalJexTest.g:1482:6: (otherlv_1= '#' ( (otherlv_2= RULE_ID ) ) )
                    // InternalJexTest.g:1482:8: otherlv_1= '#' ( (otherlv_2= RULE_ID ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTransitionSourceAccess().getNumberSignKeyword_1_0());
                          
                    }
                    // InternalJexTest.g:1486:1: ( (otherlv_2= RULE_ID ) )
                    // InternalJexTest.g:1487:1: (otherlv_2= RULE_ID )
                    {
                    // InternalJexTest.g:1487:1: (otherlv_2= RULE_ID )
                    // InternalJexTest.g:1488:3: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionSourceRule());
                      	        }
                              
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_2, grammarAccess.getTransitionSourceAccess().getStateRefStateCrossReference_1_1_0()); 
                      	
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionSource"


    // $ANTLR start "entryRuleTransitionAction"
    // InternalJexTest.g:1507:1: entryRuleTransitionAction returns [EObject current=null] : iv_ruleTransitionAction= ruleTransitionAction EOF ;
    public final EObject entryRuleTransitionAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionAction = null;


        try {
            // InternalJexTest.g:1508:2: (iv_ruleTransitionAction= ruleTransitionAction EOF )
            // InternalJexTest.g:1509:2: iv_ruleTransitionAction= ruleTransitionAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionAction=ruleTransitionAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionAction"


    // $ANTLR start "ruleTransitionAction"
    // InternalJexTest.g:1516:1: ruleTransitionAction returns [EObject current=null] : this_TransitionExpressionAction_0= ruleTransitionExpressionAction ;
    public final EObject ruleTransitionAction() throws RecognitionException {
        EObject current = null;

        EObject this_TransitionExpressionAction_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1519:28: (this_TransitionExpressionAction_0= ruleTransitionExpressionAction )
            // InternalJexTest.g:1521:5: this_TransitionExpressionAction_0= ruleTransitionExpressionAction
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTransitionActionAccess().getTransitionExpressionActionParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_TransitionExpressionAction_0=ruleTransitionExpressionAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_TransitionExpressionAction_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionAction"


    // $ANTLR start "entryRuleTransitionExpressionAction"
    // InternalJexTest.g:1537:1: entryRuleTransitionExpressionAction returns [EObject current=null] : iv_ruleTransitionExpressionAction= ruleTransitionExpressionAction EOF ;
    public final EObject entryRuleTransitionExpressionAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionExpressionAction = null;


        try {
            // InternalJexTest.g:1538:2: (iv_ruleTransitionExpressionAction= ruleTransitionExpressionAction EOF )
            // InternalJexTest.g:1539:2: iv_ruleTransitionExpressionAction= ruleTransitionExpressionAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionExpressionActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionExpressionAction=ruleTransitionExpressionAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionExpressionAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionExpressionAction"


    // $ANTLR start "ruleTransitionExpressionAction"
    // InternalJexTest.g:1546:1: ruleTransitionExpressionAction returns [EObject current=null] : ( ( (lv_expr_0_0= ruleXExpression ) ) (otherlv_1= '#' ( (lv_times_2_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleTransitionExpressionAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expr_0_0 = null;

        EObject lv_times_2_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1549:28: ( ( ( (lv_expr_0_0= ruleXExpression ) ) (otherlv_1= '#' ( (lv_times_2_0= ruleXExpression ) ) )? ) )
            // InternalJexTest.g:1550:1: ( ( (lv_expr_0_0= ruleXExpression ) ) (otherlv_1= '#' ( (lv_times_2_0= ruleXExpression ) ) )? )
            {
            // InternalJexTest.g:1550:1: ( ( (lv_expr_0_0= ruleXExpression ) ) (otherlv_1= '#' ( (lv_times_2_0= ruleXExpression ) ) )? )
            // InternalJexTest.g:1550:2: ( (lv_expr_0_0= ruleXExpression ) ) (otherlv_1= '#' ( (lv_times_2_0= ruleXExpression ) ) )?
            {
            // InternalJexTest.g:1550:2: ( (lv_expr_0_0= ruleXExpression ) )
            // InternalJexTest.g:1551:1: (lv_expr_0_0= ruleXExpression )
            {
            // InternalJexTest.g:1551:1: (lv_expr_0_0= ruleXExpression )
            // InternalJexTest.g:1552:3: lv_expr_0_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTransitionExpressionActionAccess().getExprXExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_44);
            lv_expr_0_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTransitionExpressionActionRule());
              	        }
                     		set(
                     			current, 
                     			"expr",
                      		lv_expr_0_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:1568:2: (otherlv_1= '#' ( (lv_times_2_0= ruleXExpression ) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==30) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalJexTest.g:1568:4: otherlv_1= '#' ( (lv_times_2_0= ruleXExpression ) )
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTransitionExpressionActionAccess().getNumberSignKeyword_1_0());
                          
                    }
                    // InternalJexTest.g:1572:1: ( (lv_times_2_0= ruleXExpression ) )
                    // InternalJexTest.g:1573:1: (lv_times_2_0= ruleXExpression )
                    {
                    // InternalJexTest.g:1573:1: (lv_times_2_0= ruleXExpression )
                    // InternalJexTest.g:1574:3: lv_times_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionExpressionActionAccess().getTimesXExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_times_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionExpressionActionRule());
                      	        }
                             		set(
                             			current, 
                             			"times",
                              		lv_times_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionExpressionAction"


    // $ANTLR start "entryRuleTransitionEffect"
    // InternalJexTest.g:1600:1: entryRuleTransitionEffect returns [EObject current=null] : iv_ruleTransitionEffect= ruleTransitionEffect EOF ;
    public final EObject entryRuleTransitionEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionEffect = null;


        try {
            // InternalJexTest.g:1601:2: (iv_ruleTransitionEffect= ruleTransitionEffect EOF )
            // InternalJexTest.g:1602:2: iv_ruleTransitionEffect= ruleTransitionEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionEffectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionEffect=ruleTransitionEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionEffect; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionEffect"


    // $ANTLR start "ruleTransitionEffect"
    // InternalJexTest.g:1609:1: ruleTransitionEffect returns [EObject current=null] : (this_TransitionTargetEffect_0= ruleTransitionTargetEffect | this_TransitionEffect2_1= ruleTransitionEffect2 ) ;
    public final EObject ruleTransitionEffect() throws RecognitionException {
        EObject current = null;

        EObject this_TransitionTargetEffect_0 = null;

        EObject this_TransitionEffect2_1 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1612:28: ( (this_TransitionTargetEffect_0= ruleTransitionTargetEffect | this_TransitionEffect2_1= ruleTransitionEffect2 ) )
            // InternalJexTest.g:1613:1: (this_TransitionTargetEffect_0= ruleTransitionTargetEffect | this_TransitionEffect2_1= ruleTransitionEffect2 )
            {
            // InternalJexTest.g:1613:1: (this_TransitionTargetEffect_0= ruleTransitionTargetEffect | this_TransitionEffect2_1= ruleTransitionEffect2 )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==33) ) {
                alt49=1;
            }
            else if ( ((LA49_0>=34 && LA49_0<=35)) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalJexTest.g:1614:5: this_TransitionTargetEffect_0= ruleTransitionTargetEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTransitionEffectAccess().getTransitionTargetEffectParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TransitionTargetEffect_0=ruleTransitionTargetEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TransitionTargetEffect_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:1624:5: this_TransitionEffect2_1= ruleTransitionEffect2
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTransitionEffectAccess().getTransitionEffect2ParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TransitionEffect2_1=ruleTransitionEffect2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TransitionEffect2_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionEffect"


    // $ANTLR start "entryRuleTransitionEffect2"
    // InternalJexTest.g:1640:1: entryRuleTransitionEffect2 returns [EObject current=null] : iv_ruleTransitionEffect2= ruleTransitionEffect2 EOF ;
    public final EObject entryRuleTransitionEffect2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionEffect2 = null;


        try {
            // InternalJexTest.g:1641:2: (iv_ruleTransitionEffect2= ruleTransitionEffect2 EOF )
            // InternalJexTest.g:1642:2: iv_ruleTransitionEffect2= ruleTransitionEffect2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionEffect2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionEffect2=ruleTransitionEffect2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionEffect2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionEffect2"


    // $ANTLR start "ruleTransitionEffect2"
    // InternalJexTest.g:1649:1: ruleTransitionEffect2 returns [EObject current=null] : (this_TransitionExceptionEffect_0= ruleTransitionExceptionEffect | this_TransitionCallbackEffect_1= ruleTransitionCallbackEffect ) ;
    public final EObject ruleTransitionEffect2() throws RecognitionException {
        EObject current = null;

        EObject this_TransitionExceptionEffect_0 = null;

        EObject this_TransitionCallbackEffect_1 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1652:28: ( (this_TransitionExceptionEffect_0= ruleTransitionExceptionEffect | this_TransitionCallbackEffect_1= ruleTransitionCallbackEffect ) )
            // InternalJexTest.g:1653:1: (this_TransitionExceptionEffect_0= ruleTransitionExceptionEffect | this_TransitionCallbackEffect_1= ruleTransitionCallbackEffect )
            {
            // InternalJexTest.g:1653:1: (this_TransitionExceptionEffect_0= ruleTransitionExceptionEffect | this_TransitionCallbackEffect_1= ruleTransitionCallbackEffect )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==34) ) {
                alt50=1;
            }
            else if ( (LA50_0==35) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalJexTest.g:1654:5: this_TransitionExceptionEffect_0= ruleTransitionExceptionEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTransitionEffect2Access().getTransitionExceptionEffectParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TransitionExceptionEffect_0=ruleTransitionExceptionEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TransitionExceptionEffect_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:1664:5: this_TransitionCallbackEffect_1= ruleTransitionCallbackEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTransitionEffect2Access().getTransitionCallbackEffectParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TransitionCallbackEffect_1=ruleTransitionCallbackEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TransitionCallbackEffect_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionEffect2"


    // $ANTLR start "entryRuleTransitionTargetEffect"
    // InternalJexTest.g:1680:1: entryRuleTransitionTargetEffect returns [EObject current=null] : iv_ruleTransitionTargetEffect= ruleTransitionTargetEffect EOF ;
    public final EObject entryRuleTransitionTargetEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionTargetEffect = null;


        try {
            // InternalJexTest.g:1681:2: (iv_ruleTransitionTargetEffect= ruleTransitionTargetEffect EOF )
            // InternalJexTest.g:1682:2: iv_ruleTransitionTargetEffect= ruleTransitionTargetEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionTargetEffectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionTargetEffect=ruleTransitionTargetEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionTargetEffect; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionTargetEffect"


    // $ANTLR start "ruleTransitionTargetEffect"
    // InternalJexTest.g:1689:1: ruleTransitionTargetEffect returns [EObject current=null] : (otherlv_0= '-->' ( ( (lv_state_1_0= ruleState ) ) | (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) ) ) ) ;
    public final EObject ruleTransitionTargetEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_state_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1692:28: ( (otherlv_0= '-->' ( ( (lv_state_1_0= ruleState ) ) | (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) ) ) ) )
            // InternalJexTest.g:1693:1: (otherlv_0= '-->' ( ( (lv_state_1_0= ruleState ) ) | (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) ) ) )
            {
            // InternalJexTest.g:1693:1: (otherlv_0= '-->' ( ( (lv_state_1_0= ruleState ) ) | (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) ) ) )
            // InternalJexTest.g:1693:3: otherlv_0= '-->' ( ( (lv_state_1_0= ruleState ) ) | (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) ) )
            {
            otherlv_0=(Token)match(input,33,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTransitionTargetEffectAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_0());
                  
            }
            // InternalJexTest.g:1697:1: ( ( (lv_state_1_0= ruleState ) ) | (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==21) ) {
                alt51=1;
            }
            else if ( (LA51_0==30) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalJexTest.g:1697:2: ( (lv_state_1_0= ruleState ) )
                    {
                    // InternalJexTest.g:1697:2: ( (lv_state_1_0= ruleState ) )
                    // InternalJexTest.g:1698:1: (lv_state_1_0= ruleState )
                    {
                    // InternalJexTest.g:1698:1: (lv_state_1_0= ruleState )
                    // InternalJexTest.g:1699:3: lv_state_1_0= ruleState
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionTargetEffectAccess().getStateStateParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_state_1_0=ruleState();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionTargetEffectRule());
                      	        }
                             		set(
                             			current, 
                             			"state",
                              		lv_state_1_0, 
                              		"no.hal.jex.jextest.JexTest.State");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:1716:6: (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) )
                    {
                    // InternalJexTest.g:1716:6: (otherlv_2= '#' ( (otherlv_3= RULE_ID ) ) )
                    // InternalJexTest.g:1716:8: otherlv_2= '#' ( (otherlv_3= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,30,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getTransitionTargetEffectAccess().getNumberSignKeyword_1_1_0());
                          
                    }
                    // InternalJexTest.g:1720:1: ( (otherlv_3= RULE_ID ) )
                    // InternalJexTest.g:1721:1: (otherlv_3= RULE_ID )
                    {
                    // InternalJexTest.g:1721:1: (otherlv_3= RULE_ID )
                    // InternalJexTest.g:1722:3: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionTargetEffectRule());
                      	        }
                              
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_3, grammarAccess.getTransitionTargetEffectAccess().getStateRefStateCrossReference_1_1_1_0()); 
                      	
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionTargetEffect"


    // $ANTLR start "entryRuleTransitionExceptionEffect"
    // InternalJexTest.g:1741:1: entryRuleTransitionExceptionEffect returns [EObject current=null] : iv_ruleTransitionExceptionEffect= ruleTransitionExceptionEffect EOF ;
    public final EObject entryRuleTransitionExceptionEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionExceptionEffect = null;


        try {
            // InternalJexTest.g:1742:2: (iv_ruleTransitionExceptionEffect= ruleTransitionExceptionEffect EOF )
            // InternalJexTest.g:1743:2: iv_ruleTransitionExceptionEffect= ruleTransitionExceptionEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionExceptionEffectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionExceptionEffect=ruleTransitionExceptionEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionExceptionEffect; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionExceptionEffect"


    // $ANTLR start "ruleTransitionExceptionEffect"
    // InternalJexTest.g:1750:1: ruleTransitionExceptionEffect returns [EObject current=null] : (otherlv_0= 'throws' ( (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference ) ) ) ;
    public final EObject ruleTransitionExceptionEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_exceptionClass_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1753:28: ( (otherlv_0= 'throws' ( (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference ) ) ) )
            // InternalJexTest.g:1754:1: (otherlv_0= 'throws' ( (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference ) ) )
            {
            // InternalJexTest.g:1754:1: (otherlv_0= 'throws' ( (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference ) ) )
            // InternalJexTest.g:1754:3: otherlv_0= 'throws' ( (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference ) )
            {
            otherlv_0=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTransitionExceptionEffectAccess().getThrowsKeyword_0());
                  
            }
            // InternalJexTest.g:1758:1: ( (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference ) )
            // InternalJexTest.g:1759:1: (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference )
            {
            // InternalJexTest.g:1759:1: (lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference )
            // InternalJexTest.g:1760:3: lv_exceptionClass_1_0= ruleJvmParameterizedTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTransitionExceptionEffectAccess().getExceptionClassJvmParameterizedTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_exceptionClass_1_0=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTransitionExceptionEffectRule());
              	        }
                     		set(
                     			current, 
                     			"exceptionClass",
                      		lv_exceptionClass_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionExceptionEffect"


    // $ANTLR start "entryRuleTransitionCallbackEffect"
    // InternalJexTest.g:1786:1: entryRuleTransitionCallbackEffect returns [EObject current=null] : iv_ruleTransitionCallbackEffect= ruleTransitionCallbackEffect EOF ;
    public final EObject entryRuleTransitionCallbackEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransitionCallbackEffect = null;


        try {
            // InternalJexTest.g:1787:2: (iv_ruleTransitionCallbackEffect= ruleTransitionCallbackEffect EOF )
            // InternalJexTest.g:1788:2: iv_ruleTransitionCallbackEffect= ruleTransitionCallbackEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionCallbackEffectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransitionCallbackEffect=ruleTransitionCallbackEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransitionCallbackEffect; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransitionCallbackEffect"


    // $ANTLR start "ruleTransitionCallbackEffect"
    // InternalJexTest.g:1795:1: ruleTransitionCallbackEffect returns [EObject current=null] : (otherlv_0= 'callback' ( (otherlv_1= RULE_ID ) ) otherlv_2= 'to' ( ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) ) otherlv_4= '.' )? ( (lv_methodName_5_0= RULE_ID ) ) ( (lv_parameters_6_0= ruleParameterList ) )? ( (lv_arguments_7_0= rulePropertiesTest ) ) ) ;
    public final EObject ruleTransitionCallbackEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_methodName_5_0=null;
        EObject lv_callbackClass_3_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_arguments_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1798:28: ( (otherlv_0= 'callback' ( (otherlv_1= RULE_ID ) ) otherlv_2= 'to' ( ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) ) otherlv_4= '.' )? ( (lv_methodName_5_0= RULE_ID ) ) ( (lv_parameters_6_0= ruleParameterList ) )? ( (lv_arguments_7_0= rulePropertiesTest ) ) ) )
            // InternalJexTest.g:1799:1: (otherlv_0= 'callback' ( (otherlv_1= RULE_ID ) ) otherlv_2= 'to' ( ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) ) otherlv_4= '.' )? ( (lv_methodName_5_0= RULE_ID ) ) ( (lv_parameters_6_0= ruleParameterList ) )? ( (lv_arguments_7_0= rulePropertiesTest ) ) )
            {
            // InternalJexTest.g:1799:1: (otherlv_0= 'callback' ( (otherlv_1= RULE_ID ) ) otherlv_2= 'to' ( ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) ) otherlv_4= '.' )? ( (lv_methodName_5_0= RULE_ID ) ) ( (lv_parameters_6_0= ruleParameterList ) )? ( (lv_arguments_7_0= rulePropertiesTest ) ) )
            // InternalJexTest.g:1799:3: otherlv_0= 'callback' ( (otherlv_1= RULE_ID ) ) otherlv_2= 'to' ( ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) ) otherlv_4= '.' )? ( (lv_methodName_5_0= RULE_ID ) ) ( (lv_parameters_6_0= ruleParameterList ) )? ( (lv_arguments_7_0= rulePropertiesTest ) )
            {
            otherlv_0=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTransitionCallbackEffectAccess().getCallbackKeyword_0());
                  
            }
            // InternalJexTest.g:1803:1: ( (otherlv_1= RULE_ID ) )
            // InternalJexTest.g:1804:1: (otherlv_1= RULE_ID )
            {
            // InternalJexTest.g:1804:1: (otherlv_1= RULE_ID )
            // InternalJexTest.g:1805:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getTransitionCallbackEffectRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getTransitionCallbackEffectAccess().getInstanceInstanceCrossReference_1_0()); 
              	
            }

            }


            }

            otherlv_2=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTransitionCallbackEffectAccess().getToKeyword_2());
                  
            }
            // InternalJexTest.g:1820:1: ( ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) ) otherlv_4= '.' )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ID) ) {
                int LA52_1 = input.LA(2);

                if ( (LA52_1==29||LA52_1==57) ) {
                    alt52=1;
                }
            }
            switch (alt52) {
                case 1 :
                    // InternalJexTest.g:1820:2: ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) ) otherlv_4= '.'
                    {
                    // InternalJexTest.g:1820:2: ( (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference ) )
                    // InternalJexTest.g:1821:1: (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference )
                    {
                    // InternalJexTest.g:1821:1: (lv_callbackClass_3_0= ruleJvmParameterizedTypeReference )
                    // InternalJexTest.g:1822:3: lv_callbackClass_3_0= ruleJvmParameterizedTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionCallbackEffectAccess().getCallbackClassJvmParameterizedTypeReferenceParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_47);
                    lv_callbackClass_3_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionCallbackEffectRule());
                      	        }
                             		set(
                             			current, 
                             			"callbackClass",
                              		lv_callbackClass_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTransitionCallbackEffectAccess().getFullStopKeyword_3_1());
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:1842:3: ( (lv_methodName_5_0= RULE_ID ) )
            // InternalJexTest.g:1843:1: (lv_methodName_5_0= RULE_ID )
            {
            // InternalJexTest.g:1843:1: (lv_methodName_5_0= RULE_ID )
            // InternalJexTest.g:1844:3: lv_methodName_5_0= RULE_ID
            {
            lv_methodName_5_0=(Token)match(input,RULE_ID,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_methodName_5_0, grammarAccess.getTransitionCallbackEffectAccess().getMethodNameIDTerminalRuleCall_4_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTransitionCallbackEffectRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"methodName",
                      		lv_methodName_5_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }

            // InternalJexTest.g:1860:2: ( (lv_parameters_6_0= ruleParameterList ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==23) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalJexTest.g:1861:1: (lv_parameters_6_0= ruleParameterList )
                    {
                    // InternalJexTest.g:1861:1: (lv_parameters_6_0= ruleParameterList )
                    // InternalJexTest.g:1862:3: lv_parameters_6_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionCallbackEffectAccess().getParametersParameterListParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_parameters_6_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionCallbackEffectRule());
                      	        }
                             		set(
                             			current, 
                             			"parameters",
                              		lv_parameters_6_0, 
                              		"no.hal.jex.jextest.JexTest.ParameterList");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:1878:3: ( (lv_arguments_7_0= rulePropertiesTest ) )
            // InternalJexTest.g:1879:1: (lv_arguments_7_0= rulePropertiesTest )
            {
            // InternalJexTest.g:1879:1: (lv_arguments_7_0= rulePropertiesTest )
            // InternalJexTest.g:1880:3: lv_arguments_7_0= rulePropertiesTest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTransitionCallbackEffectAccess().getArgumentsPropertiesTestParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_arguments_7_0=rulePropertiesTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTransitionCallbackEffectRule());
              	        }
                     		set(
                     			current, 
                     			"arguments",
                      		lv_arguments_7_0, 
                      		"no.hal.jex.jextest.JexTest.PropertiesTest");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransitionCallbackEffect"


    // $ANTLR start "entryRuleMethod"
    // InternalJexTest.g:1904:1: entryRuleMethod returns [EObject current=null] : iv_ruleMethod= ruleMethod EOF ;
    public final EObject entryRuleMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethod = null;


        try {
            // InternalJexTest.g:1905:2: (iv_ruleMethod= ruleMethod EOF )
            // InternalJexTest.g:1906:2: iv_ruleMethod= ruleMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethod=ruleMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethod; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethod"


    // $ANTLR start "ruleMethod"
    // InternalJexTest.g:1913:1: ruleMethod returns [EObject current=null] : (otherlv_0= 'method' ( (lv_returnType_1_0= ruleJvmTypeReference ) )? ( ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) ) ) ( (lv_parameters_3_0= ruleParameterList ) ) ( (lv_body_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleMethod() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_2_1=null;
        EObject lv_returnType_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_2 = null;

        AntlrDatatypeRuleToken lv_name_2_3 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_body_4_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:1916:28: ( (otherlv_0= 'method' ( (lv_returnType_1_0= ruleJvmTypeReference ) )? ( ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) ) ) ( (lv_parameters_3_0= ruleParameterList ) ) ( (lv_body_4_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:1917:1: (otherlv_0= 'method' ( (lv_returnType_1_0= ruleJvmTypeReference ) )? ( ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) ) ) ( (lv_parameters_3_0= ruleParameterList ) ) ( (lv_body_4_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:1917:1: (otherlv_0= 'method' ( (lv_returnType_1_0= ruleJvmTypeReference ) )? ( ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) ) ) ( (lv_parameters_3_0= ruleParameterList ) ) ( (lv_body_4_0= ruleXExpression ) ) )
            // InternalJexTest.g:1917:3: otherlv_0= 'method' ( (lv_returnType_1_0= ruleJvmTypeReference ) )? ( ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) ) ) ( (lv_parameters_3_0= ruleParameterList ) ) ( (lv_body_4_0= ruleXExpression ) )
            {
            otherlv_0=(Token)match(input,22,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMethodAccess().getMethodKeyword_0());
                  
            }
            // InternalJexTest.g:1921:1: ( (lv_returnType_1_0= ruleJvmTypeReference ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ID) ) {
                int LA54_1 = input.LA(2);

                if ( (LA54_1==RULE_ID||LA54_1==29||(LA54_1>=47 && LA54_1<=51)||(LA54_1>=57 && LA54_1<=59)||LA54_1==78) ) {
                    alt54=1;
                }
            }
            else if ( (LA54_0==23||LA54_0==43) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalJexTest.g:1922:1: (lv_returnType_1_0= ruleJvmTypeReference )
                    {
                    // InternalJexTest.g:1922:1: (lv_returnType_1_0= ruleJvmTypeReference )
                    // InternalJexTest.g:1923:3: lv_returnType_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodAccess().getReturnTypeJvmTypeReferenceParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_49);
                    lv_returnType_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"returnType",
                              		lv_returnType_1_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:1939:3: ( ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) ) )
            // InternalJexTest.g:1940:1: ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) )
            {
            // InternalJexTest.g:1940:1: ( (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare ) )
            // InternalJexTest.g:1941:1: (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare )
            {
            // InternalJexTest.g:1941:1: (lv_name_2_1= RULE_ID | lv_name_2_2= ruleOpEquality | lv_name_2_3= ruleOpCompare )
            int alt55=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt55=1;
                }
                break;
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
                {
                alt55=2;
                }
                break;
            case 57:
            case 58:
            case 59:
                {
                alt55=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalJexTest.g:1942:3: lv_name_2_1= RULE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_ID,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_1, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMethodRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_1, 
                              		"org.eclipse.xtext.xbase.Xtype.ID");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:1957:8: lv_name_2_2= ruleOpEquality
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodAccess().getNameOpEqualityParserRuleCall_2_0_1()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_2_2=ruleOpEquality();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_2, 
                              		"no.hal.jex.jextest.JexTest.OpEquality");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:1972:8: lv_name_2_3= ruleOpCompare
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodAccess().getNameOpCompareParserRuleCall_2_0_2()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_2_3=ruleOpCompare();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_3, 
                              		"org.eclipse.xtext.xbase.Xbase.OpCompare");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalJexTest.g:1990:2: ( (lv_parameters_3_0= ruleParameterList ) )
            // InternalJexTest.g:1991:1: (lv_parameters_3_0= ruleParameterList )
            {
            // InternalJexTest.g:1991:1: (lv_parameters_3_0= ruleParameterList )
            // InternalJexTest.g:1992:3: lv_parameters_3_0= ruleParameterList
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMethodAccess().getParametersParameterListParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_19);
            lv_parameters_3_0=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMethodRule());
              	        }
                     		set(
                     			current, 
                     			"parameters",
                      		lv_parameters_3_0, 
                      		"no.hal.jex.jextest.JexTest.ParameterList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:2008:2: ( (lv_body_4_0= ruleXExpression ) )
            // InternalJexTest.g:2009:1: (lv_body_4_0= ruleXExpression )
            {
            // InternalJexTest.g:2009:1: (lv_body_4_0= ruleXExpression )
            // InternalJexTest.g:2010:3: lv_body_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMethodAccess().getBodyXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMethodRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_4_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethod"


    // $ANTLR start "entryRuleParameterList"
    // InternalJexTest.g:2034:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalJexTest.g:2035:2: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalJexTest.g:2036:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalJexTest.g:2043:1: ruleParameterList returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2046:28: ( ( () otherlv_1= '(' ( ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )? otherlv_5= ')' ) )
            // InternalJexTest.g:2047:1: ( () otherlv_1= '(' ( ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )? otherlv_5= ')' )
            {
            // InternalJexTest.g:2047:1: ( () otherlv_1= '(' ( ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )? otherlv_5= ')' )
            // InternalJexTest.g:2047:2: () otherlv_1= '(' ( ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )? otherlv_5= ')'
            {
            // InternalJexTest.g:2047:2: ()
            // InternalJexTest.g:2048:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getParameterListAccess().getParameterListAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,23,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalJexTest.g:2057:1: ( ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_ID||LA57_0==23||LA57_0==43) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalJexTest.g:2057:2: ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    {
                    // InternalJexTest.g:2057:2: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalJexTest.g:2058:1: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalJexTest.g:2058:1: (lv_parameters_2_0= ruleParameter )
                    // InternalJexTest.g:2059:3: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_24);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterListRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_2_0, 
                              		"no.hal.jex.jextest.JexTest.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:2075:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==16) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // InternalJexTest.g:2075:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:2079:1: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalJexTest.g:2080:1: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalJexTest.g:2080:1: (lv_parameters_4_0= ruleParameter )
                    	    // InternalJexTest.g:2081:3: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_4_0, 
                    	              		"no.hal.jex.jextest.JexTest.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getParameterListAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleParameter"
    // InternalJexTest.g:2109:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalJexTest.g:2110:2: (iv_ruleParameter= ruleParameter EOF )
            // InternalJexTest.g:2111:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalJexTest.g:2118:1: ruleParameter returns [EObject current=null] : ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_vararg_1_0= '...' ) )? ( (lv_name_2_0= RULE_ID ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_vararg_1_0=null;
        Token lv_name_2_0=null;
        EObject lv_type_0_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2121:28: ( ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_vararg_1_0= '...' ) )? ( (lv_name_2_0= RULE_ID ) ) ) )
            // InternalJexTest.g:2122:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_vararg_1_0= '...' ) )? ( (lv_name_2_0= RULE_ID ) ) )
            {
            // InternalJexTest.g:2122:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_vararg_1_0= '...' ) )? ( (lv_name_2_0= RULE_ID ) ) )
            // InternalJexTest.g:2122:2: ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_vararg_1_0= '...' ) )? ( (lv_name_2_0= RULE_ID ) )
            {
            // InternalJexTest.g:2122:2: ( (lv_type_0_0= ruleJvmTypeReference ) )
            // InternalJexTest.g:2123:1: (lv_type_0_0= ruleJvmTypeReference )
            {
            // InternalJexTest.g:2123:1: (lv_type_0_0= ruleJvmTypeReference )
            // InternalJexTest.g:2124:3: lv_type_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_50);
            lv_type_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:2140:2: ( (lv_vararg_1_0= '...' ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==37) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalJexTest.g:2141:1: (lv_vararg_1_0= '...' )
                    {
                    // InternalJexTest.g:2141:1: (lv_vararg_1_0= '...' )
                    // InternalJexTest.g:2142:3: lv_vararg_1_0= '...'
                    {
                    lv_vararg_1_0=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_vararg_1_0, grammarAccess.getParameterAccess().getVarargFullStopFullStopFullStopKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "vararg", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:2155:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalJexTest.g:2156:1: (lv_name_2_0= RULE_ID )
            {
            // InternalJexTest.g:2156:1: (lv_name_2_0= RULE_ID )
            // InternalJexTest.g:2157:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTestedClass"
    // InternalJexTest.g:2181:1: entryRuleTestedClass returns [EObject current=null] : iv_ruleTestedClass= ruleTestedClass EOF ;
    public final EObject entryRuleTestedClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestedClass = null;


        try {
            // InternalJexTest.g:2182:2: (iv_ruleTestedClass= ruleTestedClass EOF )
            // InternalJexTest.g:2183:2: iv_ruleTestedClass= ruleTestedClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestedClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTestedClass=ruleTestedClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestedClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestedClass"


    // $ANTLR start "ruleTestedClass"
    // InternalJexTest.g:2190:1: ruleTestedClass returns [EObject current=null] : ( ( ( (lv_interface_0_0= 'interface' ) ) | ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? ) | otherlv_3= 'class' ) ( (lv_name_4_0= ruleQName ) ) (otherlv_5= 'extends' ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_7= 'implements' ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) ) (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )* )? ( (lv_description_11_0= RULE_STRING ) )? (otherlv_12= '=>' ( (lv_invariant_13_0= ruleXExpression ) ) )? otherlv_14= '{' ( (lv_methods_15_0= ruleTestedOperation ) )* otherlv_16= '}' ) ;
    public final EObject ruleTestedClass() throws RecognitionException {
        EObject current = null;

        Token lv_interface_0_0=null;
        Token lv_abstract_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_description_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject lv_superClass_6_0 = null;

        EObject lv_superInterfaces_8_0 = null;

        EObject lv_superInterfaces_10_0 = null;

        EObject lv_invariant_13_0 = null;

        EObject lv_methods_15_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2193:28: ( ( ( ( (lv_interface_0_0= 'interface' ) ) | ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? ) | otherlv_3= 'class' ) ( (lv_name_4_0= ruleQName ) ) (otherlv_5= 'extends' ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_7= 'implements' ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) ) (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )* )? ( (lv_description_11_0= RULE_STRING ) )? (otherlv_12= '=>' ( (lv_invariant_13_0= ruleXExpression ) ) )? otherlv_14= '{' ( (lv_methods_15_0= ruleTestedOperation ) )* otherlv_16= '}' ) )
            // InternalJexTest.g:2194:1: ( ( ( (lv_interface_0_0= 'interface' ) ) | ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? ) | otherlv_3= 'class' ) ( (lv_name_4_0= ruleQName ) ) (otherlv_5= 'extends' ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_7= 'implements' ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) ) (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )* )? ( (lv_description_11_0= RULE_STRING ) )? (otherlv_12= '=>' ( (lv_invariant_13_0= ruleXExpression ) ) )? otherlv_14= '{' ( (lv_methods_15_0= ruleTestedOperation ) )* otherlv_16= '}' )
            {
            // InternalJexTest.g:2194:1: ( ( ( (lv_interface_0_0= 'interface' ) ) | ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? ) | otherlv_3= 'class' ) ( (lv_name_4_0= ruleQName ) ) (otherlv_5= 'extends' ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_7= 'implements' ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) ) (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )* )? ( (lv_description_11_0= RULE_STRING ) )? (otherlv_12= '=>' ( (lv_invariant_13_0= ruleXExpression ) ) )? otherlv_14= '{' ( (lv_methods_15_0= ruleTestedOperation ) )* otherlv_16= '}' )
            // InternalJexTest.g:2194:2: ( ( (lv_interface_0_0= 'interface' ) ) | ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? ) | otherlv_3= 'class' ) ( (lv_name_4_0= ruleQName ) ) (otherlv_5= 'extends' ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_7= 'implements' ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) ) (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )* )? ( (lv_description_11_0= RULE_STRING ) )? (otherlv_12= '=>' ( (lv_invariant_13_0= ruleXExpression ) ) )? otherlv_14= '{' ( (lv_methods_15_0= ruleTestedOperation ) )* otherlv_16= '}'
            {
            // InternalJexTest.g:2194:2: ( ( (lv_interface_0_0= 'interface' ) ) | ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? ) | otherlv_3= 'class' )
            int alt60=3;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt60=1;
                }
                break;
            case 39:
                {
                alt60=2;
                }
                break;
            case 40:
                {
                alt60=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }

            switch (alt60) {
                case 1 :
                    // InternalJexTest.g:2194:3: ( (lv_interface_0_0= 'interface' ) )
                    {
                    // InternalJexTest.g:2194:3: ( (lv_interface_0_0= 'interface' ) )
                    // InternalJexTest.g:2195:1: (lv_interface_0_0= 'interface' )
                    {
                    // InternalJexTest.g:2195:1: (lv_interface_0_0= 'interface' )
                    // InternalJexTest.g:2196:3: lv_interface_0_0= 'interface'
                    {
                    lv_interface_0_0=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_interface_0_0, grammarAccess.getTestedClassAccess().getInterfaceInterfaceKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTestedClassRule());
                      	        }
                             		setWithLastConsumed(current, "interface", true, "interface");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:2210:6: ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? )
                    {
                    // InternalJexTest.g:2210:6: ( ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )? )
                    // InternalJexTest.g:2210:7: ( (lv_abstract_1_0= 'abstract' ) ) (otherlv_2= 'class' )?
                    {
                    // InternalJexTest.g:2210:7: ( (lv_abstract_1_0= 'abstract' ) )
                    // InternalJexTest.g:2211:1: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalJexTest.g:2211:1: (lv_abstract_1_0= 'abstract' )
                    // InternalJexTest.g:2212:3: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,39,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_abstract_1_0, grammarAccess.getTestedClassAccess().getAbstractAbstractKeyword_0_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTestedClassRule());
                      	        }
                             		setWithLastConsumed(current, "abstract", true, "abstract");
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:2225:2: (otherlv_2= 'class' )?
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==40) ) {
                        alt59=1;
                    }
                    switch (alt59) {
                        case 1 :
                            // InternalJexTest.g:2225:4: otherlv_2= 'class'
                            {
                            otherlv_2=(Token)match(input,40,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getTestedClassAccess().getClassKeyword_0_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalJexTest.g:2230:7: otherlv_3= 'class'
                    {
                    otherlv_3=(Token)match(input,40,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTestedClassAccess().getClassKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:2234:2: ( (lv_name_4_0= ruleQName ) )
            // InternalJexTest.g:2235:1: (lv_name_4_0= ruleQName )
            {
            // InternalJexTest.g:2235:1: (lv_name_4_0= ruleQName )
            // InternalJexTest.g:2236:3: lv_name_4_0= ruleQName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTestedClassAccess().getNameQNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_52);
            lv_name_4_0=ruleQName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTestedClassRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_4_0, 
                      		"no.hal.jex.jextest.JexTest.QName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:2252:2: (otherlv_5= 'extends' ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==41) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalJexTest.g:2252:4: otherlv_5= 'extends' ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) )
                    {
                    otherlv_5=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTestedClassAccess().getExtendsKeyword_2_0());
                          
                    }
                    // InternalJexTest.g:2256:1: ( (lv_superClass_6_0= ruleJvmParameterizedTypeReference ) )
                    // InternalJexTest.g:2257:1: (lv_superClass_6_0= ruleJvmParameterizedTypeReference )
                    {
                    // InternalJexTest.g:2257:1: (lv_superClass_6_0= ruleJvmParameterizedTypeReference )
                    // InternalJexTest.g:2258:3: lv_superClass_6_0= ruleJvmParameterizedTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestedClassAccess().getSuperClassJvmParameterizedTypeReferenceParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_superClass_6_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestedClassRule());
                      	        }
                             		set(
                             			current, 
                             			"superClass",
                              		lv_superClass_6_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:2274:4: (otherlv_7= 'implements' ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) ) (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )* )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==42) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalJexTest.g:2274:6: otherlv_7= 'implements' ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) ) (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )*
                    {
                    otherlv_7=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getTestedClassAccess().getImplementsKeyword_3_0());
                          
                    }
                    // InternalJexTest.g:2278:1: ( (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference ) )
                    // InternalJexTest.g:2279:1: (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference )
                    {
                    // InternalJexTest.g:2279:1: (lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference )
                    // InternalJexTest.g:2280:3: lv_superInterfaces_8_0= ruleJvmParameterizedTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestedClassAccess().getSuperInterfacesJvmParameterizedTypeReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_54);
                    lv_superInterfaces_8_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestedClassRule());
                      	        }
                             		add(
                             			current, 
                             			"superInterfaces",
                              		lv_superInterfaces_8_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:2296:2: (otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) ) )*
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==16) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // InternalJexTest.g:2296:4: otherlv_9= ',' ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) )
                    	    {
                    	    otherlv_9=(Token)match(input,16,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_9, grammarAccess.getTestedClassAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:2300:1: ( (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference ) )
                    	    // InternalJexTest.g:2301:1: (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference )
                    	    {
                    	    // InternalJexTest.g:2301:1: (lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference )
                    	    // InternalJexTest.g:2302:3: lv_superInterfaces_10_0= ruleJvmParameterizedTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTestedClassAccess().getSuperInterfacesJvmParameterizedTypeReferenceParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_54);
                    	    lv_superInterfaces_10_0=ruleJvmParameterizedTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTestedClassRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"superInterfaces",
                    	              		lv_superInterfaces_10_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalJexTest.g:2318:6: ( (lv_description_11_0= RULE_STRING ) )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_STRING) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalJexTest.g:2319:1: (lv_description_11_0= RULE_STRING )
                    {
                    // InternalJexTest.g:2319:1: (lv_description_11_0= RULE_STRING )
                    // InternalJexTest.g:2320:3: lv_description_11_0= RULE_STRING
                    {
                    lv_description_11_0=(Token)match(input,RULE_STRING,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_description_11_0, grammarAccess.getTestedClassAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTestedClassRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"description",
                              		lv_description_11_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:2336:3: (otherlv_12= '=>' ( (lv_invariant_13_0= ruleXExpression ) ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==43) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalJexTest.g:2336:5: otherlv_12= '=>' ( (lv_invariant_13_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,43,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getTestedClassAccess().getEqualsSignGreaterThanSignKeyword_5_0());
                          
                    }
                    // InternalJexTest.g:2340:1: ( (lv_invariant_13_0= ruleXExpression ) )
                    // InternalJexTest.g:2341:1: (lv_invariant_13_0= ruleXExpression )
                    {
                    // InternalJexTest.g:2341:1: (lv_invariant_13_0= ruleXExpression )
                    // InternalJexTest.g:2342:3: lv_invariant_13_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestedClassAccess().getInvariantXExpressionParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_invariant_13_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestedClassRule());
                      	        }
                             		set(
                             			current, 
                             			"invariant",
                              		lv_invariant_13_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_14=(Token)match(input,27,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_14, grammarAccess.getTestedClassAccess().getLeftCurlyBracketKeyword_6());
                  
            }
            // InternalJexTest.g:2362:1: ( (lv_methods_15_0= ruleTestedOperation ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==RULE_ID||LA66_0==39||LA66_0==45) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalJexTest.g:2363:1: (lv_methods_15_0= ruleTestedOperation )
            	    {
            	    // InternalJexTest.g:2363:1: (lv_methods_15_0= ruleTestedOperation )
            	    // InternalJexTest.g:2364:3: lv_methods_15_0= ruleTestedOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTestedClassAccess().getMethodsTestedOperationParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_methods_15_0=ruleTestedOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTestedClassRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"methods",
            	              		lv_methods_15_0, 
            	              		"no.hal.jex.jextest.JexTest.TestedOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            otherlv_16=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_16, grammarAccess.getTestedClassAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestedClass"


    // $ANTLR start "entryRuleTestedOperation"
    // InternalJexTest.g:2392:1: entryRuleTestedOperation returns [EObject current=null] : iv_ruleTestedOperation= ruleTestedOperation EOF ;
    public final EObject entryRuleTestedOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestedOperation = null;


        try {
            // InternalJexTest.g:2393:2: (iv_ruleTestedOperation= ruleTestedOperation EOF )
            // InternalJexTest.g:2394:2: iv_ruleTestedOperation= ruleTestedOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestedOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTestedOperation=ruleTestedOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestedOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestedOperation"


    // $ANTLR start "ruleTestedOperation"
    // InternalJexTest.g:2401:1: ruleTestedOperation returns [EObject current=null] : ( (this_TestedConstructor_0= ruleTestedConstructor | this_TestedMethod_1= ruleTestedMethod ) ( (lv_parameters_2_0= ruleParameterList ) ) ( (lv_description_3_0= RULE_STRING ) )? (otherlv_4= '<=' ( (lv_preExpression_5_0= ruleXExpression ) ) )? (otherlv_6= '=>' ( (lv_postExpression_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleTestedOperation() throws RecognitionException {
        EObject current = null;

        Token lv_description_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_TestedConstructor_0 = null;

        EObject this_TestedMethod_1 = null;

        EObject lv_parameters_2_0 = null;

        EObject lv_preExpression_5_0 = null;

        EObject lv_postExpression_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2404:28: ( ( (this_TestedConstructor_0= ruleTestedConstructor | this_TestedMethod_1= ruleTestedMethod ) ( (lv_parameters_2_0= ruleParameterList ) ) ( (lv_description_3_0= RULE_STRING ) )? (otherlv_4= '<=' ( (lv_preExpression_5_0= ruleXExpression ) ) )? (otherlv_6= '=>' ( (lv_postExpression_7_0= ruleXExpression ) ) )? ) )
            // InternalJexTest.g:2405:1: ( (this_TestedConstructor_0= ruleTestedConstructor | this_TestedMethod_1= ruleTestedMethod ) ( (lv_parameters_2_0= ruleParameterList ) ) ( (lv_description_3_0= RULE_STRING ) )? (otherlv_4= '<=' ( (lv_preExpression_5_0= ruleXExpression ) ) )? (otherlv_6= '=>' ( (lv_postExpression_7_0= ruleXExpression ) ) )? )
            {
            // InternalJexTest.g:2405:1: ( (this_TestedConstructor_0= ruleTestedConstructor | this_TestedMethod_1= ruleTestedMethod ) ( (lv_parameters_2_0= ruleParameterList ) ) ( (lv_description_3_0= RULE_STRING ) )? (otherlv_4= '<=' ( (lv_preExpression_5_0= ruleXExpression ) ) )? (otherlv_6= '=>' ( (lv_postExpression_7_0= ruleXExpression ) ) )? )
            // InternalJexTest.g:2405:2: (this_TestedConstructor_0= ruleTestedConstructor | this_TestedMethod_1= ruleTestedMethod ) ( (lv_parameters_2_0= ruleParameterList ) ) ( (lv_description_3_0= RULE_STRING ) )? (otherlv_4= '<=' ( (lv_preExpression_5_0= ruleXExpression ) ) )? (otherlv_6= '=>' ( (lv_postExpression_7_0= ruleXExpression ) ) )?
            {
            // InternalJexTest.g:2405:2: (this_TestedConstructor_0= ruleTestedConstructor | this_TestedMethod_1= ruleTestedMethod )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==45) ) {
                alt67=1;
            }
            else if ( (LA67_0==RULE_ID||LA67_0==39) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalJexTest.g:2406:5: this_TestedConstructor_0= ruleTestedConstructor
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTestedOperationAccess().getTestedConstructorParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_TestedConstructor_0=ruleTestedConstructor();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TestedConstructor_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:2416:5: this_TestedMethod_1= ruleTestedMethod
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTestedOperationAccess().getTestedMethodParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_TestedMethod_1=ruleTestedMethod();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TestedMethod_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:2424:2: ( (lv_parameters_2_0= ruleParameterList ) )
            // InternalJexTest.g:2425:1: (lv_parameters_2_0= ruleParameterList )
            {
            // InternalJexTest.g:2425:1: (lv_parameters_2_0= ruleParameterList )
            // InternalJexTest.g:2426:3: lv_parameters_2_0= ruleParameterList
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTestedOperationAccess().getParametersParameterListParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_57);
            lv_parameters_2_0=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTestedOperationRule());
              	        }
                     		set(
                     			current, 
                     			"parameters",
                      		lv_parameters_2_0, 
                      		"no.hal.jex.jextest.JexTest.ParameterList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:2442:2: ( (lv_description_3_0= RULE_STRING ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_STRING) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalJexTest.g:2443:1: (lv_description_3_0= RULE_STRING )
                    {
                    // InternalJexTest.g:2443:1: (lv_description_3_0= RULE_STRING )
                    // InternalJexTest.g:2444:3: lv_description_3_0= RULE_STRING
                    {
                    lv_description_3_0=(Token)match(input,RULE_STRING,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_description_3_0, grammarAccess.getTestedOperationAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTestedOperationRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"description",
                              		lv_description_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:2460:3: (otherlv_4= '<=' ( (lv_preExpression_5_0= ruleXExpression ) ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==44) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalJexTest.g:2460:5: otherlv_4= '<=' ( (lv_preExpression_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,44,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTestedOperationAccess().getLessThanSignEqualsSignKeyword_3_0());
                          
                    }
                    // InternalJexTest.g:2464:1: ( (lv_preExpression_5_0= ruleXExpression ) )
                    // InternalJexTest.g:2465:1: (lv_preExpression_5_0= ruleXExpression )
                    {
                    // InternalJexTest.g:2465:1: (lv_preExpression_5_0= ruleXExpression )
                    // InternalJexTest.g:2466:3: lv_preExpression_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestedOperationAccess().getPreExpressionXExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_59);
                    lv_preExpression_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestedOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"preExpression",
                              		lv_preExpression_5_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:2482:4: (otherlv_6= '=>' ( (lv_postExpression_7_0= ruleXExpression ) ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==43) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalJexTest.g:2482:6: otherlv_6= '=>' ( (lv_postExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,43,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getTestedOperationAccess().getEqualsSignGreaterThanSignKeyword_4_0());
                          
                    }
                    // InternalJexTest.g:2486:1: ( (lv_postExpression_7_0= ruleXExpression ) )
                    // InternalJexTest.g:2487:1: (lv_postExpression_7_0= ruleXExpression )
                    {
                    // InternalJexTest.g:2487:1: (lv_postExpression_7_0= ruleXExpression )
                    // InternalJexTest.g:2488:3: lv_postExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestedOperationAccess().getPostExpressionXExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_postExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestedOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"postExpression",
                              		lv_postExpression_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestedOperation"


    // $ANTLR start "entryRuleTestedConstructor"
    // InternalJexTest.g:2512:1: entryRuleTestedConstructor returns [EObject current=null] : iv_ruleTestedConstructor= ruleTestedConstructor EOF ;
    public final EObject entryRuleTestedConstructor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestedConstructor = null;


        try {
            // InternalJexTest.g:2513:2: (iv_ruleTestedConstructor= ruleTestedConstructor EOF )
            // InternalJexTest.g:2514:2: iv_ruleTestedConstructor= ruleTestedConstructor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestedConstructorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTestedConstructor=ruleTestedConstructor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestedConstructor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestedConstructor"


    // $ANTLR start "ruleTestedConstructor"
    // InternalJexTest.g:2521:1: ruleTestedConstructor returns [EObject current=null] : ( () otherlv_1= 'new' ) ;
    public final EObject ruleTestedConstructor() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:2524:28: ( ( () otherlv_1= 'new' ) )
            // InternalJexTest.g:2525:1: ( () otherlv_1= 'new' )
            {
            // InternalJexTest.g:2525:1: ( () otherlv_1= 'new' )
            // InternalJexTest.g:2525:2: () otherlv_1= 'new'
            {
            // InternalJexTest.g:2525:2: ()
            // InternalJexTest.g:2526:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTestedConstructorAccess().getTestedConstructorAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTestedConstructorAccess().getNewKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestedConstructor"


    // $ANTLR start "entryRuleTestedMethod"
    // InternalJexTest.g:2543:1: entryRuleTestedMethod returns [EObject current=null] : iv_ruleTestedMethod= ruleTestedMethod EOF ;
    public final EObject entryRuleTestedMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestedMethod = null;


        try {
            // InternalJexTest.g:2544:2: (iv_ruleTestedMethod= ruleTestedMethod EOF )
            // InternalJexTest.g:2545:2: iv_ruleTestedMethod= ruleTestedMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestedMethodRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTestedMethod=ruleTestedMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestedMethod; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestedMethod"


    // $ANTLR start "ruleTestedMethod"
    // InternalJexTest.g:2552:1: ruleTestedMethod returns [EObject current=null] : ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_returnType_1_0= ruleJvmParameterizedTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) ) ;
    public final EObject ruleTestedMethod() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_2_0=null;
        EObject lv_returnType_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2555:28: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_returnType_1_0= ruleJvmParameterizedTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) ) )
            // InternalJexTest.g:2556:1: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_returnType_1_0= ruleJvmParameterizedTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) )
            {
            // InternalJexTest.g:2556:1: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_returnType_1_0= ruleJvmParameterizedTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) )
            // InternalJexTest.g:2556:2: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_returnType_1_0= ruleJvmParameterizedTypeReference ) ) ( (lv_name_2_0= RULE_ID ) )
            {
            // InternalJexTest.g:2556:2: ( (lv_abstract_0_0= 'abstract' ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==39) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalJexTest.g:2557:1: (lv_abstract_0_0= 'abstract' )
                    {
                    // InternalJexTest.g:2557:1: (lv_abstract_0_0= 'abstract' )
                    // InternalJexTest.g:2558:3: lv_abstract_0_0= 'abstract'
                    {
                    lv_abstract_0_0=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_abstract_0_0, grammarAccess.getTestedMethodAccess().getAbstractAbstractKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTestedMethodRule());
                      	        }
                             		setWithLastConsumed(current, "abstract", true, "abstract");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:2571:3: ( (lv_returnType_1_0= ruleJvmParameterizedTypeReference ) )
            // InternalJexTest.g:2572:1: (lv_returnType_1_0= ruleJvmParameterizedTypeReference )
            {
            // InternalJexTest.g:2572:1: (lv_returnType_1_0= ruleJvmParameterizedTypeReference )
            // InternalJexTest.g:2573:3: lv_returnType_1_0= ruleJvmParameterizedTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTestedMethodAccess().getReturnTypeJvmParameterizedTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_3);
            lv_returnType_1_0=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTestedMethodRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:2589:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalJexTest.g:2590:1: (lv_name_2_0= RULE_ID )
            {
            // InternalJexTest.g:2590:1: (lv_name_2_0= RULE_ID )
            // InternalJexTest.g:2591:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getTestedMethodAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTestedMethodRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestedMethod"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalJexTest.g:2615:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalJexTest.g:2616:2: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalJexTest.g:2617:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalJexTest.g:2624:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '++' ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:2627:28: (kw= '++' )
            // InternalJexTest.g:2629:2: kw= '++'
            {
            kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleOpEquality"
    // InternalJexTest.g:2642:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalJexTest.g:2643:2: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalJexTest.g:2644:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalJexTest.g:2651:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' | kw= '?=' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:2654:28: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' | kw= '?=' ) )
            // InternalJexTest.g:2655:1: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' | kw= '?=' )
            {
            // InternalJexTest.g:2655:1: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' | kw= '?=' )
            int alt72=5;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt72=1;
                }
                break;
            case 48:
                {
                alt72=2;
                }
                break;
            case 49:
                {
                alt72=3;
                }
                break;
            case 50:
                {
                alt72=4;
                }
                break;
            case 51:
                {
                alt72=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalJexTest.g:2656:2: kw= '=='
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:2663:2: kw= '!='
                    {
                    kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:2670:2: kw= '==='
                    {
                    kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalJexTest.g:2677:2: kw= '!=='
                    {
                    kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalJexTest.g:2684:2: kw= '?='
                    {
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getQuestionMarkEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXExpression"
    // InternalJexTest.g:2697:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalJexTest.g:2698:2: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalJexTest.g:2699:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalJexTest.g:2706:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2709:28: (this_XAssignment_0= ruleXAssignment )
            // InternalJexTest.g:2711:5: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAssignment_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalJexTest.g:2727:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalJexTest.g:2728:2: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalJexTest.g:2729:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalJexTest.g:2736:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2739:28: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalJexTest.g:2740:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalJexTest.g:2740:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt74=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA74_1 = input.LA(2);

                if ( (LA74_1==EOF||(LA74_1>=RULE_STRING && LA74_1<=RULE_DECIMAL)||(LA74_1>=14 && LA74_1<=17)||(LA74_1>=21 && LA74_1<=25)||(LA74_1>=27 && LA74_1<=35)||LA74_1==39||LA74_1==41||LA74_1==43||(LA74_1>=45 && LA74_1<=79)||(LA74_1>=81 && LA74_1<=104)) ) {
                    alt74=2;
                }
                else if ( (LA74_1==20) ) {
                    alt74=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 1, input);

                    throw nvae;
                }
                }
                break;
            case 41:
                {
                int LA74_2 = input.LA(2);

                if ( (LA74_2==20) ) {
                    alt74=1;
                }
                else if ( (LA74_2==EOF||(LA74_2>=RULE_STRING && LA74_2<=RULE_DECIMAL)||(LA74_2>=14 && LA74_2<=17)||(LA74_2>=21 && LA74_2<=25)||(LA74_2>=27 && LA74_2<=35)||LA74_2==39||LA74_2==41||LA74_2==43||(LA74_2>=45 && LA74_2<=79)||(LA74_2>=81 && LA74_2<=104)) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 2, input);

                    throw nvae;
                }
                }
                break;
            case 91:
                {
                int LA74_3 = input.LA(2);

                if ( (LA74_3==20) ) {
                    alt74=1;
                }
                else if ( (LA74_3==EOF||(LA74_3>=RULE_STRING && LA74_3<=RULE_DECIMAL)||(LA74_3>=14 && LA74_3<=17)||(LA74_3>=21 && LA74_3<=25)||(LA74_3>=27 && LA74_3<=35)||LA74_3==39||LA74_3==41||LA74_3==43||(LA74_3>=45 && LA74_3<=79)||(LA74_3>=81 && LA74_3<=104)) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 3, input);

                    throw nvae;
                }
                }
                break;
            case 92:
                {
                int LA74_4 = input.LA(2);

                if ( (LA74_4==20) ) {
                    alt74=1;
                }
                else if ( (LA74_4==EOF||(LA74_4>=RULE_STRING && LA74_4<=RULE_DECIMAL)||(LA74_4>=14 && LA74_4<=17)||(LA74_4>=21 && LA74_4<=25)||(LA74_4>=27 && LA74_4<=35)||LA74_4==39||LA74_4==41||LA74_4==43||(LA74_4>=45 && LA74_4<=79)||(LA74_4>=81 && LA74_4<=104)) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 4, input);

                    throw nvae;
                }
                }
                break;
            case 93:
                {
                int LA74_5 = input.LA(2);

                if ( (LA74_5==20) ) {
                    alt74=1;
                }
                else if ( (LA74_5==EOF||(LA74_5>=RULE_STRING && LA74_5<=RULE_DECIMAL)||(LA74_5>=14 && LA74_5<=17)||(LA74_5>=21 && LA74_5<=25)||(LA74_5>=27 && LA74_5<=35)||LA74_5==39||LA74_5==41||LA74_5==43||(LA74_5>=45 && LA74_5<=79)||(LA74_5>=81 && LA74_5<=104)) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
            case 23:
            case 27:
            case 30:
            case 45:
            case 57:
            case 68:
            case 69:
            case 74:
            case 78:
            case 81:
            case 83:
            case 87:
            case 88:
            case 89:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 103:
                {
                alt74=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // InternalJexTest.g:2740:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalJexTest.g:2740:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalJexTest.g:2740:3: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalJexTest.g:2740:3: ()
                    // InternalJexTest.g:2741:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalJexTest.g:2746:2: ( ( ruleFeatureCallID ) )
                    // InternalJexTest.g:2747:1: ( ruleFeatureCallID )
                    {
                    // InternalJexTest.g:2747:1: ( ruleFeatureCallID )
                    // InternalJexTest.g:2748:3: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_19);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalJexTest.g:2769:1: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalJexTest.g:2770:1: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalJexTest.g:2770:1: (lv_value_3_0= ruleXAssignment )
                    // InternalJexTest.g:2771:3: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:2788:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalJexTest.g:2788:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalJexTest.g:2789:5: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_61);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XOrExpression_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalJexTest.g:2797:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt73=2;
                    alt73 = dfa73.predict(input);
                    switch (alt73) {
                        case 1 :
                            // InternalJexTest.g:2797:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalJexTest.g:2797:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalJexTest.g:2797:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalJexTest.g:2802:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalJexTest.g:2802:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalJexTest.g:2802:7: ()
                            // InternalJexTest.g:2803:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                                          current);
                                  
                            }

                            }

                            // InternalJexTest.g:2808:2: ( ( ruleOpMultiAssign ) )
                            // InternalJexTest.g:2809:1: ( ruleOpMultiAssign )
                            {
                            // InternalJexTest.g:2809:1: ( ruleOpMultiAssign )
                            // InternalJexTest.g:2810:3: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getXAssignmentRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_19);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }

                            // InternalJexTest.g:2823:4: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalJexTest.g:2824:1: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalJexTest.g:2824:1: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalJexTest.g:2825:3: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rightOperand",
                                      		lv_rightOperand_7_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalJexTest.g:2849:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalJexTest.g:2850:2: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalJexTest.g:2851:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalJexTest.g:2858:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:2861:28: (kw= '=' )
            // InternalJexTest.g:2863:2: kw= '='
            {
            kw=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalJexTest.g:2876:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalJexTest.g:2877:2: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalJexTest.g:2878:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalJexTest.g:2885:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:2888:28: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalJexTest.g:2889:1: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalJexTest.g:2889:1: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt76=7;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt76=1;
                }
                break;
            case 53:
                {
                alt76=2;
                }
                break;
            case 54:
                {
                alt76=3;
                }
                break;
            case 55:
                {
                alt76=4;
                }
                break;
            case 56:
                {
                alt76=5;
                }
                break;
            case 57:
                {
                alt76=6;
                }
                break;
            case 58:
                {
                alt76=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalJexTest.g:2890:2: kw= '+='
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:2897:2: kw= '-='
                    {
                    kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:2904:2: kw= '*='
                    {
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalJexTest.g:2911:2: kw= '/='
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalJexTest.g:2918:2: kw= '%='
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalJexTest.g:2924:6: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalJexTest.g:2924:6: (kw= '<' kw= '<' kw= '=' )
                    // InternalJexTest.g:2925:2: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,57,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); 
                          
                    }
                    kw=(Token)match(input,57,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); 
                          
                    }
                    kw=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalJexTest.g:2943:6: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalJexTest.g:2943:6: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalJexTest.g:2944:2: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,58,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
                          
                    }
                    // InternalJexTest.g:2949:1: (kw= '>' )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==58) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalJexTest.g:2950:2: kw= '>'
                            {
                            kw=(Token)match(input,58,FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalJexTest.g:2969:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalJexTest.g:2970:2: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalJexTest.g:2971:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalJexTest.g:2978:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:2981:28: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalJexTest.g:2982:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalJexTest.g:2982:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalJexTest.g:2983:5: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_65);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:2991:1: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==60) ) {
                    int LA77_2 = input.LA(2);

                    if ( (synpred2_InternalJexTest()) ) {
                        alt77=1;
                    }


                }


                switch (alt77) {
            	case 1 :
            	    // InternalJexTest.g:2991:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalJexTest.g:2991:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalJexTest.g:2991:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalJexTest.g:2996:6: ( () ( ( ruleOpOr ) ) )
            	    // InternalJexTest.g:2996:7: () ( ( ruleOpOr ) )
            	    {
            	    // InternalJexTest.g:2996:7: ()
            	    // InternalJexTest.g:2997:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:3002:2: ( ( ruleOpOr ) )
            	    // InternalJexTest.g:3003:1: ( ruleOpOr )
            	    {
            	    // InternalJexTest.g:3003:1: ( ruleOpOr )
            	    // InternalJexTest.g:3004:3: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalJexTest.g:3017:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalJexTest.g:3018:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalJexTest.g:3018:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalJexTest.g:3019:3: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalJexTest.g:3043:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalJexTest.g:3044:2: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalJexTest.g:3045:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalJexTest.g:3052:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:3055:28: (kw= '||' )
            // InternalJexTest.g:3057:2: kw= '||'
            {
            kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalJexTest.g:3070:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalJexTest.g:3071:2: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalJexTest.g:3072:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalJexTest.g:3079:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3082:28: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalJexTest.g:3083:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalJexTest.g:3083:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalJexTest.g:3084:5: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XEqualityExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:3092:1: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==61) ) {
                    int LA78_2 = input.LA(2);

                    if ( (synpred3_InternalJexTest()) ) {
                        alt78=1;
                    }


                }


                switch (alt78) {
            	case 1 :
            	    // InternalJexTest.g:3092:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalJexTest.g:3092:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalJexTest.g:3092:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalJexTest.g:3097:6: ( () ( ( ruleOpAnd ) ) )
            	    // InternalJexTest.g:3097:7: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalJexTest.g:3097:7: ()
            	    // InternalJexTest.g:3098:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:3103:2: ( ( ruleOpAnd ) )
            	    // InternalJexTest.g:3104:1: ( ruleOpAnd )
            	    {
            	    // InternalJexTest.g:3104:1: ( ruleOpAnd )
            	    // InternalJexTest.g:3105:3: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalJexTest.g:3118:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalJexTest.g:3119:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalJexTest.g:3119:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalJexTest.g:3120:3: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalJexTest.g:3144:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalJexTest.g:3145:2: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalJexTest.g:3146:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalJexTest.g:3153:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:3156:28: (kw= '&&' )
            // InternalJexTest.g:3158:2: kw= '&&'
            {
            kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalJexTest.g:3171:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalJexTest.g:3172:2: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalJexTest.g:3173:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalJexTest.g:3180:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3183:28: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalJexTest.g:3184:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalJexTest.g:3184:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalJexTest.g:3185:5: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_67);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XRelationalExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:3193:1: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop79:
            do {
                int alt79=2;
                switch ( input.LA(1) ) {
                case 47:
                    {
                    int LA79_2 = input.LA(2);

                    if ( (synpred4_InternalJexTest()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case 48:
                    {
                    int LA79_3 = input.LA(2);

                    if ( (synpred4_InternalJexTest()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case 49:
                    {
                    int LA79_4 = input.LA(2);

                    if ( (synpred4_InternalJexTest()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case 50:
                    {
                    int LA79_5 = input.LA(2);

                    if ( (synpred4_InternalJexTest()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case 51:
                    {
                    int LA79_6 = input.LA(2);

                    if ( (synpred4_InternalJexTest()) ) {
                        alt79=1;
                    }


                    }
                    break;

                }

                switch (alt79) {
            	case 1 :
            	    // InternalJexTest.g:3193:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalJexTest.g:3193:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalJexTest.g:3193:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalJexTest.g:3198:6: ( () ( ( ruleOpEquality ) ) )
            	    // InternalJexTest.g:3198:7: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalJexTest.g:3198:7: ()
            	    // InternalJexTest.g:3199:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:3204:2: ( ( ruleOpEquality ) )
            	    // InternalJexTest.g:3205:1: ( ruleOpEquality )
            	    {
            	    // InternalJexTest.g:3205:1: ( ruleOpEquality )
            	    // InternalJexTest.g:3206:3: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalJexTest.g:3219:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalJexTest.g:3220:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalJexTest.g:3220:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalJexTest.g:3221:3: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalJexTest.g:3245:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalJexTest.g:3246:2: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalJexTest.g:3247:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalJexTest.g:3254:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3257:28: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalJexTest.g:3258:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalJexTest.g:3258:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalJexTest.g:3259:5: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_68);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XOtherOperatorExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:3267:1: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop80:
            do {
                int alt80=3;
                switch ( input.LA(1) ) {
                case 57:
                    {
                    int LA80_2 = input.LA(2);

                    if ( (synpred6_InternalJexTest()) ) {
                        alt80=2;
                    }


                    }
                    break;
                case 58:
                    {
                    int LA80_3 = input.LA(2);

                    if ( (synpred6_InternalJexTest()) ) {
                        alt80=2;
                    }


                    }
                    break;
                case 62:
                    {
                    int LA80_4 = input.LA(2);

                    if ( (synpred5_InternalJexTest()) ) {
                        alt80=1;
                    }


                    }
                    break;
                case 59:
                    {
                    int LA80_5 = input.LA(2);

                    if ( (synpred6_InternalJexTest()) ) {
                        alt80=2;
                    }


                    }
                    break;

                }

                switch (alt80) {
            	case 1 :
            	    // InternalJexTest.g:3267:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalJexTest.g:3267:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalJexTest.g:3267:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalJexTest.g:3267:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalJexTest.g:3267:4: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalJexTest.g:3269:5: ( () otherlv_2= 'instanceof' )
            	    // InternalJexTest.g:3269:6: () otherlv_2= 'instanceof'
            	    {
            	    // InternalJexTest.g:3269:6: ()
            	    // InternalJexTest.g:3270:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,62,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:3279:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalJexTest.g:3280:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalJexTest.g:3280:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalJexTest.g:3281:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalJexTest.g:3298:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalJexTest.g:3298:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalJexTest.g:3298:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalJexTest.g:3298:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalJexTest.g:3298:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalJexTest.g:3303:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalJexTest.g:3303:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalJexTest.g:3303:7: ()
            	    // InternalJexTest.g:3304:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:3309:2: ( ( ruleOpCompare ) )
            	    // InternalJexTest.g:3310:1: ( ruleOpCompare )
            	    {
            	    // InternalJexTest.g:3310:1: ( ruleOpCompare )
            	    // InternalJexTest.g:3311:3: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalJexTest.g:3324:4: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalJexTest.g:3325:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalJexTest.g:3325:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalJexTest.g:3326:3: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_6_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalJexTest.g:3350:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalJexTest.g:3351:2: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalJexTest.g:3352:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalJexTest.g:3359:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:3362:28: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalJexTest.g:3363:1: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalJexTest.g:3363:1: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt81=4;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt81=1;
                }
                break;
            case 57:
                {
                int LA81_2 = input.LA(2);

                if ( (LA81_2==EOF||(LA81_2>=RULE_STRING && LA81_2<=RULE_DECIMAL)||LA81_2==23||LA81_2==27||LA81_2==30||LA81_2==41||LA81_2==45||LA81_2==57||(LA81_2>=68 && LA81_2<=69)||LA81_2==74||LA81_2==78||LA81_2==81||LA81_2==83||(LA81_2>=87 && LA81_2<=89)||(LA81_2>=91 && LA81_2<=101)||LA81_2==103) ) {
                    alt81=4;
                }
                else if ( (LA81_2==20) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 2, input);

                    throw nvae;
                }
                }
                break;
            case 58:
                {
                alt81=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }

            switch (alt81) {
                case 1 :
                    // InternalJexTest.g:3364:2: kw= '>='
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:3370:6: (kw= '<' kw= '=' )
                    {
                    // InternalJexTest.g:3370:6: (kw= '<' kw= '=' )
                    // InternalJexTest.g:3371:2: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,57,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); 
                          
                    }
                    kw=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalJexTest.g:3384:2: kw= '>'
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalJexTest.g:3391:2: kw= '<'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalJexTest.g:3404:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalJexTest.g:3405:2: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalJexTest.g:3406:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalJexTest.g:3413:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3416:28: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalJexTest.g:3417:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalJexTest.g:3417:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalJexTest.g:3418:5: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_69);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAdditiveExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:3426:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop82:
            do {
                int alt82=2;
                alt82 = dfa82.predict(input);
                switch (alt82) {
            	case 1 :
            	    // InternalJexTest.g:3426:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalJexTest.g:3426:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalJexTest.g:3426:3: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalJexTest.g:3431:6: ( () ( ( ruleOpOther ) ) )
            	    // InternalJexTest.g:3431:7: () ( ( ruleOpOther ) )
            	    {
            	    // InternalJexTest.g:3431:7: ()
            	    // InternalJexTest.g:3432:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:3437:2: ( ( ruleOpOther ) )
            	    // InternalJexTest.g:3438:1: ( ruleOpOther )
            	    {
            	    // InternalJexTest.g:3438:1: ( ruleOpOther )
            	    // InternalJexTest.g:3439:3: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalJexTest.g:3452:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalJexTest.g:3453:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalJexTest.g:3453:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalJexTest.g:3454:3: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalJexTest.g:3478:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalJexTest.g:3479:2: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalJexTest.g:3480:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalJexTest.g:3487:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:3490:28: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalJexTest.g:3491:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalJexTest.g:3491:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt85=9;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalJexTest.g:3492:2: kw= '->'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:3499:2: kw= '..<'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:3505:6: (kw= '>' kw= '..' )
                    {
                    // InternalJexTest.g:3505:6: (kw= '>' kw= '..' )
                    // InternalJexTest.g:3506:2: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,58,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
                          
                    }
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalJexTest.g:3519:2: kw= '..'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalJexTest.g:3526:2: kw= '=>'
                    {
                    kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalJexTest.g:3532:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalJexTest.g:3532:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalJexTest.g:3533:2: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,58,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
                          
                    }
                    // InternalJexTest.g:3538:1: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==58) ) {
                        int LA83_1 = input.LA(2);

                        if ( (LA83_1==EOF||(LA83_1>=RULE_STRING && LA83_1<=RULE_DECIMAL)||LA83_1==23||LA83_1==27||LA83_1==30||LA83_1==41||LA83_1==45||LA83_1==57||(LA83_1>=68 && LA83_1<=69)||LA83_1==74||LA83_1==78||LA83_1==81||LA83_1==83||(LA83_1>=87 && LA83_1<=89)||(LA83_1>=91 && LA83_1<=101)||LA83_1==103) ) {
                            alt83=2;
                        }
                        else if ( (LA83_1==58) && (synpred8_InternalJexTest())) {
                            alt83=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 83, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalJexTest.g:3538:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalJexTest.g:3538:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalJexTest.g:3538:3: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalJexTest.g:3542:5: (kw= '>' kw= '>' )
                            // InternalJexTest.g:3543:2: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,58,FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalJexTest.g:3556:2: kw= '>'
                            {
                            kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalJexTest.g:3562:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalJexTest.g:3562:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalJexTest.g:3563:2: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,57,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
                          
                    }
                    // InternalJexTest.g:3568:1: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt84=3;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==57) ) {
                        int LA84_1 = input.LA(2);

                        if ( (synpred9_InternalJexTest()) ) {
                            alt84=1;
                        }
                        else if ( (true) ) {
                            alt84=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 84, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA84_0==43) ) {
                        alt84=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 84, 0, input);

                        throw nvae;
                    }
                    switch (alt84) {
                        case 1 :
                            // InternalJexTest.g:3568:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalJexTest.g:3568:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalJexTest.g:3568:3: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalJexTest.g:3572:5: (kw= '<' kw= '<' )
                            // InternalJexTest.g:3573:2: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,57,FOLLOW_62); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalJexTest.g:3586:2: kw= '<'
                            {
                            kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // InternalJexTest.g:3593:2: kw= '=>'
                            {
                            kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalJexTest.g:3600:2: kw= '<>'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalJexTest.g:3607:2: kw= '?:'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalJexTest.g:3620:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalJexTest.g:3621:2: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalJexTest.g:3622:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalJexTest.g:3629:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3632:28: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalJexTest.g:3633:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalJexTest.g:3633:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalJexTest.g:3634:5: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_73);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMultiplicativeExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:3642:1: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==69) ) {
                    int LA86_2 = input.LA(2);

                    if ( (synpred10_InternalJexTest()) ) {
                        alt86=1;
                    }


                }
                else if ( (LA86_0==68) ) {
                    int LA86_3 = input.LA(2);

                    if ( (synpred10_InternalJexTest()) ) {
                        alt86=1;
                    }


                }


                switch (alt86) {
            	case 1 :
            	    // InternalJexTest.g:3642:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalJexTest.g:3642:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalJexTest.g:3642:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalJexTest.g:3647:6: ( () ( ( ruleOpAdd ) ) )
            	    // InternalJexTest.g:3647:7: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalJexTest.g:3647:7: ()
            	    // InternalJexTest.g:3648:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:3653:2: ( ( ruleOpAdd ) )
            	    // InternalJexTest.g:3654:1: ( ruleOpAdd )
            	    {
            	    // InternalJexTest.g:3654:1: ( ruleOpAdd )
            	    // InternalJexTest.g:3655:3: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalJexTest.g:3668:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalJexTest.g:3669:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalJexTest.g:3669:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalJexTest.g:3670:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalJexTest.g:3694:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalJexTest.g:3695:2: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalJexTest.g:3696:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalJexTest.g:3703:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:3706:28: ( (kw= '+' | kw= '-' ) )
            // InternalJexTest.g:3707:1: (kw= '+' | kw= '-' )
            {
            // InternalJexTest.g:3707:1: (kw= '+' | kw= '-' )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==68) ) {
                alt87=1;
            }
            else if ( (LA87_0==69) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalJexTest.g:3708:2: kw= '+'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:3715:2: kw= '-'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalJexTest.g:3728:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalJexTest.g:3729:2: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalJexTest.g:3730:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalJexTest.g:3737:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3740:28: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalJexTest.g:3741:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalJexTest.g:3741:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalJexTest.g:3742:5: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_74);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XUnaryOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:3750:1: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop88:
            do {
                int alt88=2;
                switch ( input.LA(1) ) {
                case 70:
                    {
                    int LA88_2 = input.LA(2);

                    if ( (synpred11_InternalJexTest()) ) {
                        alt88=1;
                    }


                    }
                    break;
                case 71:
                    {
                    int LA88_3 = input.LA(2);

                    if ( (synpred11_InternalJexTest()) ) {
                        alt88=1;
                    }


                    }
                    break;
                case 72:
                    {
                    int LA88_4 = input.LA(2);

                    if ( (synpred11_InternalJexTest()) ) {
                        alt88=1;
                    }


                    }
                    break;
                case 73:
                    {
                    int LA88_5 = input.LA(2);

                    if ( (synpred11_InternalJexTest()) ) {
                        alt88=1;
                    }


                    }
                    break;

                }

                switch (alt88) {
            	case 1 :
            	    // InternalJexTest.g:3750:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalJexTest.g:3750:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalJexTest.g:3750:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalJexTest.g:3755:6: ( () ( ( ruleOpMulti ) ) )
            	    // InternalJexTest.g:3755:7: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalJexTest.g:3755:7: ()
            	    // InternalJexTest.g:3756:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:3761:2: ( ( ruleOpMulti ) )
            	    // InternalJexTest.g:3762:1: ( ruleOpMulti )
            	    {
            	    // InternalJexTest.g:3762:1: ( ruleOpMulti )
            	    // InternalJexTest.g:3763:3: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalJexTest.g:3776:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalJexTest.g:3777:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalJexTest.g:3777:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalJexTest.g:3778:3: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalJexTest.g:3802:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalJexTest.g:3803:2: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalJexTest.g:3804:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalJexTest.g:3811:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:3814:28: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalJexTest.g:3815:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalJexTest.g:3815:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt89=4;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt89=1;
                }
                break;
            case 71:
                {
                alt89=2;
                }
                break;
            case 72:
                {
                alt89=3;
                }
                break;
            case 73:
                {
                alt89=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }

            switch (alt89) {
                case 1 :
                    // InternalJexTest.g:3816:2: kw= '*'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:3823:2: kw= '**'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:3830:2: kw= '/'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalJexTest.g:3837:2: kw= '%'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalJexTest.g:3850:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalJexTest.g:3851:2: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalJexTest.g:3852:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalJexTest.g:3859:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3862:28: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalJexTest.g:3863:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalJexTest.g:3863:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( ((LA90_0>=68 && LA90_0<=69)||LA90_0==74) ) {
                alt90=1;
            }
            else if ( ((LA90_0>=RULE_STRING && LA90_0<=RULE_DECIMAL)||LA90_0==23||LA90_0==27||LA90_0==30||LA90_0==41||LA90_0==45||LA90_0==57||LA90_0==78||LA90_0==81||LA90_0==83||(LA90_0>=87 && LA90_0<=89)||(LA90_0>=91 && LA90_0<=101)||LA90_0==103) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalJexTest.g:3863:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalJexTest.g:3863:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalJexTest.g:3863:3: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalJexTest.g:3863:3: ()
                    // InternalJexTest.g:3864:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalJexTest.g:3869:2: ( ( ruleOpUnary ) )
                    // InternalJexTest.g:3870:1: ( ruleOpUnary )
                    {
                    // InternalJexTest.g:3870:1: ( ruleOpUnary )
                    // InternalJexTest.g:3871:3: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_19);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:3884:2: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalJexTest.g:3885:1: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalJexTest.g:3885:1: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalJexTest.g:3886:3: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:3904:5: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCastedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalJexTest.g:3920:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalJexTest.g:3921:2: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalJexTest.g:3922:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalJexTest.g:3929:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:3932:28: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalJexTest.g:3933:1: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalJexTest.g:3933:1: (kw= '!' | kw= '-' | kw= '+' )
            int alt91=3;
            switch ( input.LA(1) ) {
            case 74:
                {
                alt91=1;
                }
                break;
            case 69:
                {
                alt91=2;
                }
                break;
            case 68:
                {
                alt91=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // InternalJexTest.g:3934:2: kw= '!'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:3941:2: kw= '-'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:3948:2: kw= '+'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalJexTest.g:3961:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalJexTest.g:3962:2: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalJexTest.g:3963:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalJexTest.g:3970:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:3973:28: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalJexTest.g:3974:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalJexTest.g:3974:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalJexTest.g:3975:5: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_75);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XPostfixOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:3983:1: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==75) ) {
                    int LA92_2 = input.LA(2);

                    if ( (synpred12_InternalJexTest()) ) {
                        alt92=1;
                    }


                }


                switch (alt92) {
            	case 1 :
            	    // InternalJexTest.g:3983:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalJexTest.g:3983:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalJexTest.g:3983:3: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalJexTest.g:3985:5: ( () otherlv_2= 'as' )
            	    // InternalJexTest.g:3985:6: () otherlv_2= 'as'
            	    {
            	    // InternalJexTest.g:3985:6: ()
            	    // InternalJexTest.g:3986:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,75,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:3995:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalJexTest.g:3996:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalJexTest.g:3996:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalJexTest.g:3997:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_75);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalJexTest.g:4021:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalJexTest.g:4022:2: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalJexTest.g:4023:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalJexTest.g:4030:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4033:28: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalJexTest.g:4034:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalJexTest.g:4034:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalJexTest.g:4035:5: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_76);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMemberFeatureCall_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:4043:1: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==46) ) {
                int LA93_1 = input.LA(2);

                if ( (synpred13_InternalJexTest()) ) {
                    alt93=1;
                }
            }
            switch (alt93) {
                case 1 :
                    // InternalJexTest.g:4043:2: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalJexTest.g:4048:6: ( () ( ( ruleOpPostfix ) ) )
                    // InternalJexTest.g:4048:7: () ( ( ruleOpPostfix ) )
                    {
                    // InternalJexTest.g:4048:7: ()
                    // InternalJexTest.g:4049:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalJexTest.g:4054:2: ( ( ruleOpPostfix ) )
                    // InternalJexTest.g:4055:1: ( ruleOpPostfix )
                    {
                    // InternalJexTest.g:4055:1: ( ruleOpPostfix )
                    // InternalJexTest.g:4056:3: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalJexTest.g:4077:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalJexTest.g:4078:2: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalJexTest.g:4079:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalJexTest.g:4086:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4089:28: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalJexTest.g:4090:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalJexTest.g:4090:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalJexTest.g:4091:5: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_77);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XPrimaryExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:4099:1: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop102:
            do {
                int alt102=3;
                switch ( input.LA(1) ) {
                case 29:
                    {
                    int LA102_2 = input.LA(2);

                    if ( (synpred14_InternalJexTest()) ) {
                        alt102=1;
                    }
                    else if ( (synpred15_InternalJexTest()) ) {
                        alt102=2;
                    }


                    }
                    break;
                case 76:
                    {
                    int LA102_3 = input.LA(2);

                    if ( (synpred14_InternalJexTest()) ) {
                        alt102=1;
                    }
                    else if ( (synpred15_InternalJexTest()) ) {
                        alt102=2;
                    }


                    }
                    break;
                case 77:
                    {
                    int LA102_4 = input.LA(2);

                    if ( (synpred15_InternalJexTest()) ) {
                        alt102=2;
                    }


                    }
                    break;

                }

                switch (alt102) {
            	case 1 :
            	    // InternalJexTest.g:4099:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalJexTest.g:4099:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalJexTest.g:4099:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalJexTest.g:4099:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalJexTest.g:4099:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalJexTest.g:4112:25: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalJexTest.g:4112:26: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalJexTest.g:4112:26: ()
            	    // InternalJexTest.g:4113:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:4118:2: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt94=2;
            	    int LA94_0 = input.LA(1);

            	    if ( (LA94_0==29) ) {
            	        alt94=1;
            	    }
            	    else if ( (LA94_0==76) ) {
            	        alt94=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 94, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt94) {
            	        case 1 :
            	            // InternalJexTest.g:4118:4: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,29,FOLLOW_78); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalJexTest.g:4123:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalJexTest.g:4123:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalJexTest.g:4124:1: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalJexTest.g:4124:1: (lv_explicitStatic_3_0= '::' )
            	            // InternalJexTest.g:4125:3: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,76,FOLLOW_78); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalJexTest.g:4138:3: ( ( ruleFeatureCallID ) )
            	    // InternalJexTest.g:4139:1: ( ruleFeatureCallID )
            	    {
            	    // InternalJexTest.g:4139:1: ( ruleFeatureCallID )
            	    // InternalJexTest.g:4140:3: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_60);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
            	          
            	    }
            	    pushFollow(FOLLOW_19);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:4161:3: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalJexTest.g:4162:1: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalJexTest.g:4162:1: (lv_value_6_0= ruleXAssignment )
            	    // InternalJexTest.g:4163:3: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"value",
            	              		lv_value_6_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalJexTest.g:4180:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalJexTest.g:4180:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalJexTest.g:4180:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalJexTest.g:4180:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalJexTest.g:4180:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalJexTest.g:4196:7: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalJexTest.g:4196:8: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalJexTest.g:4196:8: ()
            	    // InternalJexTest.g:4197:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalJexTest.g:4202:2: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt95=3;
            	    switch ( input.LA(1) ) {
            	    case 29:
            	        {
            	        alt95=1;
            	        }
            	        break;
            	    case 77:
            	        {
            	        alt95=2;
            	        }
            	        break;
            	    case 76:
            	        {
            	        alt95=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 95, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt95) {
            	        case 1 :
            	            // InternalJexTest.g:4202:4: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,29,FOLLOW_79); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalJexTest.g:4207:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalJexTest.g:4207:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalJexTest.g:4208:1: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalJexTest.g:4208:1: (lv_nullSafe_9_0= '?.' )
            	            // InternalJexTest.g:4209:3: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,77,FOLLOW_79); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "nullSafe", true, "?.");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalJexTest.g:4223:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalJexTest.g:4223:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalJexTest.g:4224:1: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalJexTest.g:4224:1: (lv_explicitStatic_10_0= '::' )
            	            // InternalJexTest.g:4225:3: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,76,FOLLOW_79); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalJexTest.g:4238:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt97=2;
            	    int LA97_0 = input.LA(1);

            	    if ( (LA97_0==57) ) {
            	        alt97=1;
            	    }
            	    switch (alt97) {
            	        case 1 :
            	            // InternalJexTest.g:4238:7: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,57,FOLLOW_80); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	                  
            	            }
            	            // InternalJexTest.g:4242:1: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalJexTest.g:4243:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalJexTest.g:4243:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalJexTest.g:4244:3: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_81);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"typeArguments",
            	                      		lv_typeArguments_12_0, 
            	                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }

            	            // InternalJexTest.g:4260:2: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop96:
            	            do {
            	                int alt96=2;
            	                int LA96_0 = input.LA(1);

            	                if ( (LA96_0==16) ) {
            	                    alt96=1;
            	                }


            	                switch (alt96) {
            	            	case 1 :
            	            	    // InternalJexTest.g:4260:4: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,16,FOLLOW_80); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	          	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	          
            	            	    }
            	            	    // InternalJexTest.g:4264:1: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalJexTest.g:4265:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalJexTest.g:4265:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalJexTest.g:4266:3: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {
            	            	       
            	            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_81);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      	        }
            	            	             		add(
            	            	             			current, 
            	            	             			"typeArguments",
            	            	              		lv_typeArguments_14_0, 
            	            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      	        afterParserOrEnumRuleCall();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop96;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,58,FOLLOW_79); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalJexTest.g:4286:3: ( ( ruleIdOrSuper ) )
            	    // InternalJexTest.g:4287:1: ( ruleIdOrSuper )
            	    {
            	    // InternalJexTest.g:4287:1: ( ruleIdOrSuper )
            	    // InternalJexTest.g:4288:3: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_82);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:4301:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt100=2;
            	    alt100 = dfa100.predict(input);
            	    switch (alt100) {
            	        case 1 :
            	            // InternalJexTest.g:4301:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalJexTest.g:4301:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalJexTest.g:4301:4: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalJexTest.g:4308:1: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalJexTest.g:4309:3: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,23,FOLLOW_83); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              	    
            	            }

            	            }


            	            }

            	            // InternalJexTest.g:4322:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt99=3;
            	            alt99 = dfa99.predict(input);
            	            switch (alt99) {
            	                case 1 :
            	                    // InternalJexTest.g:4322:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalJexTest.g:4322:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalJexTest.g:4322:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalJexTest.g:4339:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalJexTest.g:4340:3: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_84);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_18_0, 
            	                              		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalJexTest.g:4357:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalJexTest.g:4357:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalJexTest.g:4357:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalJexTest.g:4357:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalJexTest.g:4358:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalJexTest.g:4358:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalJexTest.g:4359:3: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_24);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_19_0, 
            	                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }

            	                    // InternalJexTest.g:4375:2: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop98:
            	                    do {
            	                        int alt98=2;
            	                        int LA98_0 = input.LA(1);

            	                        if ( (LA98_0==16) ) {
            	                            alt98=1;
            	                        }


            	                        switch (alt98) {
            	                    	case 1 :
            	                    	    // InternalJexTest.g:4375:4: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,16,FOLLOW_19); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	          	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	          
            	                    	    }
            	                    	    // InternalJexTest.g:4379:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalJexTest.g:4380:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalJexTest.g:4380:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalJexTest.g:4381:3: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {
            	                    	       
            	                    	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FOLLOW_24);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      	        }
            	                    	             		add(
            	                    	             			current, 
            	                    	             			"memberCallArguments",
            	                    	              		lv_memberCallArguments_21_0, 
            	                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      	        afterParserOrEnumRuleCall();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop98;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,24,FOLLOW_85); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalJexTest.g:4401:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt101=2;
            	    alt101 = dfa101.predict(input);
            	    switch (alt101) {
            	        case 1 :
            	            // InternalJexTest.g:4401:4: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalJexTest.g:4404:1: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalJexTest.g:4405:3: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_77);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"memberCallArguments",
            	                      		lv_memberCallArguments_23_0, 
            	                      		"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalJexTest.g:4429:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalJexTest.g:4430:2: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalJexTest.g:4431:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalJexTest.g:4438:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4441:28: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalJexTest.g:4442:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalJexTest.g:4442:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt103=15;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalJexTest.g:4443:5: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XConstructorCall_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:4453:5: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBlockExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:4463:5: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSwitchExpression_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalJexTest.g:4472:6: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalJexTest.g:4472:6: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalJexTest.g:4472:7: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSynchronizedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalJexTest.g:4486:5: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFeatureCall_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalJexTest.g:4496:5: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XLiteral_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalJexTest.g:4506:5: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XIfExpression_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalJexTest.g:4515:6: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalJexTest.g:4515:6: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalJexTest.g:4515:7: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XForLoopExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalJexTest.g:4534:5: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBasicForLoopExpression_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalJexTest.g:4544:5: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XWhileExpression_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalJexTest.g:4554:5: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XDoWhileExpression_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalJexTest.g:4564:5: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XThrowExpression_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalJexTest.g:4574:5: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XReturnExpression_12; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    // InternalJexTest.g:4584:5: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTryCatchFinallyExpression_13; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    // InternalJexTest.g:4594:5: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XParenthesizedExpression_14; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalJexTest.g:4610:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalJexTest.g:4611:2: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalJexTest.g:4612:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalJexTest.g:4619:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4622:28: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalJexTest.g:4623:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalJexTest.g:4623:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt104=7;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==30) ) {
                alt104=1;
            }
            else if ( (LA104_0==78) && (synpred21_InternalJexTest())) {
                alt104=2;
            }
            else if ( ((LA104_0>=95 && LA104_0<=96)) ) {
                alt104=3;
            }
            else if ( ((LA104_0>=RULE_HEX && LA104_0<=RULE_DECIMAL)) ) {
                alt104=4;
            }
            else if ( (LA104_0==97) ) {
                alt104=5;
            }
            else if ( (LA104_0==RULE_STRING) ) {
                alt104=6;
            }
            else if ( (LA104_0==98) ) {
                alt104=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // InternalJexTest.g:4624:5: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCollectionLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:4633:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalJexTest.g:4633:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalJexTest.g:4633:7: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XClosure_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalJexTest.g:4646:5: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBooleanLiteral_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalJexTest.g:4656:5: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNumberLiteral_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalJexTest.g:4666:5: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNullLiteral_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalJexTest.g:4676:5: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XStringLiteral_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalJexTest.g:4686:5: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTypeLiteral_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalJexTest.g:4702:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalJexTest.g:4703:2: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalJexTest.g:4704:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalJexTest.g:4711:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4714:28: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalJexTest.g:4715:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalJexTest.g:4715:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==30) ) {
                int LA105_1 = input.LA(2);

                if ( (LA105_1==78) ) {
                    alt105=2;
                }
                else if ( (LA105_1==27) ) {
                    alt105=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 105, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalJexTest.g:4716:5: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSetLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:4726:5: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XListLiteral_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalJexTest.g:4742:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalJexTest.g:4743:2: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalJexTest.g:4744:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalJexTest.g:4751:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4754:28: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalJexTest.g:4755:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalJexTest.g:4755:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalJexTest.g:4755:2: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalJexTest.g:4755:2: ()
            // InternalJexTest.g:4756:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,30,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,27,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalJexTest.g:4769:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( ((LA107_0>=RULE_STRING && LA107_0<=RULE_DECIMAL)||LA107_0==23||LA107_0==27||LA107_0==30||LA107_0==41||LA107_0==45||LA107_0==57||(LA107_0>=68 && LA107_0<=69)||LA107_0==74||LA107_0==78||LA107_0==81||LA107_0==83||(LA107_0>=87 && LA107_0<=89)||(LA107_0>=91 && LA107_0<=101)||LA107_0==103) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalJexTest.g:4769:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalJexTest.g:4769:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalJexTest.g:4770:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalJexTest.g:4770:1: (lv_elements_3_0= ruleXExpression )
                    // InternalJexTest.g:4771:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_86);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:4787:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop106:
                    do {
                        int alt106=2;
                        int LA106_0 = input.LA(1);

                        if ( (LA106_0==16) ) {
                            alt106=1;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // InternalJexTest.g:4787:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,16,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:4791:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalJexTest.g:4792:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalJexTest.g:4792:1: (lv_elements_5_0= ruleXExpression )
                    	    // InternalJexTest.g:4793:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_86);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop106;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalJexTest.g:4821:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalJexTest.g:4822:2: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalJexTest.g:4823:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalJexTest.g:4830:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4833:28: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalJexTest.g:4834:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalJexTest.g:4834:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalJexTest.g:4834:2: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalJexTest.g:4834:2: ()
            // InternalJexTest.g:4835:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,30,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,78,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalJexTest.g:4848:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( ((LA109_0>=RULE_STRING && LA109_0<=RULE_DECIMAL)||LA109_0==23||LA109_0==27||LA109_0==30||LA109_0==41||LA109_0==45||LA109_0==57||(LA109_0>=68 && LA109_0<=69)||LA109_0==74||LA109_0==78||LA109_0==81||LA109_0==83||(LA109_0>=87 && LA109_0<=89)||(LA109_0>=91 && LA109_0<=101)||LA109_0==103) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalJexTest.g:4848:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalJexTest.g:4848:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalJexTest.g:4849:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalJexTest.g:4849:1: (lv_elements_3_0= ruleXExpression )
                    // InternalJexTest.g:4850:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_89);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:4866:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==16) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // InternalJexTest.g:4866:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,16,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:4870:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalJexTest.g:4871:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalJexTest.g:4871:1: (lv_elements_5_0= ruleXExpression )
                    	    // InternalJexTest.g:4872:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_89);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalJexTest.g:4900:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalJexTest.g:4901:2: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalJexTest.g:4902:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalJexTest.g:4909:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:4912:28: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalJexTest.g:4913:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalJexTest.g:4913:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalJexTest.g:4913:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalJexTest.g:4913:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalJexTest.g:4913:3: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalJexTest.g:4915:5: ( () otherlv_1= '[' )
            // InternalJexTest.g:4915:6: () otherlv_1= '['
            {
            // InternalJexTest.g:4915:6: ()
            // InternalJexTest.g:4916:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
                  
            }

            }


            }

            // InternalJexTest.g:4925:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt112=2;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // InternalJexTest.g:4925:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalJexTest.g:4940:6: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalJexTest.g:4940:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalJexTest.g:4940:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==RULE_ID||LA111_0==23||LA111_0==43) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalJexTest.g:4940:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalJexTest.g:4940:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalJexTest.g:4941:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalJexTest.g:4941:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalJexTest.g:4942:3: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_91);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"declaredFormalParameters",
                                      		lv_declaredFormalParameters_2_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalJexTest.g:4958:2: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop110:
                            do {
                                int alt110=2;
                                int LA110_0 = input.LA(1);

                                if ( (LA110_0==16) ) {
                                    alt110=1;
                                }


                                switch (alt110) {
                            	case 1 :
                            	    // InternalJexTest.g:4958:4: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	          
                            	    }
                            	    // InternalJexTest.g:4962:1: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalJexTest.g:4963:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalJexTest.g:4963:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalJexTest.g:4964:3: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_91);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredFormalParameters",
                            	              		lv_declaredFormalParameters_4_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop110;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalJexTest.g:4980:6: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalJexTest.g:4981:1: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalJexTest.g:4981:1: (lv_explicitSyntax_5_0= '|' )
                    // InternalJexTest.g:4982:3: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,80,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXClosureRule());
                      	        }
                             		setWithLastConsumed(current, "explicitSyntax", true, "|");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:4995:5: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalJexTest.g:4996:1: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalJexTest.g:4996:1: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalJexTest.g:4997:3: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_93);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalJexTest.g:5025:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalJexTest.g:5026:2: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalJexTest.g:5027:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalJexTest.g:5034:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5037:28: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalJexTest.g:5038:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalJexTest.g:5038:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalJexTest.g:5038:2: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalJexTest.g:5038:2: ()
            // InternalJexTest.g:5039:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:5044:2: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( ((LA114_0>=RULE_STRING && LA114_0<=RULE_DECIMAL)||LA114_0==15||LA114_0==23||LA114_0==27||LA114_0==30||LA114_0==41||LA114_0==45||LA114_0==57||(LA114_0>=68 && LA114_0<=69)||LA114_0==74||LA114_0==78||LA114_0==81||LA114_0==83||(LA114_0>=87 && LA114_0<=101)||LA114_0==103) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalJexTest.g:5044:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalJexTest.g:5044:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalJexTest.g:5045:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalJexTest.g:5045:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalJexTest.g:5046:3: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_1_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:5062:2: (otherlv_2= ';' )?
            	    int alt113=2;
            	    int LA113_0 = input.LA(1);

            	    if ( (LA113_0==31) ) {
            	        alt113=1;
            	    }
            	    switch (alt113) {
            	        case 1 :
            	            // InternalJexTest.g:5062:4: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,31,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalJexTest.g:5074:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalJexTest.g:5075:2: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalJexTest.g:5076:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalJexTest.g:5083:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5086:28: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:5087:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:5087:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalJexTest.g:5087:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalJexTest.g:5087:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalJexTest.g:5087:3: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalJexTest.g:5103:6: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalJexTest.g:5103:7: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalJexTest.g:5103:7: ()
            // InternalJexTest.g:5104:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:5109:2: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==RULE_ID||LA116_0==23||LA116_0==43) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalJexTest.g:5109:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalJexTest.g:5109:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalJexTest.g:5110:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalJexTest.g:5110:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalJexTest.g:5111:3: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      	        }
                             		add(
                             			current, 
                             			"declaredFormalParameters",
                              		lv_declaredFormalParameters_1_0, 
                              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:5127:2: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop115:
                    do {
                        int alt115=2;
                        int LA115_0 = input.LA(1);

                        if ( (LA115_0==16) ) {
                            alt115=1;
                        }


                        switch (alt115) {
                    	case 1 :
                    	    // InternalJexTest.g:5127:4: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:5131:1: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalJexTest.g:5132:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalJexTest.g:5132:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalJexTest.g:5133:3: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredFormalParameters",
                    	              		lv_declaredFormalParameters_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop115;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalJexTest.g:5149:6: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalJexTest.g:5150:1: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalJexTest.g:5150:1: (lv_explicitSyntax_4_0= '|' )
            // InternalJexTest.g:5151:3: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,80,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXShortClosureRule());
              	        }
                     		setWithLastConsumed(current, "explicitSyntax", true, "|");
              	    
            }

            }


            }


            }


            }

            // InternalJexTest.g:5164:4: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalJexTest.g:5165:1: (lv_expression_5_0= ruleXExpression )
            {
            // InternalJexTest.g:5165:1: (lv_expression_5_0= ruleXExpression )
            // InternalJexTest.g:5166:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalJexTest.g:5190:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalJexTest.g:5191:2: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalJexTest.g:5192:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalJexTest.g:5199:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5202:28: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalJexTest.g:5203:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalJexTest.g:5203:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalJexTest.g:5203:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,23,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_84);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XExpression_1; 
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalJexTest.g:5228:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalJexTest.g:5229:2: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalJexTest.g:5230:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalJexTest.g:5237:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5240:28: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalJexTest.g:5241:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalJexTest.g:5241:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalJexTest.g:5241:2: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalJexTest.g:5241:2: ()
            // InternalJexTest.g:5242:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,81,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,23,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalJexTest.g:5255:1: ( (lv_if_3_0= ruleXExpression ) )
            // InternalJexTest.g:5256:1: (lv_if_3_0= ruleXExpression )
            {
            // InternalJexTest.g:5256:1: (lv_if_3_0= ruleXExpression )
            // InternalJexTest.g:5257:3: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // InternalJexTest.g:5277:1: ( (lv_then_5_0= ruleXExpression ) )
            // InternalJexTest.g:5278:1: (lv_then_5_0= ruleXExpression )
            {
            // InternalJexTest.g:5278:1: (lv_then_5_0= ruleXExpression )
            // InternalJexTest.g:5279:3: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_96);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:5295:2: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==82) ) {
                int LA117_1 = input.LA(2);

                if ( (synpred25_InternalJexTest()) ) {
                    alt117=1;
                }
            }
            switch (alt117) {
                case 1 :
                    // InternalJexTest.g:5295:3: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalJexTest.g:5295:3: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalJexTest.g:5295:4: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,82,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                          
                    }

                    }

                    // InternalJexTest.g:5300:2: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalJexTest.g:5301:1: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5301:1: (lv_else_7_0= ruleXExpression )
                    // InternalJexTest.g:5302:3: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalJexTest.g:5326:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalJexTest.g:5327:2: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalJexTest.g:5328:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalJexTest.g:5335:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5338:28: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalJexTest.g:5339:1: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalJexTest.g:5339:1: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalJexTest.g:5339:2: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalJexTest.g:5339:2: ()
            // InternalJexTest.g:5340:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
                  
            }
            // InternalJexTest.g:5349:1: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt119=2;
            alt119 = dfa119.predict(input);
            switch (alt119) {
                case 1 :
                    // InternalJexTest.g:5349:2: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalJexTest.g:5349:2: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalJexTest.g:5349:3: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalJexTest.g:5349:3: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalJexTest.g:5349:4: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalJexTest.g:5355:5: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalJexTest.g:5355:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                          
                    }
                    // InternalJexTest.g:5359:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalJexTest.g:5360:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalJexTest.g:5360:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalJexTest.g:5361:3: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_98);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredParam",
                              		lv_declaredParam_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,84,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                          
                    }

                    }


                    }

                    // InternalJexTest.g:5381:3: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalJexTest.g:5382:1: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5382:1: (lv_switch_5_0= ruleXExpression )
                    // InternalJexTest.g:5383:3: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_84);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_5_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,24,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:5404:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalJexTest.g:5404:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalJexTest.g:5404:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalJexTest.g:5404:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt118=2;
                    alt118 = dfa118.predict(input);
                    switch (alt118) {
                        case 1 :
                            // InternalJexTest.g:5404:8: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalJexTest.g:5409:5: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalJexTest.g:5409:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalJexTest.g:5409:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalJexTest.g:5410:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalJexTest.g:5410:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalJexTest.g:5411:3: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_98);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredParam",
                                      		lv_declaredParam_7_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,84,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // InternalJexTest.g:5431:4: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalJexTest.g:5432:1: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5432:1: (lv_switch_9_0= ruleXExpression )
                    // InternalJexTest.g:5433:3: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_9_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,27,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalJexTest.g:5453:1: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==RULE_ID||LA120_0==16||LA120_0==23||LA120_0==43||LA120_0==84||LA120_0==86) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalJexTest.g:5454:1: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalJexTest.g:5454:1: (lv_cases_11_0= ruleXCasePart )
            	    // InternalJexTest.g:5455:3: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_11_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            // InternalJexTest.g:5471:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==85) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalJexTest.g:5471:5: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,85,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                          
                    }
                    otherlv_13=(Token)match(input,84,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                          
                    }
                    // InternalJexTest.g:5479:1: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalJexTest.g:5480:1: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5480:1: (lv_default_14_0= ruleXExpression )
                    // InternalJexTest.g:5481:3: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_100);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"default",
                              		lv_default_14_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalJexTest.g:5509:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalJexTest.g:5510:2: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalJexTest.g:5511:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalJexTest.g:5518:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5521:28: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalJexTest.g:5522:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalJexTest.g:5522:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalJexTest.g:5522:2: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalJexTest.g:5522:2: ()
            // InternalJexTest.g:5523:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:5528:2: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==RULE_ID||LA122_0==23||LA122_0==43) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalJexTest.g:5529:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalJexTest.g:5529:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalJexTest.g:5530:3: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_101);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"typeGuard",
                              		lv_typeGuard_1_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:5546:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==86) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalJexTest.g:5546:5: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,86,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                          
                    }
                    // InternalJexTest.g:5550:1: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalJexTest.g:5551:1: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5551:1: (lv_case_3_0= ruleXExpression )
                    // InternalJexTest.g:5552:3: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_102);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"case",
                              		lv_case_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:5568:4: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==84) ) {
                alt124=1;
            }
            else if ( (LA124_0==16) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // InternalJexTest.g:5568:5: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalJexTest.g:5568:5: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalJexTest.g:5568:7: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,84,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                          
                    }
                    // InternalJexTest.g:5572:1: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalJexTest.g:5573:1: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5573:1: (lv_then_5_0= ruleXExpression )
                    // InternalJexTest.g:5574:3: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"then",
                              		lv_then_5_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:5591:6: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalJexTest.g:5591:6: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalJexTest.g:5592:1: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalJexTest.g:5592:1: (lv_fallThrough_6_0= ',' )
                    // InternalJexTest.g:5593:3: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXCasePartRule());
                      	        }
                             		setWithLastConsumed(current, "fallThrough", true, ",");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalJexTest.g:5614:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalJexTest.g:5615:2: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalJexTest.g:5616:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalJexTest.g:5623:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5626:28: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:5627:1: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:5627:1: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalJexTest.g:5627:2: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalJexTest.g:5627:2: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalJexTest.g:5627:3: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalJexTest.g:5635:5: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalJexTest.g:5635:6: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalJexTest.g:5635:6: ()
            // InternalJexTest.g:5636:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,87,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }
            // InternalJexTest.g:5649:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalJexTest.g:5650:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalJexTest.g:5650:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalJexTest.g:5651:3: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_98);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,84,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
                  
            }

            }


            }

            // InternalJexTest.g:5671:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalJexTest.g:5672:1: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalJexTest.g:5672:1: (lv_forExpression_5_0= ruleXExpression )
            // InternalJexTest.g:5673:3: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"forExpression",
                      		lv_forExpression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // InternalJexTest.g:5693:1: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalJexTest.g:5694:1: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalJexTest.g:5694:1: (lv_eachExpression_7_0= ruleXExpression )
            // InternalJexTest.g:5695:3: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_7_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalJexTest.g:5719:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalJexTest.g:5720:2: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalJexTest.g:5721:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalJexTest.g:5728:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5731:28: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:5732:1: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:5732:1: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalJexTest.g:5732:2: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalJexTest.g:5732:2: ()
            // InternalJexTest.g:5733:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,87,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,23,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalJexTest.g:5746:1: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( ((LA126_0>=RULE_STRING && LA126_0<=RULE_DECIMAL)||LA126_0==15||LA126_0==23||LA126_0==27||LA126_0==30||LA126_0==41||LA126_0==45||LA126_0==57||(LA126_0>=68 && LA126_0<=69)||LA126_0==74||LA126_0==78||LA126_0==81||LA126_0==83||(LA126_0>=87 && LA126_0<=101)||LA126_0==103) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalJexTest.g:5746:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalJexTest.g:5746:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalJexTest.g:5747:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalJexTest.g:5747:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalJexTest.g:5748:3: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"initExpressions",
                              		lv_initExpressions_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:5764:2: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==16) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // InternalJexTest.g:5764:4: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,16,FOLLOW_105); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:5768:1: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalJexTest.g:5769:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalJexTest.g:5769:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalJexTest.g:5770:3: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_104);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"initExpressions",
                    	              		lv_initExpressions_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,31,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
                  
            }
            // InternalJexTest.g:5790:1: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( ((LA127_0>=RULE_STRING && LA127_0<=RULE_DECIMAL)||LA127_0==23||LA127_0==27||LA127_0==30||LA127_0==41||LA127_0==45||LA127_0==57||(LA127_0>=68 && LA127_0<=69)||LA127_0==74||LA127_0==78||LA127_0==81||LA127_0==83||(LA127_0>=87 && LA127_0<=89)||(LA127_0>=91 && LA127_0<=101)||LA127_0==103) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalJexTest.g:5791:1: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5791:1: (lv_expression_7_0= ruleXExpression )
                    // InternalJexTest.g:5792:3: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_107);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,31,FOLLOW_108); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
                  
            }
            // InternalJexTest.g:5812:1: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( ((LA129_0>=RULE_STRING && LA129_0<=RULE_DECIMAL)||LA129_0==23||LA129_0==27||LA129_0==30||LA129_0==41||LA129_0==45||LA129_0==57||(LA129_0>=68 && LA129_0<=69)||LA129_0==74||LA129_0==78||LA129_0==81||LA129_0==83||(LA129_0>=87 && LA129_0<=89)||(LA129_0>=91 && LA129_0<=101)||LA129_0==103) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalJexTest.g:5812:2: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalJexTest.g:5812:2: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalJexTest.g:5813:1: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalJexTest.g:5813:1: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalJexTest.g:5814:3: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_24);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"updateExpressions",
                              		lv_updateExpressions_9_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:5830:2: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==16) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // InternalJexTest.g:5830:4: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,16,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:5834:1: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalJexTest.g:5835:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalJexTest.g:5835:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalJexTest.g:5836:3: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"updateExpressions",
                    	              		lv_updateExpressions_11_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
                  
            }
            // InternalJexTest.g:5856:1: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalJexTest.g:5857:1: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalJexTest.g:5857:1: (lv_eachExpression_13_0= ruleXExpression )
            // InternalJexTest.g:5858:3: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_13_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalJexTest.g:5882:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalJexTest.g:5883:2: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalJexTest.g:5884:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalJexTest.g:5891:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5894:28: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:5895:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:5895:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalJexTest.g:5895:2: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalJexTest.g:5895:2: ()
            // InternalJexTest.g:5896:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,88,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,23,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalJexTest.g:5909:1: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalJexTest.g:5910:1: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalJexTest.g:5910:1: (lv_predicate_3_0= ruleXExpression )
            // InternalJexTest.g:5911:3: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // InternalJexTest.g:5931:1: ( (lv_body_5_0= ruleXExpression ) )
            // InternalJexTest.g:5932:1: (lv_body_5_0= ruleXExpression )
            {
            // InternalJexTest.g:5932:1: (lv_body_5_0= ruleXExpression )
            // InternalJexTest.g:5933:3: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalJexTest.g:5957:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalJexTest.g:5958:2: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalJexTest.g:5959:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalJexTest.g:5966:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:5969:28: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalJexTest.g:5970:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalJexTest.g:5970:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalJexTest.g:5970:2: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalJexTest.g:5970:2: ()
            // InternalJexTest.g:5971:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,89,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
                  
            }
            // InternalJexTest.g:5980:1: ( (lv_body_2_0= ruleXExpression ) )
            // InternalJexTest.g:5981:1: (lv_body_2_0= ruleXExpression )
            {
            // InternalJexTest.g:5981:1: (lv_body_2_0= ruleXExpression )
            // InternalJexTest.g:5982:3: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_109);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,88,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,23,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
                  
            }
            // InternalJexTest.g:6006:1: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalJexTest.g:6007:1: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalJexTest.g:6007:1: (lv_predicate_5_0= ruleXExpression )
            // InternalJexTest.g:6008:3: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalJexTest.g:6036:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalJexTest.g:6037:2: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalJexTest.g:6038:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalJexTest.g:6045:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6048:28: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalJexTest.g:6049:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalJexTest.g:6049:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalJexTest.g:6049:2: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalJexTest.g:6049:2: ()
            // InternalJexTest.g:6050:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,27,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalJexTest.g:6059:1: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( ((LA131_0>=RULE_STRING && LA131_0<=RULE_DECIMAL)||LA131_0==15||LA131_0==23||LA131_0==27||LA131_0==30||LA131_0==41||LA131_0==45||LA131_0==57||(LA131_0>=68 && LA131_0<=69)||LA131_0==74||LA131_0==78||LA131_0==81||LA131_0==83||(LA131_0>=87 && LA131_0<=101)||LA131_0==103) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalJexTest.g:6059:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalJexTest.g:6059:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalJexTest.g:6060:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalJexTest.g:6060:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalJexTest.g:6061:3: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_2_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalJexTest.g:6077:2: (otherlv_3= ';' )?
            	    int alt130=2;
            	    int LA130_0 = input.LA(1);

            	    if ( (LA130_0==31) ) {
            	        alt130=1;
            	    }
            	    switch (alt130) {
            	        case 1 :
            	            // InternalJexTest.g:6077:4: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,31,FOLLOW_110); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            otherlv_4=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalJexTest.g:6093:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalJexTest.g:6094:2: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalJexTest.g:6095:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalJexTest.g:6102:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6105:28: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalJexTest.g:6106:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalJexTest.g:6106:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==15||LA132_0==90) ) {
                alt132=1;
            }
            else if ( ((LA132_0>=RULE_STRING && LA132_0<=RULE_DECIMAL)||LA132_0==23||LA132_0==27||LA132_0==30||LA132_0==41||LA132_0==45||LA132_0==57||(LA132_0>=68 && LA132_0<=69)||LA132_0==74||LA132_0==78||LA132_0==81||LA132_0==83||(LA132_0>=87 && LA132_0<=89)||(LA132_0>=91 && LA132_0<=101)||LA132_0==103) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalJexTest.g:6107:5: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XVariableDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:6117:5: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalJexTest.g:6133:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalJexTest.g:6134:2: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalJexTest.g:6135:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalJexTest.g:6142:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6145:28: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalJexTest.g:6146:1: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalJexTest.g:6146:1: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalJexTest.g:6146:2: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalJexTest.g:6146:2: ()
            // InternalJexTest.g:6147:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:6152:2: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==90) ) {
                alt133=1;
            }
            else if ( (LA133_0==15) ) {
                alt133=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }
            switch (alt133) {
                case 1 :
                    // InternalJexTest.g:6152:3: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // InternalJexTest.g:6152:3: ( (lv_writeable_1_0= 'var' ) )
                    // InternalJexTest.g:6153:1: (lv_writeable_1_0= 'var' )
                    {
                    // InternalJexTest.g:6153:1: (lv_writeable_1_0= 'var' )
                    // InternalJexTest.g:6154:3: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,90,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "writeable", true, "var");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:6168:7: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:6172:2: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==RULE_ID) ) {
                int LA134_1 = input.LA(2);

                if ( (synpred29_InternalJexTest()) ) {
                    alt134=1;
                }
                else if ( (true) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA134_0==23) && (synpred29_InternalJexTest())) {
                alt134=1;
            }
            else if ( (LA134_0==43) && (synpred29_InternalJexTest())) {
                alt134=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // InternalJexTest.g:6172:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalJexTest.g:6172:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalJexTest.g:6172:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalJexTest.g:6180:6: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalJexTest.g:6180:7: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalJexTest.g:6180:7: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalJexTest.g:6181:1: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalJexTest.g:6181:1: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalJexTest.g:6182:3: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:6198:2: ( (lv_name_4_0= ruleValidID ) )
                    // InternalJexTest.g:6199:1: (lv_name_4_0= ruleValidID )
                    {
                    // InternalJexTest.g:6199:1: (lv_name_4_0= ruleValidID )
                    // InternalJexTest.g:6200:3: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_18);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:6217:6: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalJexTest.g:6217:6: ( (lv_name_5_0= ruleValidID ) )
                    // InternalJexTest.g:6218:1: (lv_name_5_0= ruleValidID )
                    {
                    // InternalJexTest.g:6218:1: (lv_name_5_0= ruleValidID )
                    // InternalJexTest.g:6219:3: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_18);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_5_0, 
                              		"org.eclipse.xtext.xbase.Xtype.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:6235:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==20) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalJexTest.g:6235:5: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,20,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // InternalJexTest.g:6239:1: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalJexTest.g:6240:1: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalJexTest.g:6240:1: (lv_right_7_0= ruleXExpression )
                    // InternalJexTest.g:6241:3: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"right",
                              		lv_right_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalJexTest.g:6265:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalJexTest.g:6266:2: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalJexTest.g:6267:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalJexTest.g:6274:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6277:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalJexTest.g:6278:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalJexTest.g:6278:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalJexTest.g:6278:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalJexTest.g:6278:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==RULE_ID) ) {
                int LA136_1 = input.LA(2);

                if ( (LA136_1==RULE_ID||LA136_1==29||LA136_1==57||LA136_1==78) ) {
                    alt136=1;
                }
            }
            else if ( (LA136_0==23||LA136_0==43) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalJexTest.g:6279:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalJexTest.g:6279:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalJexTest.g:6280:3: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_3);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"parameterType",
                              		lv_parameterType_0_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalJexTest.g:6296:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalJexTest.g:6297:1: (lv_name_1_0= ruleValidID )
            {
            // InternalJexTest.g:6297:1: (lv_name_1_0= ruleValidID )
            // InternalJexTest.g:6298:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalJexTest.g:6322:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalJexTest.g:6323:2: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalJexTest.g:6324:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalJexTest.g:6331:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6334:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalJexTest.g:6335:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalJexTest.g:6335:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalJexTest.g:6335:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalJexTest.g:6335:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalJexTest.g:6336:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalJexTest.g:6336:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalJexTest.g:6337:3: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_3);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_0_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:6353:2: ( (lv_name_1_0= ruleValidID ) )
            // InternalJexTest.g:6354:1: (lv_name_1_0= ruleValidID )
            {
            // InternalJexTest.g:6354:1: (lv_name_1_0= ruleValidID )
            // InternalJexTest.g:6355:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalJexTest.g:6379:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalJexTest.g:6380:2: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalJexTest.g:6381:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalJexTest.g:6388:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6391:28: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalJexTest.g:6392:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalJexTest.g:6392:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalJexTest.g:6392:2: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalJexTest.g:6392:2: ()
            // InternalJexTest.g:6393:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:6398:2: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==57) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalJexTest.g:6398:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,57,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalJexTest.g:6402:1: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalJexTest.g:6403:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalJexTest.g:6403:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalJexTest.g:6404:3: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_81);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:6420:2: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop137:
                    do {
                        int alt137=2;
                        int LA137_0 = input.LA(1);

                        if ( (LA137_0==16) ) {
                            alt137=1;
                        }


                        switch (alt137) {
                    	case 1 :
                    	    // InternalJexTest.g:6420:4: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,16,FOLLOW_80); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:6424:1: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalJexTest.g:6425:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalJexTest.g:6425:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalJexTest.g:6426:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_4_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop137;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,58,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:6446:3: ( ( ruleIdOrSuper ) )
            // InternalJexTest.g:6447:1: ( ruleIdOrSuper )
            {
            // InternalJexTest.g:6447:1: ( ruleIdOrSuper )
            // InternalJexTest.g:6448:3: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXFeatureCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_112);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:6461:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    // InternalJexTest.g:6461:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalJexTest.g:6461:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalJexTest.g:6461:4: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalJexTest.g:6468:1: (lv_explicitOperationCall_7_0= '(' )
                    // InternalJexTest.g:6469:3: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,23,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXFeatureCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:6482:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt140=3;
                    alt140 = dfa140.predict(input);
                    switch (alt140) {
                        case 1 :
                            // InternalJexTest.g:6482:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalJexTest.g:6482:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalJexTest.g:6482:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalJexTest.g:6499:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalJexTest.g:6500:3: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_84);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_8_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalJexTest.g:6517:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalJexTest.g:6517:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalJexTest.g:6517:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalJexTest.g:6517:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalJexTest.g:6518:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalJexTest.g:6518:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalJexTest.g:6519:3: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_24);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_9_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalJexTest.g:6535:2: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop139:
                            do {
                                int alt139=2;
                                int LA139_0 = input.LA(1);

                                if ( (LA139_0==16) ) {
                                    alt139=1;
                                }


                                switch (alt139) {
                            	case 1 :
                            	    // InternalJexTest.g:6535:4: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,16,FOLLOW_19); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	          
                            	    }
                            	    // InternalJexTest.g:6539:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalJexTest.g:6540:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalJexTest.g:6540:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalJexTest.g:6541:3: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"featureCallArguments",
                            	              		lv_featureCallArguments_11_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop139;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,24,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:6561:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt142=2;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    // InternalJexTest.g:6561:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalJexTest.g:6564:1: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalJexTest.g:6565:3: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"featureCallArguments",
                              		lv_featureCallArguments_13_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalJexTest.g:6589:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalJexTest.g:6590:2: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalJexTest.g:6591:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalJexTest.g:6598:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6601:28: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalJexTest.g:6602:1: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalJexTest.g:6602:1: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt143=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt143=1;
                }
                break;
            case 41:
                {
                alt143=2;
                }
                break;
            case 91:
                {
                alt143=3;
                }
                break;
            case 92:
                {
                alt143=4;
                }
                break;
            case 93:
                {
                alt143=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }

            switch (alt143) {
                case 1 :
                    // InternalJexTest.g:6603:5: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ValidID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:6615:2: kw= 'extends'
                    {
                    kw=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalJexTest.g:6622:2: kw= 'static'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalJexTest.g:6629:2: kw= 'import'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalJexTest.g:6636:2: kw= 'extension'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalJexTest.g:6649:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalJexTest.g:6650:2: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalJexTest.g:6651:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalJexTest.g:6658:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6661:28: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalJexTest.g:6662:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalJexTest.g:6662:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_ID||LA144_0==41||(LA144_0>=91 && LA144_0<=93)) ) {
                alt144=1;
            }
            else if ( (LA144_0==94) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalJexTest.g:6663:5: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_FeatureCallID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:6675:2: kw= 'super'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalJexTest.g:6688:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalJexTest.g:6689:2: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalJexTest.g:6690:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalJexTest.g:6697:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6700:28: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalJexTest.g:6701:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalJexTest.g:6701:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalJexTest.g:6701:2: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalJexTest.g:6701:2: ()
            // InternalJexTest.g:6702:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
                  
            }
            // InternalJexTest.g:6711:1: ( ( ruleQualifiedName ) )
            // InternalJexTest.g:6712:1: ( ruleQualifiedName )
            {
            // InternalJexTest.g:6712:1: ( ruleQualifiedName )
            // InternalJexTest.g:6713:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXConstructorCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_114);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:6726:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt146=2;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // InternalJexTest.g:6726:3: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalJexTest.g:6726:3: ( ( '<' )=>otherlv_3= '<' )
                    // InternalJexTest.g:6726:4: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,57,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                          
                    }

                    }

                    // InternalJexTest.g:6731:2: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalJexTest.g:6732:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalJexTest.g:6732:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalJexTest.g:6733:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_81);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:6749:2: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==16) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalJexTest.g:6749:4: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,16,FOLLOW_80); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:6753:1: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalJexTest.g:6754:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalJexTest.g:6754:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalJexTest.g:6755:3: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_6_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,58,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:6775:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalJexTest.g:6775:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalJexTest.g:6775:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalJexTest.g:6775:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalJexTest.g:6782:1: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalJexTest.g:6783:3: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,23,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXConstructorCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:6796:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt148=3;
                    alt148 = dfa148.predict(input);
                    switch (alt148) {
                        case 1 :
                            // InternalJexTest.g:6796:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalJexTest.g:6796:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalJexTest.g:6796:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalJexTest.g:6813:1: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalJexTest.g:6814:3: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_84);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_9_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalJexTest.g:6831:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalJexTest.g:6831:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalJexTest.g:6831:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalJexTest.g:6831:7: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalJexTest.g:6832:1: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalJexTest.g:6832:1: (lv_arguments_10_0= ruleXExpression )
                            // InternalJexTest.g:6833:3: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_24);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_10_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalJexTest.g:6849:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop147:
                            do {
                                int alt147=2;
                                int LA147_0 = input.LA(1);

                                if ( (LA147_0==16) ) {
                                    alt147=1;
                                }


                                switch (alt147) {
                            	case 1 :
                            	    // InternalJexTest.g:6849:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,16,FOLLOW_19); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	          
                            	    }
                            	    // InternalJexTest.g:6853:1: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalJexTest.g:6854:1: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalJexTest.g:6854:1: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalJexTest.g:6855:3: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"arguments",
                            	              		lv_arguments_12_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop147;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,24,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                          
                    }

                    }
                    break;

            }

            // InternalJexTest.g:6875:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt150=2;
            alt150 = dfa150.predict(input);
            switch (alt150) {
                case 1 :
                    // InternalJexTest.g:6875:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalJexTest.g:6878:1: (lv_arguments_14_0= ruleXClosure )
                    // InternalJexTest.g:6879:3: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_14_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalJexTest.g:6903:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalJexTest.g:6904:2: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalJexTest.g:6905:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalJexTest.g:6912:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:6915:28: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalJexTest.g:6916:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalJexTest.g:6916:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalJexTest.g:6916:2: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalJexTest.g:6916:2: ()
            // InternalJexTest.g:6917:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:6922:2: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==95) ) {
                alt151=1;
            }
            else if ( (LA151_0==96) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalJexTest.g:6922:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:6927:6: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalJexTest.g:6927:6: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalJexTest.g:6928:1: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalJexTest.g:6928:1: (lv_isTrue_2_0= 'true' )
                    // InternalJexTest.g:6929:3: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "isTrue", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalJexTest.g:6950:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalJexTest.g:6951:2: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalJexTest.g:6952:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalJexTest.g:6959:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:6962:28: ( ( () otherlv_1= 'null' ) )
            // InternalJexTest.g:6963:1: ( () otherlv_1= 'null' )
            {
            // InternalJexTest.g:6963:1: ( () otherlv_1= 'null' )
            // InternalJexTest.g:6963:2: () otherlv_1= 'null'
            {
            // InternalJexTest.g:6963:2: ()
            // InternalJexTest.g:6964:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalJexTest.g:6981:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalJexTest.g:6982:2: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalJexTest.g:6983:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalJexTest.g:6990:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:6993:28: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalJexTest.g:6994:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalJexTest.g:6994:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalJexTest.g:6994:2: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalJexTest.g:6994:2: ()
            // InternalJexTest.g:6995:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:7000:2: ( (lv_value_1_0= ruleNumber ) )
            // InternalJexTest.g:7001:1: (lv_value_1_0= ruleNumber )
            {
            // InternalJexTest.g:7001:1: (lv_value_1_0= ruleNumber )
            // InternalJexTest.g:7002:3: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtext.xbase.Xbase.Number");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalJexTest.g:7026:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalJexTest.g:7027:2: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalJexTest.g:7028:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalJexTest.g:7035:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:7038:28: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalJexTest.g:7039:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalJexTest.g:7039:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalJexTest.g:7039:2: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalJexTest.g:7039:2: ()
            // InternalJexTest.g:7040:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalJexTest.g:7045:2: ( (lv_value_1_0= RULE_STRING ) )
            // InternalJexTest.g:7046:1: (lv_value_1_0= RULE_STRING )
            {
            // InternalJexTest.g:7046:1: (lv_value_1_0= RULE_STRING )
            // InternalJexTest.g:7047:3: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalJexTest.g:7071:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalJexTest.g:7072:2: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalJexTest.g:7073:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalJexTest.g:7080:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7083:28: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalJexTest.g:7084:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalJexTest.g:7084:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalJexTest.g:7084:2: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalJexTest.g:7084:2: ()
            // InternalJexTest.g:7085:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,98,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalJexTest.g:7098:1: ( ( ruleQualifiedName ) )
            // InternalJexTest.g:7099:1: ( ruleQualifiedName )
            {
            // InternalJexTest.g:7099:1: ( ruleQualifiedName )
            // InternalJexTest.g:7100:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXTypeLiteralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FOLLOW_115);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:7113:2: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==78) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalJexTest.g:7114:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalJexTest.g:7114:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalJexTest.g:7115:3: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arrayDimensions",
            	              		lv_arrayDimensions_4_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);

            otherlv_5=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalJexTest.g:7143:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalJexTest.g:7144:2: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalJexTest.g:7145:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalJexTest.g:7152:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7155:28: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:7156:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:7156:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalJexTest.g:7156:2: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalJexTest.g:7156:2: ()
            // InternalJexTest.g:7157:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
                  
            }
            // InternalJexTest.g:7166:1: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalJexTest.g:7167:1: (lv_expression_2_0= ruleXExpression )
            {
            // InternalJexTest.g:7167:1: (lv_expression_2_0= ruleXExpression )
            // InternalJexTest.g:7168:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalJexTest.g:7192:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalJexTest.g:7193:2: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalJexTest.g:7194:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalJexTest.g:7201:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7204:28: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalJexTest.g:7205:1: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalJexTest.g:7205:1: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalJexTest.g:7205:2: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalJexTest.g:7205:2: ()
            // InternalJexTest.g:7206:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,100,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
                  
            }
            // InternalJexTest.g:7215:1: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt153=2;
            alt153 = dfa153.predict(input);
            switch (alt153) {
                case 1 :
                    // InternalJexTest.g:7215:2: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalJexTest.g:7243:1: (lv_expression_2_0= ruleXExpression )
                    // InternalJexTest.g:7244:3: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalJexTest.g:7268:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalJexTest.g:7269:2: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalJexTest.g:7270:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalJexTest.g:7277:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7280:28: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalJexTest.g:7281:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalJexTest.g:7281:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalJexTest.g:7281:2: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalJexTest.g:7281:2: ()
            // InternalJexTest.g:7282:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,101,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
                  
            }
            // InternalJexTest.g:7291:1: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalJexTest.g:7292:1: (lv_expression_2_0= ruleXExpression )
            {
            // InternalJexTest.g:7292:1: (lv_expression_2_0= ruleXExpression )
            // InternalJexTest.g:7293:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_117);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:7309:2: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==104) ) {
                alt156=1;
            }
            else if ( (LA156_0==102) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // InternalJexTest.g:7309:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalJexTest.g:7309:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalJexTest.g:7309:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalJexTest.g:7309:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt154=0;
                    loop154:
                    do {
                        int alt154=2;
                        int LA154_0 = input.LA(1);

                        if ( (LA154_0==104) ) {
                            int LA154_2 = input.LA(2);

                            if ( (synpred38_InternalJexTest()) ) {
                                alt154=1;
                            }


                        }


                        switch (alt154) {
                    	case 1 :
                    	    // InternalJexTest.g:7309:5: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalJexTest.g:7311:1: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalJexTest.g:7312:3: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"catchClauses",
                    	              		lv_catchClauses_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt154 >= 1 ) break loop154;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(154, input);
                                throw eee;
                        }
                        cnt154++;
                    } while (true);

                    // InternalJexTest.g:7328:3: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==102) ) {
                        int LA155_1 = input.LA(2);

                        if ( (synpred39_InternalJexTest()) ) {
                            alt155=1;
                        }
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalJexTest.g:7328:4: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalJexTest.g:7328:4: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalJexTest.g:7328:5: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,102,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                                  
                            }

                            }

                            // InternalJexTest.g:7333:2: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalJexTest.g:7334:1: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalJexTest.g:7334:1: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalJexTest.g:7335:3: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finallyExpression",
                                      		lv_finallyExpression_5_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:7352:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalJexTest.g:7352:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalJexTest.g:7352:8: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,102,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                          
                    }
                    // InternalJexTest.g:7356:1: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalJexTest.g:7357:1: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalJexTest.g:7357:1: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalJexTest.g:7358:3: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"finallyExpression",
                              		lv_finallyExpression_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalJexTest.g:7382:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalJexTest.g:7383:2: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalJexTest.g:7384:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalJexTest.g:7391:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7394:28: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:7395:1: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:7395:1: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalJexTest.g:7395:2: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalJexTest.g:7395:2: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalJexTest.g:7395:3: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalJexTest.g:7398:5: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalJexTest.g:7398:6: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalJexTest.g:7398:6: ()
            // InternalJexTest.g:7399:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,103,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,23,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }

            }


            }

            // InternalJexTest.g:7412:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalJexTest.g:7413:1: (lv_param_3_0= ruleXExpression )
            {
            // InternalJexTest.g:7413:1: (lv_param_3_0= ruleXExpression )
            // InternalJexTest.g:7414:3: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"param",
                      		lv_param_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // InternalJexTest.g:7434:1: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalJexTest.g:7435:1: (lv_expression_5_0= ruleXExpression )
            {
            // InternalJexTest.g:7435:1: (lv_expression_5_0= ruleXExpression )
            // InternalJexTest.g:7436:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalJexTest.g:7460:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalJexTest.g:7461:2: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalJexTest.g:7462:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalJexTest.g:7469:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7472:28: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalJexTest.g:7473:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalJexTest.g:7473:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalJexTest.g:7473:2: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalJexTest.g:7473:2: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalJexTest.g:7473:3: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,104,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
                  
            }

            }

            otherlv_1=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalJexTest.g:7482:1: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalJexTest.g:7483:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalJexTest.g:7483:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalJexTest.g:7484:3: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
                  
            }
            // InternalJexTest.g:7504:1: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalJexTest.g:7505:1: (lv_expression_4_0= ruleXExpression )
            {
            // InternalJexTest.g:7505:1: (lv_expression_4_0= ruleXExpression )
            // InternalJexTest.g:7506:3: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalJexTest.g:7530:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalJexTest.g:7531:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalJexTest.g:7532:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalJexTest.g:7539:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7542:28: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalJexTest.g:7543:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalJexTest.g:7543:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalJexTest.g:7544:5: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_36);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ValidID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalJexTest.g:7554:1: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==29) ) {
                    int LA157_2 = input.LA(2);

                    if ( (LA157_2==RULE_ID) ) {
                        int LA157_3 = input.LA(3);

                        if ( (synpred42_InternalJexTest()) ) {
                            alt157=1;
                        }


                    }


                }


                switch (alt157) {
            	case 1 :
            	    // InternalJexTest.g:7554:2: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalJexTest.g:7554:2: ( ( '.' )=>kw= '.' )
            	    // InternalJexTest.g:7554:3: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FOLLOW_36);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalJexTest.g:7581:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalJexTest.g:7585:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalJexTest.g:7586:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalJexTest.g:7596:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalJexTest.g:7600:28: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalJexTest.g:7601:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalJexTest.g:7601:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==RULE_HEX) ) {
                alt161=1;
            }
            else if ( ((LA161_0>=RULE_INT && LA161_0<=RULE_DECIMAL)) ) {
                alt161=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;
            }
            switch (alt161) {
                case 1 :
                    // InternalJexTest.g:7601:6: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:7609:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalJexTest.g:7609:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalJexTest.g:7609:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalJexTest.g:7609:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==RULE_INT) ) {
                        alt158=1;
                    }
                    else if ( (LA158_0==RULE_DECIMAL) ) {
                        alt158=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 158, 0, input);

                        throw nvae;
                    }
                    switch (alt158) {
                        case 1 :
                            // InternalJexTest.g:7609:12: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_INT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalJexTest.g:7617:10: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DECIMAL_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
                                  
                            }

                            }
                            break;

                    }

                    // InternalJexTest.g:7624:2: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==29) ) {
                        int LA160_1 = input.LA(2);

                        if ( ((LA160_1>=RULE_INT && LA160_1<=RULE_DECIMAL)) ) {
                            alt160=1;
                        }
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalJexTest.g:7625:2: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,29,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
                                  
                            }
                            // InternalJexTest.g:7630:1: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt159=2;
                            int LA159_0 = input.LA(1);

                            if ( (LA159_0==RULE_INT) ) {
                                alt159=1;
                            }
                            else if ( (LA159_0==RULE_DECIMAL) ) {
                                alt159=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 159, 0, input);

                                throw nvae;
                            }
                            switch (alt159) {
                                case 1 :
                                    // InternalJexTest.g:7630:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_INT_4);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
                                          
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalJexTest.g:7638:10: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_DECIMAL_5);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalJexTest.g:7658:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalJexTest.g:7659:2: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalJexTest.g:7660:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalJexTest.g:7667:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7670:28: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalJexTest.g:7671:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalJexTest.g:7671:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==RULE_ID) ) {
                alt163=1;
            }
            else if ( (LA163_0==23||LA163_0==43) ) {
                alt163=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }
            switch (alt163) {
                case 1 :
                    // InternalJexTest.g:7671:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalJexTest.g:7671:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalJexTest.g:7672:5: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_113);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmParameterizedTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalJexTest.g:7680:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==78) ) {
                            int LA162_2 = input.LA(2);

                            if ( (LA162_2==79) ) {
                                int LA162_3 = input.LA(3);

                                if ( (synpred43_InternalJexTest()) ) {
                                    alt162=1;
                                }


                            }


                        }


                        switch (alt162) {
                    	case 1 :
                    	    // InternalJexTest.g:7680:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalJexTest.g:7681:24: ( () ruleArrayBrackets )
                    	    // InternalJexTest.g:7681:25: () ruleArrayBrackets
                    	    {
                    	    // InternalJexTest.g:7681:25: ()
                    	    // InternalJexTest.g:7682:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_113);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop162;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:7697:5: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFunctionTypeRef_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalJexTest.g:7713:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalJexTest.g:7714:2: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalJexTest.g:7715:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalJexTest.g:7722:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:7725:28: ( (kw= '[' kw= ']' ) )
            // InternalJexTest.g:7726:1: (kw= '[' kw= ']' )
            {
            // InternalJexTest.g:7726:1: (kw= '[' kw= ']' )
            // InternalJexTest.g:7727:2: kw= '[' kw= ']'
            {
            kw=(Token)match(input,78,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
                  
            }
            kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalJexTest.g:7746:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalJexTest.g:7747:2: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalJexTest.g:7748:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalJexTest.g:7755:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7758:28: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalJexTest.g:7759:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalJexTest.g:7759:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalJexTest.g:7759:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalJexTest.g:7759:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==23) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalJexTest.g:7759:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,23,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                          
                    }
                    // InternalJexTest.g:7763:1: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt165=2;
                    int LA165_0 = input.LA(1);

                    if ( (LA165_0==RULE_ID||LA165_0==23||LA165_0==43) ) {
                        alt165=1;
                    }
                    switch (alt165) {
                        case 1 :
                            // InternalJexTest.g:7763:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalJexTest.g:7763:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalJexTest.g:7764:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalJexTest.g:7764:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalJexTest.g:7765:3: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_24);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"paramTypes",
                                      		lv_paramTypes_1_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalJexTest.g:7781:2: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop164:
                            do {
                                int alt164=2;
                                int LA164_0 = input.LA(1);

                                if ( (LA164_0==16) ) {
                                    alt164=1;
                                }


                                switch (alt164) {
                            	case 1 :
                            	    // InternalJexTest.g:7781:4: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalJexTest.g:7785:1: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalJexTest.g:7786:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalJexTest.g:7786:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalJexTest.g:7787:3: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"paramTypes",
                            	              		lv_paramTypes_3_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop164;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,24,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,43,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
                  
            }
            // InternalJexTest.g:7811:1: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalJexTest.g:7812:1: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalJexTest.g:7812:1: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalJexTest.g:7813:3: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_6_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalJexTest.g:7837:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalJexTest.g:7838:2: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalJexTest.g:7839:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalJexTest.g:7846:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:7849:28: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalJexTest.g:7850:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalJexTest.g:7850:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalJexTest.g:7850:2: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalJexTest.g:7850:2: ( ( ruleQualifiedName ) )
            // InternalJexTest.g:7851:1: ( ruleQualifiedName )
            {
            // InternalJexTest.g:7851:1: ( ruleQualifiedName )
            // InternalJexTest.g:7852:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_121);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalJexTest.g:7865:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt171=2;
            alt171 = dfa171.predict(input);
            switch (alt171) {
                case 1 :
                    // InternalJexTest.g:7865:3: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalJexTest.g:7865:3: ( ( '<' )=>otherlv_1= '<' )
                    // InternalJexTest.g:7865:4: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,57,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }

                    // InternalJexTest.g:7870:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalJexTest.g:7871:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalJexTest.g:7871:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalJexTest.g:7872:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_81);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:7888:2: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==16) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // InternalJexTest.g:7888:4: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,16,FOLLOW_80); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalJexTest.g:7892:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalJexTest.g:7893:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalJexTest.g:7893:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalJexTest.g:7894:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"arguments",
                    	              		lv_arguments_4_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop167;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                          
                    }
                    // InternalJexTest.g:7914:1: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop170:
                    do {
                        int alt170=2;
                        int LA170_0 = input.LA(1);

                        if ( (LA170_0==29) ) {
                            int LA170_2 = input.LA(2);

                            if ( (LA170_2==RULE_ID) ) {
                                int LA170_3 = input.LA(3);

                                if ( (synpred45_InternalJexTest()) ) {
                                    alt170=1;
                                }


                            }


                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalJexTest.g:7914:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalJexTest.g:7914:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalJexTest.g:7914:3: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalJexTest.g:7916:5: ( () otherlv_7= '.' )
                    	    // InternalJexTest.g:7916:6: () otherlv_7= '.'
                    	    {
                    	    // InternalJexTest.g:7916:6: ()
                    	    // InternalJexTest.g:7917:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	          
                    	    }

                    	    }


                    	    }

                    	    // InternalJexTest.g:7926:3: ( ( ruleValidID ) )
                    	    // InternalJexTest.g:7927:1: ( ruleValidID )
                    	    {
                    	    // InternalJexTest.g:7927:1: ( ruleValidID )
                    	    // InternalJexTest.g:7928:3: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_122);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // InternalJexTest.g:7941:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt169=2;
                    	    alt169 = dfa169.predict(input);
                    	    switch (alt169) {
                    	        case 1 :
                    	            // InternalJexTest.g:7941:3: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalJexTest.g:7941:3: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalJexTest.g:7941:4: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,57,FOLLOW_80); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	                  
                    	            }

                    	            }

                    	            // InternalJexTest.g:7946:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalJexTest.g:7947:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalJexTest.g:7947:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalJexTest.g:7948:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_81);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"arguments",
                    	                      		lv_arguments_10_0, 
                    	                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }

                    	            // InternalJexTest.g:7964:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop168:
                    	            do {
                    	                int alt168=2;
                    	                int LA168_0 = input.LA(1);

                    	                if ( (LA168_0==16) ) {
                    	                    alt168=1;
                    	                }


                    	                switch (alt168) {
                    	            	case 1 :
                    	            	    // InternalJexTest.g:7964:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,16,FOLLOW_80); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	          	newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	          
                    	            	    }
                    	            	    // InternalJexTest.g:7968:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalJexTest.g:7969:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalJexTest.g:7969:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalJexTest.g:7970:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {
                    	            	       
                    	            	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
                    	            	      	    
                    	            	    }
                    	            	    pushFollow(FOLLOW_81);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      	        if (current==null) {
                    	            	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      	        }
                    	            	             		add(
                    	            	             			current, 
                    	            	             			"arguments",
                    	            	              		lv_arguments_12_0, 
                    	            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      	        afterParserOrEnumRuleCall();
                    	            	      	    
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop168;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop170;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalJexTest.g:7998:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalJexTest.g:7999:2: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalJexTest.g:8000:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalJexTest.g:8007:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8010:28: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalJexTest.g:8011:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalJexTest.g:8011:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==RULE_ID||LA172_0==23||LA172_0==43) ) {
                alt172=1;
            }
            else if ( (LA172_0==105) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }
            switch (alt172) {
                case 1 :
                    // InternalJexTest.g:8012:5: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalJexTest.g:8022:5: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmWildcardTypeReference_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalJexTest.g:8038:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalJexTest.g:8039:2: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalJexTest.g:8040:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalJexTest.g:8047:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8050:28: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalJexTest.g:8051:1: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalJexTest.g:8051:1: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalJexTest.g:8051:2: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalJexTest.g:8051:2: ()
            // InternalJexTest.g:8052:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,105,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
                  
            }
            // InternalJexTest.g:8061:1: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt175=3;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==41) ) {
                alt175=1;
            }
            else if ( (LA175_0==94) ) {
                alt175=2;
            }
            switch (alt175) {
                case 1 :
                    // InternalJexTest.g:8061:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalJexTest.g:8061:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalJexTest.g:8061:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalJexTest.g:8061:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalJexTest.g:8062:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalJexTest.g:8062:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalJexTest.g:8063:3: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_124);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:8079:2: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop173:
                    do {
                        int alt173=2;
                        int LA173_0 = input.LA(1);

                        if ( (LA173_0==106) ) {
                            alt173=1;
                        }


                        switch (alt173) {
                    	case 1 :
                    	    // InternalJexTest.g:8080:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalJexTest.g:8080:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalJexTest.g:8081:3: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_124);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop173;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:8098:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalJexTest.g:8098:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalJexTest.g:8098:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalJexTest.g:8098:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalJexTest.g:8099:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalJexTest.g:8099:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalJexTest.g:8100:3: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_124);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:8116:2: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop174:
                    do {
                        int alt174=2;
                        int LA174_0 = input.LA(1);

                        if ( (LA174_0==106) ) {
                            alt174=1;
                        }


                        switch (alt174) {
                    	case 1 :
                    	    // InternalJexTest.g:8117:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalJexTest.g:8117:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalJexTest.g:8118:3: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_124);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop174;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalJexTest.g:8142:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalJexTest.g:8143:2: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalJexTest.g:8144:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalJexTest.g:8151:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8154:28: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalJexTest.g:8155:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalJexTest.g:8155:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalJexTest.g:8155:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,41,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
                  
            }
            // InternalJexTest.g:8159:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalJexTest.g:8160:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalJexTest.g:8160:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalJexTest.g:8161:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalJexTest.g:8185:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalJexTest.g:8186:2: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalJexTest.g:8187:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalJexTest.g:8194:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8197:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalJexTest.g:8198:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalJexTest.g:8198:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalJexTest.g:8198:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,106,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // InternalJexTest.g:8202:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalJexTest.g:8203:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalJexTest.g:8203:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalJexTest.g:8204:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalJexTest.g:8228:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalJexTest.g:8229:2: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalJexTest.g:8230:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalJexTest.g:8237:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8240:28: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalJexTest.g:8241:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalJexTest.g:8241:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalJexTest.g:8241:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,94,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
                  
            }
            // InternalJexTest.g:8245:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalJexTest.g:8246:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalJexTest.g:8246:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalJexTest.g:8247:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalJexTest.g:8271:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalJexTest.g:8272:2: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalJexTest.g:8273:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalJexTest.g:8280:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8283:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalJexTest.g:8284:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalJexTest.g:8284:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalJexTest.g:8284:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,106,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // InternalJexTest.g:8288:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalJexTest.g:8289:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalJexTest.g:8289:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalJexTest.g:8290:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalJexTest.g:8316:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalJexTest.g:8317:2: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalJexTest.g:8318:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalJexTest.g:8325:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8328:28: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalJexTest.g:8329:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalJexTest.g:8329:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalJexTest.g:8330:5: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_47);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            kw=(Token)match(input,29,FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
                  
            }
            kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalJexTest.g:8360:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalJexTest.g:8361:2: (iv_ruleValidID= ruleValidID EOF )
            // InternalJexTest.g:8362:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalJexTest.g:8369:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // InternalJexTest.g:8372:28: (this_ID_0= RULE_ID )
            // InternalJexTest.g:8373:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalJexTest.g:8388:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalJexTest.g:8389:2: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalJexTest.g:8390:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalJexTest.g:8397:1: ruleXImportSection returns [EObject current=null] : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8400:28: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalJexTest.g:8401:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalJexTest.g:8401:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt176=0;
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==92) ) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // InternalJexTest.g:8402:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalJexTest.g:8402:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalJexTest.g:8403:3: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"importDeclarations",
            	              		lv_importDeclarations_0_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.XImportDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt176 >= 1 ) break loop176;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(176, input);
                        throw eee;
                }
                cnt176++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalJexTest.g:8427:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalJexTest.g:8428:2: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalJexTest.g:8429:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalJexTest.g:8436:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8439:28: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalJexTest.g:8440:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalJexTest.g:8440:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalJexTest.g:8440:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,92,FOLLOW_127); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
                  
            }
            // InternalJexTest.g:8444:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt179=3;
            alt179 = dfa179.predict(input);
            switch (alt179) {
                case 1 :
                    // InternalJexTest.g:8444:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalJexTest.g:8444:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalJexTest.g:8444:3: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalJexTest.g:8444:3: ( (lv_static_1_0= 'static' ) )
                    // InternalJexTest.g:8445:1: (lv_static_1_0= 'static' )
                    {
                    // InternalJexTest.g:8445:1: (lv_static_1_0= 'static' )
                    // InternalJexTest.g:8446:3: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,91,FOLLOW_128); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:8459:2: ( (lv_extension_2_0= 'extension' ) )?
                    int alt177=2;
                    int LA177_0 = input.LA(1);

                    if ( (LA177_0==93) ) {
                        alt177=1;
                    }
                    switch (alt177) {
                        case 1 :
                            // InternalJexTest.g:8460:1: (lv_extension_2_0= 'extension' )
                            {
                            // InternalJexTest.g:8460:1: (lv_extension_2_0= 'extension' )
                            // InternalJexTest.g:8461:3: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,93,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "extension", true, "extension");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalJexTest.g:8474:3: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalJexTest.g:8475:1: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalJexTest.g:8475:1: ( ruleQualifiedNameInStaticImport )
                    // InternalJexTest.g:8476:3: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_129);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalJexTest.g:8489:2: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==70) ) {
                        alt178=1;
                    }
                    else if ( (LA178_0==RULE_ID) ) {
                        alt178=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 178, 0, input);

                        throw nvae;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalJexTest.g:8489:3: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalJexTest.g:8489:3: ( (lv_wildcard_4_0= '*' ) )
                            // InternalJexTest.g:8490:1: (lv_wildcard_4_0= '*' )
                            {
                            // InternalJexTest.g:8490:1: (lv_wildcard_4_0= '*' )
                            // InternalJexTest.g:8491:3: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,70,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "wildcard", true, "*");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalJexTest.g:8505:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalJexTest.g:8505:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalJexTest.g:8506:1: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalJexTest.g:8506:1: (lv_memberName_5_0= ruleValidID )
                            // InternalJexTest.g:8507:3: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_130);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"memberName",
                                      		lv_memberName_5_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalJexTest.g:8524:6: ( ( ruleQualifiedName ) )
                    {
                    // InternalJexTest.g:8524:6: ( ( ruleQualifiedName ) )
                    // InternalJexTest.g:8525:1: ( ruleQualifiedName )
                    {
                    // InternalJexTest.g:8525:1: ( ruleQualifiedName )
                    // InternalJexTest.g:8526:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_130);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalJexTest.g:8540:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalJexTest.g:8540:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalJexTest.g:8541:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalJexTest.g:8541:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalJexTest.g:8542:3: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_130);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"importedNamespace",
                              		lv_importedNamespace_7_0, 
                              		"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalJexTest.g:8558:3: (otherlv_8= ';' )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==31) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalJexTest.g:8558:5: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalJexTest.g:8570:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalJexTest.g:8571:2: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalJexTest.g:8572:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalJexTest.g:8579:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // InternalJexTest.g:8582:28: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalJexTest.g:8583:1: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalJexTest.g:8583:1: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt181=0;
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==RULE_ID) ) {
                    int LA181_2 = input.LA(2);

                    if ( (LA181_2==29) ) {
                        alt181=1;
                    }


                }


                switch (alt181) {
            	case 1 :
            	    // InternalJexTest.g:8584:5: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); 
            	          
            	    }
            	    pushFollow(FOLLOW_47);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }
            	    kw=(Token)match(input,29,FOLLOW_131); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt181 >= 1 ) break loop181;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(181, input);
                        throw eee;
                }
                cnt181++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred1_InternalJexTest
    public final void synpred1_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:2797:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalJexTest.g:2797:4: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalJexTest.g:2797:4: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalJexTest.g:2797:5: () ( ( ruleOpMultiAssign ) )
        {
        // InternalJexTest.g:2797:5: ()
        // InternalJexTest.g:2798:1: 
        {
        }

        // InternalJexTest.g:2798:2: ( ( ruleOpMultiAssign ) )
        // InternalJexTest.g:2799:1: ( ruleOpMultiAssign )
        {
        // InternalJexTest.g:2799:1: ( ruleOpMultiAssign )
        // InternalJexTest.g:2800:3: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalJexTest

    // $ANTLR start synpred2_InternalJexTest
    public final void synpred2_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:2991:3: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalJexTest.g:2991:4: ( () ( ( ruleOpOr ) ) )
        {
        // InternalJexTest.g:2991:4: ( () ( ( ruleOpOr ) ) )
        // InternalJexTest.g:2991:5: () ( ( ruleOpOr ) )
        {
        // InternalJexTest.g:2991:5: ()
        // InternalJexTest.g:2992:1: 
        {
        }

        // InternalJexTest.g:2992:2: ( ( ruleOpOr ) )
        // InternalJexTest.g:2993:1: ( ruleOpOr )
        {
        // InternalJexTest.g:2993:1: ( ruleOpOr )
        // InternalJexTest.g:2994:3: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalJexTest

    // $ANTLR start synpred3_InternalJexTest
    public final void synpred3_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3092:3: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalJexTest.g:3092:4: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalJexTest.g:3092:4: ( () ( ( ruleOpAnd ) ) )
        // InternalJexTest.g:3092:5: () ( ( ruleOpAnd ) )
        {
        // InternalJexTest.g:3092:5: ()
        // InternalJexTest.g:3093:1: 
        {
        }

        // InternalJexTest.g:3093:2: ( ( ruleOpAnd ) )
        // InternalJexTest.g:3094:1: ( ruleOpAnd )
        {
        // InternalJexTest.g:3094:1: ( ruleOpAnd )
        // InternalJexTest.g:3095:3: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalJexTest

    // $ANTLR start synpred4_InternalJexTest
    public final void synpred4_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3193:3: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalJexTest.g:3193:4: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalJexTest.g:3193:4: ( () ( ( ruleOpEquality ) ) )
        // InternalJexTest.g:3193:5: () ( ( ruleOpEquality ) )
        {
        // InternalJexTest.g:3193:5: ()
        // InternalJexTest.g:3194:1: 
        {
        }

        // InternalJexTest.g:3194:2: ( ( ruleOpEquality ) )
        // InternalJexTest.g:3195:1: ( ruleOpEquality )
        {
        // InternalJexTest.g:3195:1: ( ruleOpEquality )
        // InternalJexTest.g:3196:3: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalJexTest

    // $ANTLR start synpred5_InternalJexTest
    public final void synpred5_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3267:4: ( ( () 'instanceof' ) )
        // InternalJexTest.g:3267:5: ( () 'instanceof' )
        {
        // InternalJexTest.g:3267:5: ( () 'instanceof' )
        // InternalJexTest.g:3267:6: () 'instanceof'
        {
        // InternalJexTest.g:3267:6: ()
        // InternalJexTest.g:3268:1: 
        {
        }

        match(input,62,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalJexTest

    // $ANTLR start synpred6_InternalJexTest
    public final void synpred6_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3298:8: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalJexTest.g:3298:9: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalJexTest.g:3298:9: ( () ( ( ruleOpCompare ) ) )
        // InternalJexTest.g:3298:10: () ( ( ruleOpCompare ) )
        {
        // InternalJexTest.g:3298:10: ()
        // InternalJexTest.g:3299:1: 
        {
        }

        // InternalJexTest.g:3299:2: ( ( ruleOpCompare ) )
        // InternalJexTest.g:3300:1: ( ruleOpCompare )
        {
        // InternalJexTest.g:3300:1: ( ruleOpCompare )
        // InternalJexTest.g:3301:3: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalJexTest

    // $ANTLR start synpred7_InternalJexTest
    public final void synpred7_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3426:3: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalJexTest.g:3426:4: ( () ( ( ruleOpOther ) ) )
        {
        // InternalJexTest.g:3426:4: ( () ( ( ruleOpOther ) ) )
        // InternalJexTest.g:3426:5: () ( ( ruleOpOther ) )
        {
        // InternalJexTest.g:3426:5: ()
        // InternalJexTest.g:3427:1: 
        {
        }

        // InternalJexTest.g:3427:2: ( ( ruleOpOther ) )
        // InternalJexTest.g:3428:1: ( ruleOpOther )
        {
        // InternalJexTest.g:3428:1: ( ruleOpOther )
        // InternalJexTest.g:3429:3: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalJexTest

    // $ANTLR start synpred8_InternalJexTest
    public final void synpred8_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3538:3: ( ( '>' '>' ) )
        // InternalJexTest.g:3538:4: ( '>' '>' )
        {
        // InternalJexTest.g:3538:4: ( '>' '>' )
        // InternalJexTest.g:3539:2: '>' '>'
        {
        match(input,58,FOLLOW_71); if (state.failed) return ;
        match(input,58,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalJexTest

    // $ANTLR start synpred9_InternalJexTest
    public final void synpred9_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3568:3: ( ( '<' '<' ) )
        // InternalJexTest.g:3568:4: ( '<' '<' )
        {
        // InternalJexTest.g:3568:4: ( '<' '<' )
        // InternalJexTest.g:3569:2: '<' '<'
        {
        match(input,57,FOLLOW_62); if (state.failed) return ;
        match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalJexTest

    // $ANTLR start synpred10_InternalJexTest
    public final void synpred10_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3642:3: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalJexTest.g:3642:4: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalJexTest.g:3642:4: ( () ( ( ruleOpAdd ) ) )
        // InternalJexTest.g:3642:5: () ( ( ruleOpAdd ) )
        {
        // InternalJexTest.g:3642:5: ()
        // InternalJexTest.g:3643:1: 
        {
        }

        // InternalJexTest.g:3643:2: ( ( ruleOpAdd ) )
        // InternalJexTest.g:3644:1: ( ruleOpAdd )
        {
        // InternalJexTest.g:3644:1: ( ruleOpAdd )
        // InternalJexTest.g:3645:3: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalJexTest

    // $ANTLR start synpred11_InternalJexTest
    public final void synpred11_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3750:3: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalJexTest.g:3750:4: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalJexTest.g:3750:4: ( () ( ( ruleOpMulti ) ) )
        // InternalJexTest.g:3750:5: () ( ( ruleOpMulti ) )
        {
        // InternalJexTest.g:3750:5: ()
        // InternalJexTest.g:3751:1: 
        {
        }

        // InternalJexTest.g:3751:2: ( ( ruleOpMulti ) )
        // InternalJexTest.g:3752:1: ( ruleOpMulti )
        {
        // InternalJexTest.g:3752:1: ( ruleOpMulti )
        // InternalJexTest.g:3753:3: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalJexTest

    // $ANTLR start synpred12_InternalJexTest
    public final void synpred12_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:3983:3: ( ( () 'as' ) )
        // InternalJexTest.g:3983:4: ( () 'as' )
        {
        // InternalJexTest.g:3983:4: ( () 'as' )
        // InternalJexTest.g:3983:5: () 'as'
        {
        // InternalJexTest.g:3983:5: ()
        // InternalJexTest.g:3984:1: 
        {
        }

        match(input,75,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalJexTest

    // $ANTLR start synpred13_InternalJexTest
    public final void synpred13_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4043:2: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalJexTest.g:4043:3: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalJexTest.g:4043:3: ( () ( ( ruleOpPostfix ) ) )
        // InternalJexTest.g:4043:4: () ( ( ruleOpPostfix ) )
        {
        // InternalJexTest.g:4043:4: ()
        // InternalJexTest.g:4044:1: 
        {
        }

        // InternalJexTest.g:4044:2: ( ( ruleOpPostfix ) )
        // InternalJexTest.g:4045:1: ( ruleOpPostfix )
        {
        // InternalJexTest.g:4045:1: ( ruleOpPostfix )
        // InternalJexTest.g:4046:3: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalJexTest

    // $ANTLR start synpred14_InternalJexTest
    public final void synpred14_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4099:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalJexTest.g:4099:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalJexTest.g:4099:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalJexTest.g:4099:6: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalJexTest.g:4099:6: ()
        // InternalJexTest.g:4100:1: 
        {
        }

        // InternalJexTest.g:4100:2: ( '.' | ( ( '::' ) ) )
        int alt182=2;
        int LA182_0 = input.LA(1);

        if ( (LA182_0==29) ) {
            alt182=1;
        }
        else if ( (LA182_0==76) ) {
            alt182=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 182, 0, input);

            throw nvae;
        }
        switch (alt182) {
            case 1 :
                // InternalJexTest.g:4100:4: '.'
                {
                match(input,29,FOLLOW_78); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalJexTest.g:4102:6: ( ( '::' ) )
                {
                // InternalJexTest.g:4102:6: ( ( '::' ) )
                // InternalJexTest.g:4103:1: ( '::' )
                {
                // InternalJexTest.g:4103:1: ( '::' )
                // InternalJexTest.g:4104:2: '::'
                {
                match(input,76,FOLLOW_78); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalJexTest.g:4108:3: ( ( ruleFeatureCallID ) )
        // InternalJexTest.g:4109:1: ( ruleFeatureCallID )
        {
        // InternalJexTest.g:4109:1: ( ruleFeatureCallID )
        // InternalJexTest.g:4110:3: ruleFeatureCallID
        {
        pushFollow(FOLLOW_60);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalJexTest

    // $ANTLR start synpred15_InternalJexTest
    public final void synpred15_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4180:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalJexTest.g:4180:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalJexTest.g:4180:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalJexTest.g:4180:10: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalJexTest.g:4180:10: ()
        // InternalJexTest.g:4181:1: 
        {
        }

        // InternalJexTest.g:4181:2: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt183=3;
        switch ( input.LA(1) ) {
        case 29:
            {
            alt183=1;
            }
            break;
        case 77:
            {
            alt183=2;
            }
            break;
        case 76:
            {
            alt183=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 183, 0, input);

            throw nvae;
        }

        switch (alt183) {
            case 1 :
                // InternalJexTest.g:4181:4: '.'
                {
                match(input,29,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalJexTest.g:4183:6: ( ( '?.' ) )
                {
                // InternalJexTest.g:4183:6: ( ( '?.' ) )
                // InternalJexTest.g:4184:1: ( '?.' )
                {
                // InternalJexTest.g:4184:1: ( '?.' )
                // InternalJexTest.g:4185:2: '?.'
                {
                match(input,77,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalJexTest.g:4190:6: ( ( '::' ) )
                {
                // InternalJexTest.g:4190:6: ( ( '::' ) )
                // InternalJexTest.g:4191:1: ( '::' )
                {
                // InternalJexTest.g:4191:1: ( '::' )
                // InternalJexTest.g:4192:2: '::'
                {
                match(input,76,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalJexTest

    // $ANTLR start synpred16_InternalJexTest
    public final void synpred16_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4301:4: ( ( '(' ) )
        // InternalJexTest.g:4302:1: ( '(' )
        {
        // InternalJexTest.g:4302:1: ( '(' )
        // InternalJexTest.g:4303:2: '('
        {
        match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalJexTest

    // $ANTLR start synpred17_InternalJexTest
    public final void synpred17_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4322:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalJexTest.g:4322:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalJexTest.g:4322:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalJexTest.g:4322:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalJexTest.g:4322:6: ()
        // InternalJexTest.g:4323:1: 
        {
        }

        // InternalJexTest.g:4323:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt185=2;
        int LA185_0 = input.LA(1);

        if ( (LA185_0==RULE_ID||LA185_0==23||LA185_0==43) ) {
            alt185=1;
        }
        switch (alt185) {
            case 1 :
                // InternalJexTest.g:4323:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalJexTest.g:4323:3: ( ( ruleJvmFormalParameter ) )
                // InternalJexTest.g:4324:1: ( ruleJvmFormalParameter )
                {
                // InternalJexTest.g:4324:1: ( ruleJvmFormalParameter )
                // InternalJexTest.g:4325:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_91);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalJexTest.g:4327:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop184:
                do {
                    int alt184=2;
                    int LA184_0 = input.LA(1);

                    if ( (LA184_0==16) ) {
                        alt184=1;
                    }


                    switch (alt184) {
                	case 1 :
                	    // InternalJexTest.g:4327:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,16,FOLLOW_6); if (state.failed) return ;
                	    // InternalJexTest.g:4328:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalJexTest.g:4329:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalJexTest.g:4329:1: ( ruleJvmFormalParameter )
                	    // InternalJexTest.g:4330:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_91);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop184;
                    }
                } while (true);


                }
                break;

        }

        // InternalJexTest.g:4332:6: ( ( '|' ) )
        // InternalJexTest.g:4333:1: ( '|' )
        {
        // InternalJexTest.g:4333:1: ( '|' )
        // InternalJexTest.g:4334:2: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalJexTest

    // $ANTLR start synpred18_InternalJexTest
    public final void synpred18_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4401:4: ( ( () '[' ) )
        // InternalJexTest.g:4401:5: ( () '[' )
        {
        // InternalJexTest.g:4401:5: ( () '[' )
        // InternalJexTest.g:4401:6: () '['
        {
        // InternalJexTest.g:4401:6: ()
        // InternalJexTest.g:4402:1: 
        {
        }

        match(input,78,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalJexTest

    // $ANTLR start synpred19_InternalJexTest
    public final void synpred19_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4472:7: ( ( () 'synchronized' '(' ) )
        // InternalJexTest.g:4472:8: ( () 'synchronized' '(' )
        {
        // InternalJexTest.g:4472:8: ( () 'synchronized' '(' )
        // InternalJexTest.g:4472:9: () 'synchronized' '('
        {
        // InternalJexTest.g:4472:9: ()
        // InternalJexTest.g:4473:1: 
        {
        }

        match(input,103,FOLLOW_22); if (state.failed) return ;
        match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalJexTest

    // $ANTLR start synpred20_InternalJexTest
    public final void synpred20_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4515:7: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalJexTest.g:4515:8: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalJexTest.g:4515:8: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalJexTest.g:4515:9: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalJexTest.g:4515:9: ()
        // InternalJexTest.g:4516:1: 
        {
        }

        match(input,87,FOLLOW_22); if (state.failed) return ;
        match(input,23,FOLLOW_6); if (state.failed) return ;
        // InternalJexTest.g:4518:1: ( ( ruleJvmFormalParameter ) )
        // InternalJexTest.g:4519:1: ( ruleJvmFormalParameter )
        {
        // InternalJexTest.g:4519:1: ( ruleJvmFormalParameter )
        // InternalJexTest.g:4520:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_98);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,84,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalJexTest

    // $ANTLR start synpred21_InternalJexTest
    public final void synpred21_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4633:7: ( ( () '[' ) )
        // InternalJexTest.g:4633:8: ( () '[' )
        {
        // InternalJexTest.g:4633:8: ( () '[' )
        // InternalJexTest.g:4633:9: () '['
        {
        // InternalJexTest.g:4633:9: ()
        // InternalJexTest.g:4634:1: 
        {
        }

        match(input,78,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalJexTest

    // $ANTLR start synpred23_InternalJexTest
    public final void synpred23_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:4925:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalJexTest.g:4925:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalJexTest.g:4925:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalJexTest.g:4925:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalJexTest.g:4925:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt187=2;
        int LA187_0 = input.LA(1);

        if ( (LA187_0==RULE_ID||LA187_0==23||LA187_0==43) ) {
            alt187=1;
        }
        switch (alt187) {
            case 1 :
                // InternalJexTest.g:4925:7: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalJexTest.g:4925:7: ( ( ruleJvmFormalParameter ) )
                // InternalJexTest.g:4926:1: ( ruleJvmFormalParameter )
                {
                // InternalJexTest.g:4926:1: ( ruleJvmFormalParameter )
                // InternalJexTest.g:4927:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_91);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalJexTest.g:4929:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop186:
                do {
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==16) ) {
                        alt186=1;
                    }


                    switch (alt186) {
                	case 1 :
                	    // InternalJexTest.g:4929:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,16,FOLLOW_6); if (state.failed) return ;
                	    // InternalJexTest.g:4930:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalJexTest.g:4931:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalJexTest.g:4931:1: ( ruleJvmFormalParameter )
                	    // InternalJexTest.g:4932:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_91);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop186;
                    }
                } while (true);


                }
                break;

        }

        // InternalJexTest.g:4934:6: ( ( '|' ) )
        // InternalJexTest.g:4935:1: ( '|' )
        {
        // InternalJexTest.g:4935:1: ( '|' )
        // InternalJexTest.g:4936:2: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalJexTest

    // $ANTLR start synpred25_InternalJexTest
    public final void synpred25_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:5295:4: ( 'else' )
        // InternalJexTest.g:5295:6: 'else'
        {
        match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalJexTest

    // $ANTLR start synpred26_InternalJexTest
    public final void synpred26_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:5349:4: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalJexTest.g:5349:5: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalJexTest.g:5349:5: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalJexTest.g:5349:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,23,FOLLOW_6); if (state.failed) return ;
        // InternalJexTest.g:5350:1: ( ( ruleJvmFormalParameter ) )
        // InternalJexTest.g:5351:1: ( ruleJvmFormalParameter )
        {
        // InternalJexTest.g:5351:1: ( ruleJvmFormalParameter )
        // InternalJexTest.g:5352:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_98);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,84,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalJexTest

    // $ANTLR start synpred27_InternalJexTest
    public final void synpred27_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:5404:8: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalJexTest.g:5404:9: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalJexTest.g:5404:9: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalJexTest.g:5404:10: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalJexTest.g:5404:10: ( ( ruleJvmFormalParameter ) )
        // InternalJexTest.g:5405:1: ( ruleJvmFormalParameter )
        {
        // InternalJexTest.g:5405:1: ( ruleJvmFormalParameter )
        // InternalJexTest.g:5406:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_98);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,84,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalJexTest

    // $ANTLR start synpred29_InternalJexTest
    public final void synpred29_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6172:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalJexTest.g:6172:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalJexTest.g:6172:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalJexTest.g:6172:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalJexTest.g:6172:6: ( ( ruleJvmTypeReference ) )
        // InternalJexTest.g:6173:1: ( ruleJvmTypeReference )
        {
        // InternalJexTest.g:6173:1: ( ruleJvmTypeReference )
        // InternalJexTest.g:6174:1: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_3);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalJexTest.g:6176:2: ( ( ruleValidID ) )
        // InternalJexTest.g:6177:1: ( ruleValidID )
        {
        // InternalJexTest.g:6177:1: ( ruleValidID )
        // InternalJexTest.g:6178:1: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalJexTest

    // $ANTLR start synpred30_InternalJexTest
    public final void synpred30_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6461:4: ( ( '(' ) )
        // InternalJexTest.g:6462:1: ( '(' )
        {
        // InternalJexTest.g:6462:1: ( '(' )
        // InternalJexTest.g:6463:2: '('
        {
        match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalJexTest

    // $ANTLR start synpred31_InternalJexTest
    public final void synpred31_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6482:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalJexTest.g:6482:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalJexTest.g:6482:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalJexTest.g:6482:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalJexTest.g:6482:6: ()
        // InternalJexTest.g:6483:1: 
        {
        }

        // InternalJexTest.g:6483:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt191=2;
        int LA191_0 = input.LA(1);

        if ( (LA191_0==RULE_ID||LA191_0==23||LA191_0==43) ) {
            alt191=1;
        }
        switch (alt191) {
            case 1 :
                // InternalJexTest.g:6483:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalJexTest.g:6483:3: ( ( ruleJvmFormalParameter ) )
                // InternalJexTest.g:6484:1: ( ruleJvmFormalParameter )
                {
                // InternalJexTest.g:6484:1: ( ruleJvmFormalParameter )
                // InternalJexTest.g:6485:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_91);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalJexTest.g:6487:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop190:
                do {
                    int alt190=2;
                    int LA190_0 = input.LA(1);

                    if ( (LA190_0==16) ) {
                        alt190=1;
                    }


                    switch (alt190) {
                	case 1 :
                	    // InternalJexTest.g:6487:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,16,FOLLOW_6); if (state.failed) return ;
                	    // InternalJexTest.g:6488:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalJexTest.g:6489:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalJexTest.g:6489:1: ( ruleJvmFormalParameter )
                	    // InternalJexTest.g:6490:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_91);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop190;
                    }
                } while (true);


                }
                break;

        }

        // InternalJexTest.g:6492:6: ( ( '|' ) )
        // InternalJexTest.g:6493:1: ( '|' )
        {
        // InternalJexTest.g:6493:1: ( '|' )
        // InternalJexTest.g:6494:2: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalJexTest

    // $ANTLR start synpred32_InternalJexTest
    public final void synpred32_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6561:4: ( ( () '[' ) )
        // InternalJexTest.g:6561:5: ( () '[' )
        {
        // InternalJexTest.g:6561:5: ( () '[' )
        // InternalJexTest.g:6561:6: () '['
        {
        // InternalJexTest.g:6561:6: ()
        // InternalJexTest.g:6562:1: 
        {
        }

        match(input,78,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalJexTest

    // $ANTLR start synpred33_InternalJexTest
    public final void synpred33_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6726:4: ( '<' )
        // InternalJexTest.g:6726:6: '<'
        {
        match(input,57,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalJexTest

    // $ANTLR start synpred34_InternalJexTest
    public final void synpred34_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6775:5: ( ( '(' ) )
        // InternalJexTest.g:6776:1: ( '(' )
        {
        // InternalJexTest.g:6776:1: ( '(' )
        // InternalJexTest.g:6777:2: '('
        {
        match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalJexTest

    // $ANTLR start synpred35_InternalJexTest
    public final void synpred35_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6796:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalJexTest.g:6796:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalJexTest.g:6796:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalJexTest.g:6796:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalJexTest.g:6796:6: ()
        // InternalJexTest.g:6797:1: 
        {
        }

        // InternalJexTest.g:6797:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt193=2;
        int LA193_0 = input.LA(1);

        if ( (LA193_0==RULE_ID||LA193_0==23||LA193_0==43) ) {
            alt193=1;
        }
        switch (alt193) {
            case 1 :
                // InternalJexTest.g:6797:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalJexTest.g:6797:3: ( ( ruleJvmFormalParameter ) )
                // InternalJexTest.g:6798:1: ( ruleJvmFormalParameter )
                {
                // InternalJexTest.g:6798:1: ( ruleJvmFormalParameter )
                // InternalJexTest.g:6799:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_91);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalJexTest.g:6801:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop192:
                do {
                    int alt192=2;
                    int LA192_0 = input.LA(1);

                    if ( (LA192_0==16) ) {
                        alt192=1;
                    }


                    switch (alt192) {
                	case 1 :
                	    // InternalJexTest.g:6801:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,16,FOLLOW_6); if (state.failed) return ;
                	    // InternalJexTest.g:6802:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalJexTest.g:6803:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalJexTest.g:6803:1: ( ruleJvmFormalParameter )
                	    // InternalJexTest.g:6804:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_91);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop192;
                    }
                } while (true);


                }
                break;

        }

        // InternalJexTest.g:6806:6: ( ( '|' ) )
        // InternalJexTest.g:6807:1: ( '|' )
        {
        // InternalJexTest.g:6807:1: ( '|' )
        // InternalJexTest.g:6808:2: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalJexTest

    // $ANTLR start synpred36_InternalJexTest
    public final void synpred36_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:6875:4: ( ( () '[' ) )
        // InternalJexTest.g:6875:5: ( () '[' )
        {
        // InternalJexTest.g:6875:5: ( () '[' )
        // InternalJexTest.g:6875:6: () '['
        {
        // InternalJexTest.g:6875:6: ()
        // InternalJexTest.g:6876:1: 
        {
        }

        match(input,78,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalJexTest

    // $ANTLR start synpred37_InternalJexTest
    public final void synpred37_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7215:2: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalJexTest.g:
        {
        if ( (input.LA(1)>=RULE_STRING && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==23||input.LA(1)==27||input.LA(1)==30||input.LA(1)==41||input.LA(1)==45||input.LA(1)==57||(input.LA(1)>=68 && input.LA(1)<=69)||input.LA(1)==74||input.LA(1)==78||input.LA(1)==81||input.LA(1)==83||(input.LA(1)>=87 && input.LA(1)<=89)||(input.LA(1)>=91 && input.LA(1)<=101)||input.LA(1)==103 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalJexTest

    // $ANTLR start synpred38_InternalJexTest
    public final void synpred38_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7309:5: ( 'catch' )
        // InternalJexTest.g:7309:7: 'catch'
        {
        match(input,104,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalJexTest

    // $ANTLR start synpred39_InternalJexTest
    public final void synpred39_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7328:5: ( 'finally' )
        // InternalJexTest.g:7328:7: 'finally'
        {
        match(input,102,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalJexTest

    // $ANTLR start synpred42_InternalJexTest
    public final void synpred42_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7554:3: ( '.' )
        // InternalJexTest.g:7555:2: '.'
        {
        match(input,29,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalJexTest

    // $ANTLR start synpred43_InternalJexTest
    public final void synpred43_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7680:2: ( ( () ruleArrayBrackets ) )
        // InternalJexTest.g:7680:3: ( () ruleArrayBrackets )
        {
        // InternalJexTest.g:7680:3: ( () ruleArrayBrackets )
        // InternalJexTest.g:7680:4: () ruleArrayBrackets
        {
        // InternalJexTest.g:7680:4: ()
        // InternalJexTest.g:7681:1: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalJexTest

    // $ANTLR start synpred44_InternalJexTest
    public final void synpred44_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7865:4: ( '<' )
        // InternalJexTest.g:7865:6: '<'
        {
        match(input,57,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalJexTest

    // $ANTLR start synpred45_InternalJexTest
    public final void synpred45_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7914:3: ( ( () '.' ) )
        // InternalJexTest.g:7914:4: ( () '.' )
        {
        // InternalJexTest.g:7914:4: ( () '.' )
        // InternalJexTest.g:7914:5: () '.'
        {
        // InternalJexTest.g:7914:5: ()
        // InternalJexTest.g:7915:1: 
        {
        }

        match(input,29,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalJexTest

    // $ANTLR start synpred46_InternalJexTest
    public final void synpred46_InternalJexTest_fragment() throws RecognitionException {   
        // InternalJexTest.g:7941:4: ( '<' )
        // InternalJexTest.g:7941:6: '<'
        {
        match(input,57,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalJexTest

    // Delegated rules

    public final boolean synpred25_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalJexTest() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalJexTest_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA73 dfa73 = new DFA73(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA150 dfa150 = new DFA150(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA179 dfa179 = new DFA179(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\10\11\uffff";
    static final String dfa_3s = "\1\4\7\0\2\uffff";
    static final String dfa_4s = "\1\150\7\0\2\uffff";
    static final String dfa_5s = "\10\uffff\1\2\1\1";
    static final String dfa_6s = "\1\uffff\1\2\1\3\1\4\1\5\1\6\1\0\1\1\2\uffff}>";
    static final String[] dfa_7s = {
            "\5\10\5\uffff\4\10\3\uffff\5\10\1\uffff\11\10\3\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff\7\10\1\1\1\2\1\3\1\4\1\5\1\6\1\7\25\10\1\uffff\30\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2797:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_6 = input.LA(1);

                         
                        int index73_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalJexTest()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index73_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_7 = input.LA(1);

                         
                        int index73_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalJexTest()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index73_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_1 = input.LA(1);

                         
                        int index73_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalJexTest()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index73_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA73_2 = input.LA(1);

                         
                        int index73_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalJexTest()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index73_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA73_3 = input.LA(1);

                         
                        int index73_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalJexTest()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index73_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA73_4 = input.LA(1);

                         
                        int index73_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalJexTest()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index73_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA73_5 = input.LA(1);

                         
                        int index73_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalJexTest()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index73_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\13\uffff";
    static final String dfa_9s = "\1\1\12\uffff";
    static final String dfa_10s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_11s = "\1\150\1\uffff\10\0\1\uffff";
    static final String dfa_12s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_13s = "\2\uffff\1\2\1\1\1\5\1\6\1\7\1\0\1\3\1\4\1\uffff}>";
    static final String[] dfa_14s = {
            "\5\1\5\uffff\4\1\3\uffff\5\1\1\uffff\11\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\4\1\uffff\14\1\1\2\1\3\4\1\1\5\1\6\1\7\1\10\1\11\14\1\1\uffff\30\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 3426:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_7 = input.LA(1);

                         
                        int index82_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_3 = input.LA(1);

                         
                        int index82_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_2 = input.LA(1);

                         
                        int index82_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA82_8 = input.LA(1);

                         
                        int index82_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA82_9 = input.LA(1);

                         
                        int index82_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA82_4 = input.LA(1);

                         
                        int index82_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA82_5 = input.LA(1);

                         
                        int index82_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA82_6 = input.LA(1);

                         
                        int index82_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalJexTest()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\1\53\2\uffff\1\72\7\uffff";
    static final String dfa_16s = "\1\103\2\uffff\1\101\7\uffff";
    static final String dfa_17s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_18s = "\13\uffff}>";
    static final String[] dfa_19s = {
            "\1\5\15\uffff\1\6\1\3\4\uffff\1\1\1\2\1\4\1\7\1\10",
            "",
            "",
            "\1\12\6\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "3491:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String dfa_20s = "\130\uffff";
    static final String dfa_21s = "\1\2\127\uffff";
    static final String dfa_22s = "\1\4\1\0\126\uffff";
    static final String dfa_23s = "\1\150\1\0\126\uffff";
    static final String dfa_24s = "\2\uffff\1\2\124\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\126\uffff}>";
    static final String[] dfa_26s = {
            "\5\2\5\uffff\4\2\3\uffff\2\2\1\1\2\2\1\uffff\11\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\43\2\1\uffff\30\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "4301:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_1 = input.LA(1);

                         
                        int index100_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index100_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\44\uffff";
    static final String dfa_28s = "\1\4\2\0\41\uffff";
    static final String dfa_29s = "\1\147\2\0\41\uffff";
    static final String dfa_30s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_31s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_32s = {
            "\1\5\1\1\3\5\16\uffff\1\2\1\43\2\uffff\1\5\2\uffff\1\5\12\uffff\1\5\1\uffff\1\3\1\uffff\1\5\13\uffff\1\5\12\uffff\2\5\4\uffff\1\5\3\uffff\1\5\1\uffff\1\4\1\5\1\uffff\1\5\3\uffff\3\5\1\uffff\13\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "4322:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_0==RULE_ID) ) {s = 1;}

                        else if ( (LA99_0==23) ) {s = 2;}

                        else if ( (LA99_0==43) && (synpred17_InternalJexTest())) {s = 3;}

                        else if ( (LA99_0==80) && (synpred17_InternalJexTest())) {s = 4;}

                        else if ( (LA99_0==RULE_STRING||(LA99_0>=RULE_HEX && LA99_0<=RULE_DECIMAL)||LA99_0==27||LA99_0==30||LA99_0==41||LA99_0==45||LA99_0==57||(LA99_0>=68 && LA99_0<=69)||LA99_0==74||LA99_0==78||LA99_0==81||LA99_0==83||(LA99_0>=87 && LA99_0<=89)||(LA99_0>=91 && LA99_0<=101)||LA99_0==103) ) {s = 5;}

                        else if ( (LA99_0==24) ) {s = 35;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_1 = input.LA(1);

                         
                        int index99_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index99_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA99_2 = input.LA(1);

                         
                        int index99_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index99_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_33s = {
            "\5\2\5\uffff\4\2\3\uffff\5\2\1\uffff\11\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\41\2\1\1\1\2\1\uffff\30\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "4401:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_1 = input.LA(1);

                         
                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\40\uffff";
    static final String dfa_35s = "\1\4\26\uffff\1\0\10\uffff";
    static final String dfa_36s = "\1\147\26\uffff\1\0\10\uffff";
    static final String dfa_37s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_38s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_39s = {
            "\1\14\1\5\3\14\16\uffff\1\35\3\uffff\1\2\2\uffff\1\14\12\uffff\1\5\3\uffff\1\1\13\uffff\1\5\24\uffff\1\14\2\uffff\1\26\1\uffff\1\3\3\uffff\1\27\1\30\1\31\1\uffff\4\5\4\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "4442:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA103_0==45) ) {s = 1;}

                        else if ( (LA103_0==27) ) {s = 2;}

                        else if ( (LA103_0==83) ) {s = 3;}

                        else if ( (LA103_0==103) && (synpred19_InternalJexTest())) {s = 4;}

                        else if ( (LA103_0==RULE_ID||LA103_0==41||LA103_0==57||(LA103_0>=91 && LA103_0<=94)) ) {s = 5;}

                        else if ( (LA103_0==RULE_STRING||(LA103_0>=RULE_HEX && LA103_0<=RULE_DECIMAL)||LA103_0==30||LA103_0==78||(LA103_0>=95 && LA103_0<=98)) ) {s = 12;}

                        else if ( (LA103_0==81) ) {s = 22;}

                        else if ( (LA103_0==87) ) {s = 23;}

                        else if ( (LA103_0==88) ) {s = 24;}

                        else if ( (LA103_0==89) ) {s = 25;}

                        else if ( (LA103_0==99) ) {s = 26;}

                        else if ( (LA103_0==100) ) {s = 27;}

                        else if ( (LA103_0==101) ) {s = 28;}

                        else if ( (LA103_0==23) ) {s = 29;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA103_23 = input.LA(1);

                         
                        int index103_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalJexTest()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index103_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\46\uffff";
    static final String dfa_41s = "\1\4\2\0\43\uffff";
    static final String dfa_42s = "\1\147\2\0\43\uffff";
    static final String dfa_43s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_44s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_45s = {
            "\1\5\1\1\3\5\6\uffff\1\5\7\uffff\1\2\3\uffff\1\5\2\uffff\1\5\12\uffff\1\5\1\uffff\1\3\1\uffff\1\5\13\uffff\1\5\12\uffff\2\5\4\uffff\1\5\3\uffff\2\5\1\4\1\5\1\uffff\1\5\3\uffff\17\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_40;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4925:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_0 = input.LA(1);

                         
                        int index112_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA112_0==RULE_ID) ) {s = 1;}

                        else if ( (LA112_0==23) ) {s = 2;}

                        else if ( (LA112_0==43) && (synpred23_InternalJexTest())) {s = 3;}

                        else if ( (LA112_0==80) && (synpred23_InternalJexTest())) {s = 4;}

                        else if ( (LA112_0==RULE_STRING||(LA112_0>=RULE_HEX && LA112_0<=RULE_DECIMAL)||LA112_0==15||LA112_0==27||LA112_0==30||LA112_0==41||LA112_0==45||LA112_0==57||(LA112_0>=68 && LA112_0<=69)||LA112_0==74||(LA112_0>=78 && LA112_0<=79)||LA112_0==81||LA112_0==83||(LA112_0>=87 && LA112_0<=101)||LA112_0==103) ) {s = 5;}

                         
                        input.seek(index112_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA112_1 = input.LA(1);

                         
                        int index112_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index112_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA112_2 = input.LA(1);

                         
                        int index112_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index112_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\43\uffff";
    static final String dfa_47s = "\1\4\1\0\41\uffff";
    static final String dfa_48s = "\1\147\1\0\41\uffff";
    static final String dfa_49s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_50s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_51s = {
            "\5\2\16\uffff\1\1\3\uffff\1\2\2\uffff\1\2\12\uffff\1\2\1\uffff\1\2\1\uffff\1\2\13\uffff\1\2\12\uffff\2\2\4\uffff\1\2\3\uffff\1\2\2\uffff\1\2\1\uffff\1\2\3\uffff\3\2\1\uffff\13\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "5349:1: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_1 = input.LA(1);

                         
                        int index119_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalJexTest()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index119_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\42\uffff";
    static final String dfa_53s = "\1\4\2\0\37\uffff";
    static final String dfa_54s = "\1\147\2\0\37\uffff";
    static final String dfa_55s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_56s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_57s = {
            "\1\4\1\1\3\4\16\uffff\1\2\3\uffff\1\4\2\uffff\1\4\12\uffff\1\4\1\uffff\1\3\1\uffff\1\4\13\uffff\1\4\12\uffff\2\4\4\uffff\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\1\4\3\uffff\3\4\1\uffff\13\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "5404:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA118_0 = input.LA(1);

                         
                        int index118_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA118_0==RULE_ID) ) {s = 1;}

                        else if ( (LA118_0==23) ) {s = 2;}

                        else if ( (LA118_0==43) && (synpred27_InternalJexTest())) {s = 3;}

                        else if ( (LA118_0==RULE_STRING||(LA118_0>=RULE_HEX && LA118_0<=RULE_DECIMAL)||LA118_0==27||LA118_0==30||LA118_0==41||LA118_0==45||LA118_0==57||(LA118_0>=68 && LA118_0<=69)||LA118_0==74||LA118_0==78||LA118_0==81||LA118_0==83||(LA118_0>=87 && LA118_0<=89)||(LA118_0>=91 && LA118_0<=101)||LA118_0==103) ) {s = 4;}

                         
                        input.seek(index118_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA118_1 = input.LA(1);

                         
                        int index118_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalJexTest()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index118_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA118_2 = input.LA(1);

                         
                        int index118_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalJexTest()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index118_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 118, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "6461:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA141_1 = input.LA(1);

                         
                        int index141_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index141_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 141, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "6482:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA140_0 = input.LA(1);

                         
                        int index140_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA140_0==RULE_ID) ) {s = 1;}

                        else if ( (LA140_0==23) ) {s = 2;}

                        else if ( (LA140_0==43) && (synpred31_InternalJexTest())) {s = 3;}

                        else if ( (LA140_0==80) && (synpred31_InternalJexTest())) {s = 4;}

                        else if ( (LA140_0==RULE_STRING||(LA140_0>=RULE_HEX && LA140_0<=RULE_DECIMAL)||LA140_0==27||LA140_0==30||LA140_0==41||LA140_0==45||LA140_0==57||(LA140_0>=68 && LA140_0<=69)||LA140_0==74||LA140_0==78||LA140_0==81||LA140_0==83||(LA140_0>=87 && LA140_0<=89)||(LA140_0>=91 && LA140_0<=101)||LA140_0==103) ) {s = 5;}

                        else if ( (LA140_0==24) ) {s = 35;}

                         
                        input.seek(index140_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA140_1 = input.LA(1);

                         
                        int index140_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index140_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA140_2 = input.LA(1);

                         
                        int index140_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index140_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 140, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "6561:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA142_1 = input.LA(1);

                         
                        int index142_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index142_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 142, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_58s = {
            "\5\2\5\uffff\4\2\3\uffff\5\2\1\uffff\11\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\14\2\1\1\26\2\1\uffff\30\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "6726:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "6775:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_1 = input.LA(1);

                         
                        int index149_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "6796:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_0 = input.LA(1);

                         
                        int index148_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA148_0==RULE_ID) ) {s = 1;}

                        else if ( (LA148_0==23) ) {s = 2;}

                        else if ( (LA148_0==43) && (synpred35_InternalJexTest())) {s = 3;}

                        else if ( (LA148_0==80) && (synpred35_InternalJexTest())) {s = 4;}

                        else if ( (LA148_0==RULE_STRING||(LA148_0>=RULE_HEX && LA148_0<=RULE_DECIMAL)||LA148_0==27||LA148_0==30||LA148_0==41||LA148_0==45||LA148_0==57||(LA148_0>=68 && LA148_0<=69)||LA148_0==74||LA148_0==78||LA148_0==81||LA148_0==83||(LA148_0>=87 && LA148_0<=89)||(LA148_0>=91 && LA148_0<=101)||LA148_0==103) ) {s = 5;}

                        else if ( (LA148_0==24) ) {s = 35;}

                         
                        input.seek(index148_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA148_1 = input.LA(1);

                         
                        int index148_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index148_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA148_2 = input.LA(1);

                         
                        int index148_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalJexTest()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index148_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA150 extends DFA {

        public DFA150(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 150;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "6875:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA150_1 = input.LA(1);

                         
                        int index150_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index150_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 150, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\1\41\127\uffff";
    static final String dfa_60s = "\1\4\40\0\67\uffff";
    static final String dfa_61s = "\1\150\40\0\67\uffff";
    static final String dfa_62s = "\41\uffff\1\2\65\uffff\1\1";
    static final String dfa_63s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\67\uffff}>";
    static final String[] dfa_64s = {
            "\1\27\1\1\1\23\1\24\1\25\5\uffff\4\41\3\uffff\2\41\1\40\2\41\1\uffff\1\12\2\41\1\17\5\41\3\uffff\1\41\1\uffff\1\2\1\uffff\1\41\1\uffff\1\11\13\41\1\15\12\41\1\10\1\7\4\41\1\6\3\41\1\20\1\41\1\uffff\1\31\1\41\1\13\3\41\1\32\1\33\1\34\1\41\1\3\1\4\1\5\1\16\1\21\1\22\1\26\1\30\1\35\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA153 extends DFA {

        public DFA153(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 153;
            this.eot = dfa_20;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "7215:1: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA153_1 = input.LA(1);

                         
                        int index153_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA153_2 = input.LA(1);

                         
                        int index153_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA153_3 = input.LA(1);

                         
                        int index153_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA153_4 = input.LA(1);

                         
                        int index153_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA153_5 = input.LA(1);

                         
                        int index153_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA153_6 = input.LA(1);

                         
                        int index153_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA153_7 = input.LA(1);

                         
                        int index153_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA153_8 = input.LA(1);

                         
                        int index153_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA153_9 = input.LA(1);

                         
                        int index153_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA153_10 = input.LA(1);

                         
                        int index153_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA153_11 = input.LA(1);

                         
                        int index153_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA153_12 = input.LA(1);

                         
                        int index153_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA153_13 = input.LA(1);

                         
                        int index153_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA153_14 = input.LA(1);

                         
                        int index153_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA153_15 = input.LA(1);

                         
                        int index153_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA153_16 = input.LA(1);

                         
                        int index153_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA153_17 = input.LA(1);

                         
                        int index153_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA153_18 = input.LA(1);

                         
                        int index153_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA153_19 = input.LA(1);

                         
                        int index153_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA153_20 = input.LA(1);

                         
                        int index153_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA153_21 = input.LA(1);

                         
                        int index153_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA153_22 = input.LA(1);

                         
                        int index153_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA153_23 = input.LA(1);

                         
                        int index153_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA153_24 = input.LA(1);

                         
                        int index153_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA153_25 = input.LA(1);

                         
                        int index153_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA153_26 = input.LA(1);

                         
                        int index153_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA153_27 = input.LA(1);

                         
                        int index153_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA153_28 = input.LA(1);

                         
                        int index153_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA153_29 = input.LA(1);

                         
                        int index153_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA153_30 = input.LA(1);

                         
                        int index153_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA153_31 = input.LA(1);

                         
                        int index153_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA153_32 = input.LA(1);

                         
                        int index153_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalJexTest()) ) {s = 87;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index153_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 153, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\135\uffff";
    static final String dfa_66s = "\1\2\134\uffff";
    static final String dfa_67s = "\1\4\1\0\133\uffff";
    static final String dfa_68s = "\1\152\1\0\133\uffff";
    static final String dfa_69s = "\2\uffff\1\2\131\uffff\1\1";
    static final String dfa_70s = "\1\uffff\1\0\133\uffff}>";
    static final String[] dfa_71s = {
            "\5\2\5\uffff\6\2\1\uffff\5\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\3\2\1\uffff\14\2\1\1\26\2\1\uffff\30\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "7865:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_1 = input.LA(1);

                         
                        int index171_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalJexTest()) ) {s = 92;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index171_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "7941:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA169_1 = input.LA(1);

                         
                        int index169_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalJexTest()) ) {s = 92;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index169_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 169, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\7\uffff";
    static final String dfa_73s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_74s = "\1\5\1\uffff\1\16\1\5\1\uffff\1\16\1\uffff";
    static final String dfa_75s = "\1\133\1\uffff\1\134\1\106\1\uffff\1\134\1\uffff";
    static final String dfa_76s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_77s = "\7\uffff}>";
    static final String[] dfa_78s = {
            "\1\2\125\uffff\1\1",
            "",
            "\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\3\uffff\1\3\1\uffff\1\4\74\uffff\1\4",
            "\1\5\100\uffff\1\6",
            "",
            "\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\3\uffff\1\3\1\uffff\1\4\74\uffff\1\4",
            ""
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "8444:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x000000000062C002L,0x0000000010000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x000000000062C002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000080000800020L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x000000000063C002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x000001C0026CC032L,0x0000000010000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x000001C0026CC012L,0x0000000010000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00000000026CC012L,0x0000000010000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x000000000268C012L,0x0000000010000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x000000000268C002L,0x0000000010000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000000000260C002L,0x0000000010000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x000000000260C002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x000000000261C002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x02002200488001F0L,0x000000BFFB8A4430L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000800010L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000080001800020L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000001010000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x000000000C000010L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x000000000C000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000008000020L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000008010000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x000000035020C010L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x000000035021C010L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000350200010L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000001000020L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000020000022L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000048000030L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000048000032L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x02002200588001F0L,0x000000BFFB8A4430L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x02002200D88001F0L,0x000000BFFB8A4430L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000100000010L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000F40210010L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000040200000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000008800000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0E0F880000800020L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000002000000020L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000010000000020L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x00000E0008000010L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x00000C0008000010L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000080008010010L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000080008000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000208010000020L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000180000000012L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000180000000002L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x07F0000000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0C00000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x1000000000000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x000F800000000002L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x4E0F880000800022L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x8600080000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0200080000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000030L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x00000000000003C0L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000020000002L,0x0000000000003000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000020000000020L,0x0000000038000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0200020000000020L,0x0000000078000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000080000800020L,0x0000020000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0400000000010000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000020800002L,0x0000000000007000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x02002A00498001F0L,0x000000BFFB8B4430L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000020000002L,0x0000000000007000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000010010000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x02002200488001F0L,0x000000BFFB8AC430L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000010000L,0x0000000000008000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x02002A00488081F0L,0x000000BFFF8BC430L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000010000L,0x0000000000010000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x02002200488081F0L,0x000000BFFF8AC430L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x02002200C88081F2L,0x000000BFFF8A4430L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x02002200488081F2L,0x000000BFFF8A4430L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x02002A00488001F0L,0x000000BFFB8A4430L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000080010810020L,0x0000000000700000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000010000L,0x0000000000500000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000010000L,0x0000000000100000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x02002200C88081F0L,0x000000BFFF8A4430L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000080010000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x02002200488081F0L,0x000000BFFF8A4430L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x02002200C88001F0L,0x000000BFFB8A4430L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x02002200498001F0L,0x000000BFFB8A4430L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x02002200588081F0L,0x000000BFFF8A4430L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x02002200D88081F0L,0x000000BFFF8A4430L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000800002L,0x0000000000004000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0200000000800002L,0x0000000000004000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000001000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x02002200488001F2L,0x000000BFFB8A4430L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000014000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000014000000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0200000020000002L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000020000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000020L,0x0000000008000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000020L,0x0000000020000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000040L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000022L});

}